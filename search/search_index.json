{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#the-technologies-covered","title":"The technologies covered","text":"<ul> <li> POO: advanced concepts</li> <li> SOLID principles</li> <li> Design patterns</li> <li> Threads</li> <li> AOP &amp; AspectJ</li> <li> Software architecture (Styles and patterns)</li> <li> JavaFX</li> <li> Javadoc</li> <li> JUnit</li> <li> H2</li> <li> Spring &amp; Spring Boot</li> <li> Maven &amp; Gradle</li> <li> Framework Python</li> <li> Framework Javascript</li> <li> Git</li> <li> Docker</li> <li> SCRUM tools</li> <li> Eclipse / Intellij idea </li> </ul> <p>Sorry the resources are a mix of french and english \ud83d\ude05. </p>"},{"location":"#contacts","title":"Contacts","text":"<p>We can write to us for your input and contributions or to report a broken link \ud83d\ude09</p> <ul> <li>vincent.englebert@unamur.be (Professor)</li> <li>ignace.azonhoumon@unamur.be (Teaching Assistant)</li> </ul>"},{"location":"fiches/","title":"Overview","text":""},{"location":"fiches/aop/","title":"Pr\u00e9requis","text":"<p>Objectif: Permettre \u00e0 l'\u00e9tudiant de mettre en pratique les concepts de base d'AspectJ.</p> <p>Dur\u00e9e: Il se d\u00e9roulera en une s\u00e9ance de 3h au plus.</p> <p>Pr\u00e9requis:</p> <ul> <li>Disposer d'un ordinateur</li> <li>Avoir les bases en Java et en POO</li> <li> Installer Eclipse et le plugin AJDT</li> <li>Envie de d\u00e9couvrir la technologie</li> </ul> <p>Cependant ce TP n'aborde pas toutes les notions et nuances de l'AOP. Vous disposez des ressources compl\u00e9mentaires sur Webcampus.</p>"},{"location":"fiches/aop/tp_transaction/","title":"TP1 AspectJ - Gestion des transactions \ud83d\ude0e","text":"<p>Objectif </p> <p>A la fin de cette section, tu seras capable d'impl\u00e9menter un syst\u00e8me s\u00e9curis\u00e9 de gestion de transactions bancaires.</p>"},{"location":"fiches/aop/tp_transaction/#qcm","title":"QCM","text":"<p>Questions</p> <p>1- Qu'est ce que l'AOP et les m\u00e9chanismes similaires \u00e0 l'AOP ?</p> <p>2- Qu'est ce que le tissage dynamique et le tissage statique ?</p> <p>3- Rappel les concepts de base pour une AOP ?</p>"},{"location":"fiches/aop/tp_transaction/#i-creation-et-execution-dun-aspect","title":"I- Cr\u00e9ation et ex\u00e9cution d'un aspect","text":"<p>Entrons dans le vif du sujet \ud83e\udd13. Voici le diagramme de classe des principales classes du projet:</p> <pre><code>classDiagram\n  App : +main(String[] args)$ void\n  App:  +ioc() void\n  App:  -initilization() Compte\n  App:  -welcome(Compte compte) void\n  App:  -transactions(Compte compte) void\n\n  Compte:  -Float solde\n  Compte:  -String rib\n  Compte:  -Client client\n  Compte:  +Compte(Client client)\n  Compte:  +getSolde() Float\n  Compte : +deposer(Float montant) Float\n  Compte : +retirer(Float montant) Float\n  Compte:  +getClient() Client\n  Compte:  +setRib(String rib) void\n  Compte:  +getRib() String\n  Compte : +tranferer(String destName, Float montant) Compte\n  Compte : +tranferer(Compte dest, Float montant) Compte\n\n\n  Client:  -String identite\n  Client:  -String password\n  Client:  -Hashtable contacts\n  Client:  +Client()\n  Client:  +Client(String identite)\n  Client:  +Client(String identite, String password)\n  Client:  +setIdentite(String identite) void\n  Client:  +getIdentite() String\n  Client:  +setPassword(String password) void\n  Client:  +getPassword() String\n  Client:  +addContact(String ident, Compte c) Hashtable\n  Client:  +getContacts() Hashtable\n\n\n\n  Compte &lt;.. App: uses\n  Client &lt;.. App: uses\n  Client \"1\" &lt;.. \"1\" Compte:linked to\n</code></pre> <p>Par d\u00e9faut, l'application est fournie avec un compte test: <code>anonym</code>.</p> <p>\ud83d\udc49 [R\u00e9cup\u00e9rer le projet]</p> <p>Maintenant nous allons convertir notre projet en un projet AspectJ.</p>"},{"location":"fiches/aop/tp_transaction/#initialisation-dun-projet-aspectj","title":"Initialisation d'un projet AspectJ","text":"<p>Faites un clic droit sur le dossier d'un simple projet et proc\u00e9der comme suit:</p> <p></p> <p>Et apr\u00e8s vous avez dans l'Explorer:</p> <p></p> <p>Nous allons pouvoir cr\u00e9er maintenant des aspects. Pour ce faire:</p> <p>A faire</p> <ol> <li>Cr\u00e9er un aspect <code>WithoutAnnotationAspect</code> et <code>WithAnnotationAspect</code> pour encapsuler les aspects de s\u00e9curit\u00e9 des transactions. Intercepter l'appel des m\u00e9thodes <code>deposer</code> et <code>retirer</code> avant leur ex\u00e9cution.</li> </ol>"},{"location":"fiches/aop/tp_transaction/#ancienne-synthaxe-de-creation","title":"Ancienne synthaxe de cr\u00e9ation","text":"<p>Voici le code source de l'aspect</p> <pre><code>package be.unamur.aspects;\n\npublic aspect WithoutAnnotationAspect {\n\n    // Permet de g\u00e9rer le contr\u00f4le des donn\u00e9es avant les transactions\n    pointcut deposerControl(): execution(public be.unamur.Compte deposer(Float));\n    pointcut retirerControl(): execution(public be.unamur.Compte retirer(Float));\n\n    before(): deposerControl(){\n        System.out.println(\"[Aspect] Control avant le d\u00e9p\u00f4t d'argent\");\n    }\n\n    before(): retirerControl(){\n        System.out.println(\"[Aspect] Control avant le retrait d'argent\");\n    }\n\n}\n</code></pre> <p>Questions</p> <p>Pour <code>WithoutAnnotationAspect</code>, vous devriez aboutir au r\u00e9sultat suivant. Quelles sont les informations que donne la <code>Cross References View</code> ?</p> <p></p> <p>R\u00e9sultat apr\u00e8s ex\u00e9cution:</p> <p></p>"},{"location":"fiches/aop/tp_transaction/#creation-a-laide-dannotations","title":"Cr\u00e9ation \u00e0 l'aide d'annotations","text":"<p>A faire</p> <ol> <li>Cr\u00e9er  l'aspect <code>WithAnnotationAspect</code>.</li> <li>Cr\u00e9er deux aspects permettant d'envoyer d'email et de SMS au client apr\u00e8s l'op\u00e9ration de retrait. Pas besoin d'impl\u00e9menter les fonctionnalit\u00e9s en question, faites juste des affichages en console.</li> </ol> <p>Code source:</p> <pre><code>package be.unamur.aspects;\n\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Pointcut;\nimport org.aspectj.lang.annotation.After;\n\n@Aspect\npublic class WithAnnotationAspect {\n\n    @Pointcut(\"execution(public be.unamur.Compte retirer(Float))\")\n    public void retirerPostEvent() {\n\n    }\n\n    @After(\"retirerPostEvent()\")\n    public void retirerEmailEvent() {\n        // Envoyer un email au client\n        System.out.println(\"[@spect] Envoi de mail au client apr\u00e8s le retrait d'argent\");\n    }\n\n    @After(\"retirerPostEvent()\")\n    public void retirerSMSEvent() {\n        // Envoyer un SMS au client\n        System.out.println(\"[@spect] Envoi de SMS au client apr\u00e8s le retrait d'argent\");\n    }\n\n}\n</code></pre> <p>R\u00e9sultat en console:</p> <p></p> <p>Pour la suite ...</p> <p>Commentez les <code>lignes 2 et 3 annot\u00e9s</code> sur l'image pr\u00e9c\u00e9dante et aussi annuler l'effet des aspects.</p>"},{"location":"fiches/aop/tp_transaction/#ii-manipuler-un-pointcut","title":"II- Manipuler un pointcut","text":""},{"location":"fiches/aop/tp_transaction/#variable-thisjoinpoint-et-wilcards","title":"Variable <code>thisJoinPoint</code> et <code>Wilcards</code>","text":""},{"location":"fiches/aop/tp_transaction/#logging","title":"Logging","text":"<p>A faire</p> <ol> <li>S\u00e9parer la pr\u00e9occupation transversale de log du code m\u00e9tier en utilisant un aspect <code>LoggingAspect</code> qui ne trace que les d\u00e9p\u00f4ts et les retraits en affichant en console l'identit\u00e9 du client, le montant de la transaction et le num\u00e9ro de compte impliqu\u00e9s dans les transactions.</li> </ol> <p>Code \u00e0 manipuler:</p> <pre><code>package be.unamur.aspects;\n\nimport java.util.logging.Logger;\n\nimport be.unamur.Compte;\n\npublic aspect LoggingAspect{\n\n    private static int compteur = 1;\n\n    Logger log = Logger.getLogger(this.getClass().getName());\n\n    private static String transactionType(String methodName) {\n        String numeroTransaction = \"\";\n         if(methodName == \"deposer\") \n            numeroTransaction = String.format(\"TR%d ==&gt;\", compteur);\n         else if (methodName == \"retirer\") \n            numeroTransaction = String.format(\"TR%d &lt;==\", compteur);\n         return numeroTransaction;\n    }\n\n    /* === poincut ==== */\n    pointcut transactionLog(): \n    (\n        xxx\n    );\n\n    /* === advice === */\n    xxx(): transactionLog(){\n\n        // r\u00e9cup\u00e9rer le compte sur lequel s'op\u00e8re la transaction\n\n        // r\u00e9cup\u00e9rer le nom de la m\u00e9thode\n\n        String transaction = transactionType(methodName);\n\n        String trace = String.format(\"[%s %s(%s); Montant = %.2f; Solde = %.2f]\\n\", transaction, compte.getRib(), compte.getClient().getIdentite(), montant, compte.getSolde());\n        log.info(trace);\n        compteur++;\n\n    }\n\n}\n</code></pre> <p>Voici le r\u00e9sultat attendu:</p> <p></p> <p>Questions</p> <ol> <li>Quelle est la diff\u00e9rence entre les bouts de code suivants ? Astuce (Expliquer \u00e0 l'aide du code)</li> </ol> <p></p> <p></p> <p></p>"},{"location":"fiches/aop/tp_transaction/#solde-non-negatif","title":"Solde non n\u00e9gatif","text":"<p>Vous auriez remarqu\u00e9 que des retraits n\u00e9gatifs sont possibles. Nous allons essayez d'y rem\u00e9dier avec un aspect.</p> <p>Questions</p> <ol> <li>V\u00e9rifier le solde du compte avant de proc\u00e9der \u00e0 des op\u00e9rations pour \u00e9viter les retraits n\u00e9gatifs. Cr\u00e9er un aspect <code>TransactionyAspect \u00e0 base d'annotation</code>.</li> </ol> <p>Code de base:</p> <pre><code>package be.unamur.aspects;\n\nimport org.aspectj.lang.JoinPoint;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Pointcut;\n\nimport be.unamur.Compte;\n\n@Aspect\npublic class TransactionAspect {\n\n    @Pointcut(\"xxx\")\n    public void retirerTransactionSecurity() {} \n\n\n    @xxx(\"retirerTransactionSecurity(montant)\")\n    public void retirerSecurityAdvice(JoinPoint joinPoint){\n        // R\u00e9cup\u00e9rer le compte\n\n        // Comparer le montant du retrait au montant dans le compte\n        if(montant &gt; compte.getSolde()) {\n            /*errorInTransaction = true;*/\n            throw new RuntimeException(\"Compte insuffisant: \"+ montant + \" &gt; \" + compte.getSolde());\n        }\n    }\n}\n</code></pre> <p></p>"},{"location":"fiches/aop/tp_transaction/#precedence-sans-mecanisme-aspectj","title":"Pr\u00e9c\u00e9dence sans m\u00e9canisme AspectJ","text":"<p>A faire</p> <ol> <li>Nous remarquons dans la capture pr\u00e9c\u00e9dente que les logs s'effectuent avant le d\u00e9clenchement de l'erreur, ce qui donne un comportement incoh\u00e9rent. Corriger cela en utilisant une variable <code>static volatile</code></li> </ol> <p>R\u00e9sultat attendu: </p> <p></p> <p>Nous allons \u00e0 pr\u00e9sent ajouter le m\u00e9canisme d'authentication.</p>"},{"location":"fiches/aop/tp_transaction/#login-with-around","title":"Login with <code>around</code>","text":"<p>A faire</p> <ol> <li>Ajoutez le m\u00e9canisme de connexion avec un identifiant et un mot de passe</li> </ol> <p>Code de base:</p> <pre><code>package be.unamur.aspects;\nimport be.unamur.Client;\nimport be.unamur.Compte;\nimport be.unamur.Reader;\nimport be.unamur.exceptions.AlreadyClosedException;\n\npublic aspect AuthenticationAspect {\n\n    // r\u00e9cup\u00e9rer les param\u00e8tres de connexion de bob\n    String myLogin = \"bob\";\n    String myPass = \"123\";\n    Client client = new Client(myLogin, myPass);\n\n    pointcut login(): (\n        xxx\n    );\n\n    Compte around(): login(){\n\n        Compte compte = null;\n        try {\n            Reader scanner = Reader.getInstance();\n            System.out.print(\"Votre identite: \");\n            String identite = scanner.next();\n            System.out.print(\"Votre password: \");\n            String password = scanner.next();\n\n            // M\u00e9chanisme de v\u00e9rification des param\u00e8tres fournis\n            if(myLogin.equals(identite) &amp;&amp; myPass.equals(password)) {\n                try {\n                    // Zapper\n                    // proceed();\n                    // Retourner le compte de bob depuis la base de donn\u00e9es\n                    // Ici nous allons nous contenter d'initialiser un compte\n                    compte = new Compte(client);\n\n                    // Charger ses contacts\n                    chargerContacts(client);\n\n                }catch(Throwable e) {\n                    e.printStackTrace();\n                }\n            }else {\n                // Informer que la connexion n'est pas possible\n                throw new RuntimeException(\"Identifiants incorrects\");\n            }\n\n        }catch(AlreadyClosedException a) {\n\n        }\n        return compte;\n    }\n\n    private void chargerContacts(Client client) {\n        System.out.printf(\"Chargement des contacts de: %s\\n\", client.getIdentite());\n        // Chargement des comptes de ses contacts depuis la base de donn\u00e9es\n        // le chargement doit \u00eatre dynamique pour tenir compte de chaque client\n        client.addContact(\"aline\", new Compte(new Client(\"aline\")));\n        client.addContact(\"peter\", new Compte(new Client(\"peter\")));\n        client.addContact(\"zoe\", new Compte(new Client(\"zoe\")));\n    }\n\n}\n</code></pre> <p></p>"},{"location":"fiches/aop/tp_transaction/#changement-du-format-rib","title":"Changement du format rib","text":"<p>A faire</p> <p>Changer le format pour un format \"0000000000\" quand l'authentification est effectu\u00e9e. </p> <p>Warning</p> <p><code>Hypoth\u00e8se:</code> lorsque <code>AuthenticationAspect</code> est d\u00e9sactiv\u00e9, tous les pointcuts le sont aussi.</p> <p>Sans connexion:</p> <p></p> <p>Avec connexion:</p> <p></p>"},{"location":"fiches/aop/tp_transaction/#verification-avant-retrait","title":"V\u00e9rification avant retrait","text":"<p>A faire</p> <p>Ajoutez dans <code>AuthenticationAspect</code> la capacit\u00e9 de demander \u00e0 l'utilisateur de s'identifier avant tout retrait, m\u00eame les retraits au cours des transferts. </p> <p>R\u00e9sultat attendu:</p> <p></p> <p>Warning</p> <p>Pour la suite, ajouter ce bout de code dans <code>TransactionAspect</code> afin de suivre la propagation des erreurs dans les transactions et de r\u00e9initialiser la variable <code>errorInTransaction</code> sinon les logs ne s'afficheront plus apr\u00e8s un transfert.</p> <p>Probl\u00e8me:</p> <p></p> <p>Code \u00e0 ajouter dans <code>TransactionAspect</code></p> <pre><code>@Pointcut(\"(call(* *.*.Compte.*(Float)) || call(* *.*.Compte.transferer(String, Float)))\")\n    public void errorInTransactionInit() {}\n\n@Before(\"errorInTransactionInit()\")\npublic void errorInTransactionAdvice(JoinPoint joinPoint){\n    String thisName = joinPoint.getThis().getClass().getName();\n    if(thisName==\"be.unamur.App\") {\n        errorInTransaction = false;\n    }\n}\n</code></pre>"},{"location":"fiches/aop/tp_transaction/#synchronization","title":"Synchronization","text":"<p>Mettre \u00e0 jour le solde du compte de mani\u00e8re atomique pour garantir l'int\u00e9grit\u00e9 des donn\u00e9es. Astuce (Synchroniser les m\u00e9thodes <code>retirer</code>, <code>deposer</code>, <code>transferer</code>). Ajoutez un poincut dans l'aspect <code>TransactionAspect</code></p> <p>Evitez le sc\u00e9nario suivant:</p> <p></p>"},{"location":"fiches/aop/tp_transaction/#pointcut-initialization-et-mechanisme-dintroduction","title":"Pointcut <code>Initialization</code> et m\u00e9chanisme d'introduction","text":"<p>A faire</p> <p>Nous disposons de trois m\u00e9canismes de notification au client lors d'un <code>d\u00e9p\u00f4t sur son compte</code>. Veuillez permettre au client de choisir le m\u00e9canisme qui lui convient et permettre l'extensibilit\u00e9 du code en cons\u00e9quence avec l'aspect <code>NotificationAspect</code>.</p> <p>Code de base:</p> <pre><code>package be.unamur.aspects;\n\nimport be.unamur.Compte;\nimport be.unamur.impl.*;\nimport be.unamur.interfaces.INotificationChannel;\nimport be.unamur.interfaces.INotificationService;\n\npublic aspect NotificationAspect {\n\n    // =========== NOTIFICATIONS PAR 1..* CANAUX CHOISI(S) ===============\n    // Lier l'interface \u00e0 une impl\u00e9mentation par d\u00e9faut\n    INotificationChannel[] notificationChannels = {\n            new PushNotification(),\n            //new EmailNotification(),\n            //new SMSNotification(),\n    }; \n\n    declare parents:Compte implements INotificationService;\n\n    // Ajout le channel du client sur ce compte\n    private INotificationChannel[] Compte.channels;\n    // Le setter du channel\n    public void Compte.setChannels(INotificationChannel[] channels){\n        this.channels = channels;\n    }\n    //Le getter du channel\n    public INotificationChannel[] Compte.getChannels(){\n        return channels;\n    }\n\n    public void Compte.send() {\n        if(!TransactionAspect.errorInTransaction) {\n            // Diffuser aux channels choisis\n            xxx\n        }\n    }\n\n    // === LIAISON DE 1..* CANAUX DANS LE CONSTRUCTEUR ==================\n    pointcut sendNotification(): (\n        xxx\n    );\n\n    xxx(): sendNotification(){\n\n        xxx\n\n    }\n\n\n    // === ALERTE ENTREE D'ARGENT =======================================\n    pointcut entreeArgent(): (\n        xxx\n    );\n\n    xxx(): entreeArgent(){\n        xxx\n    }\n\n}\n</code></pre> <p>R\u00e9sultat attendu:</p> <p></p>"},{"location":"fiches/aop/tp_transaction/#optimisation-et-traitement-parallele","title":"Optimisation et traitement parall\u00e8le","text":"<p>A faire</p> <p>Afin d'all\u00e9ger l'envoi des notification et de profiter des capacit\u00e9s <code>hardware</code>, tu es invit\u00e9(e) \u00e0 utiliser la programmation par aspect pour mettre en parall\u00e8le les t\u00e2ches lourdes.</p> <p>Code de base:</p> <pre><code>package be.unamur.aspects;\n\npublic aspect ParalleleAspect {\n\n    pointcut parallelTask(): (\n        xxx\n    );\n\n    void around(): parallelTask(){\n\n        xxx\n    }\n\n}\n</code></pre> <p>R\u00e9sultat attendu:</p> <p></p> <p>Questions</p> <ol> <li>Que remarquez-vous par rapport aux aspects <code>NotificationAspect</code>et <code>parallelTask</code> au vu de leur d\u00e9pendance. Astuce (commentez l'un pour voir l'effet sur l'autre)</li> </ol>"},{"location":"fiches/aop/tp_transaction/#probleme-de-precedence","title":"Probl\u00e8me de pr\u00e9c\u00e9dence \ud83d\ude2c","text":"<p>\ud83d\udd25\ud83d\udd25\ud83d\udd25 Vous venez venez de remarquer que l'application donne une <code>id\u00e9e du maximum d'argent dans le compte du client</code> avant de v\u00e9rifier la l\u00e9gitimit\u00e9 de celui qui veut op\u00e9rer le retrait. \ud83d\udd25\ud83d\udd25\ud83d\udd25</p> <p>Allez \u00e0 la rescousse de <code>Bebank</code> sinon elle risque non seulement de fermer mais d'\u00eatre aussi poursuivie. \ud83e\udd20</p> <p></p> <p>R\u00e9soudre le probl\u00e8me qui se pose en suivant les \u00e9tapes ci-dessous: </p> <p>A faire</p> <ol> <li>Trouver une mani\u00e8re de faire passer l'execution de l'aspect <code>AuthenticationAspect</code> avant l'aspect <code>TransactionAspect</code> sur certains pointcuts.</li> </ol> <p>R\u00e9sultat attendu:</p> <p></p>"},{"location":"fiches/docker/","title":"Pr\u00e9requis","text":"<p>Objectif: L'objectif de ce TP est de te permettre d'utiliser docker comme technologie de d\u00e9ploiement d'applications dans une architecture de microservice.</p> <p>Cependant ce TP n'aborde pas toutes les notions et nuances de l'utilisation de docker.</p> <p>Dur\u00e9e: Il se d\u00e9roulera en une s\u00e9ance de 2h. Certains aspects cl\u00e9s seront abord\u00e9s. Les autres concepts seront couverts par des ressources en ligne s\u00e9lectionn\u00e9es que nous vous pr\u00e9sentons ici.</p> <p>Pr\u00e9requis:</p> <ul> <li>Etre capable de travailler en ligne de commande (bash, cmd, powershell ...)</li> <li>Disposer d'un ordinateur</li> <li>Installer docker desktop</li> </ul> <ul> <li>Disposer d'un compte sur dockerhub</li> <li>Envie de d\u00e9couvrir la technologie</li> </ul>"},{"location":"fiches/docker/commands/","title":"TP Docker","text":"<p>Objectif</p> <p>A la fin de cette section, tu seras capable de d\u00e9ployer un site wordpress bas\u00e9 sur la technologie docker.</p> <p>Contenu</p> <p>Installation Docker Desktop I- R\u00e9cup\u00e9rer une image II- Manipuler des conteneurs III- Automatiser les services IV- Persister les donn\u00e9es V- Contruire une image VI- Publier une image sur le Hub VII- Nettoyer les ressources orphelines </p>"},{"location":"fiches/docker/commands/#installation","title":"Installation","text":"<p>Questions</p> <ol> <li>Au cours de l'installation de docker, vous aviez d\u00fb (pour ceux qui sont sur Windows) permettre l'utilisation du client <code>Hyper-V</code> en activant la <code>virtualisation dans le BIOS</code> ou vous aviez d\u00fb installer <code>WSL (Windows Subsystem for Linux)</code>. Quel en est l'utilit\u00e9 ?</li> <li>Que savez-vous de <code>docker engine</code> et de <code>docker deamon</code> ?</li> <li>Quelle est la version de <code>docker</code> install\u00e9 ?</li> <li>Quelle est la version de <code>Docker Compose</code> install\u00e9 ?</li> </ol>"},{"location":"fiches/docker/commands/#docker-desktop","title":"Docker Desktop","text":"<p>Questions</p> <ol> <li>Lancez votre premier conteneur comme sur l'image. Quelles difficult\u00e9s rencontrez-vous?</li> <li>Commentez les zones mis en \u00e9vidence ?</li> <li>Quel est le nom du conteneur ?</li> <li>Que signifie les ports <code>8088:80</code>?</li> </ol> <p>Dans la suite du TP, nous allons essayer de lancer un site web wordpress dans un conteneur docker et en faire un sauvegarde sur notre hub. Pour y arriver, voici les grands axes du TP:</p> <p>1) R\u00e9cup\u00e9rer une image de wordpress sur docker-hub</p> <p>2) Installer la base de donn\u00e9es et faire communiquer les conteneurs</p> <p>3) Automatiser le d\u00e9marrage et l'extinction des services avec Docker Compose</p> <p>4) Cr\u00e9er son propre image et l'envoyer sur le hub</p>"},{"location":"fiches/docker/commands/#i-recuperer-une-image","title":"I- R\u00e9cup\u00e9rer une image","text":"<p>1) R\u00e9cup\u00e9rer une image de wordpress sur docker-hub</p> <p>Dans cette section, nous allons r\u00e9cup\u00e9rer une image de wordpress sur docker-hub. Allez sur docker-hub, et rechercher <code>wordpress</code></p> <p></p> <p>Questions</p> <ol> <li>Commentez les zones mis en \u00e9vidence ?</li> <li>Quelle est la commande pour r\u00e9cup\u00e9rer l'image de wordpress ? Astuce (Aller dans le d\u00e9tail de l'image choisie)</li> </ol> <p></p> <p>Questions</p> <ol> <li>Pouvez-vous commenter les diff\u00e9rentes zones de ce r\u00e9sultat ?</li> <li>Quelle est la version actuelle de wordpress ? Est-ce qu'il existe une image de docker dans cette version ?</li> <li>Que veut dire <code>alpine</code> ?</li> </ol> <p>Dans la section suivante nous allons lancer un conteneur bas\u00e9 sur <code>wordpress</code></p>"},{"location":"fiches/docker/commands/#ii-manipuler-des-conteneurs","title":"II- Manipuler des conteneurs","text":""},{"location":"fiches/docker/commands/#format-des-commandes-de-docker","title":"Format des commandes de docker","text":"<ul> <li> <p>Ancienne (Travaille toujours)</p> <p>docker &lt; command &gt; [option]      exemple : docker run --publish</p> </li> <li> <p>Nouvelle</p> <p>docker &lt; command &gt; &lt; sub-command &gt; [option]     exemple : docker container stop --publish</p> </li> </ul>"},{"location":"fiches/docker/commands/#lancer-un-conteneur","title":"Lancer un conteneur","text":"<p>Questions</p> <ol> <li>D\u00e9crivez les composantes de la commande ci-dessus ?</li> </ol> <p>Ex\u00e9cutez la commande suivante :</p> <pre><code>docker run --name some-wordpress --network some-network -d wordpress\n</code></pre> <p></p> <p></p> <p>Questions</p> <ol> <li>Expliquez les parties mises en \u00e9vidence ?</li> <li>Pourquoi la commande a t-elle \u00e9chou\u00e9e ?</li> </ol> <p>Ex\u00e9cutons plut\u00f4t cette commande sans l'option <code>--network</code>:</p> <pre><code>docker run --name some-wordpress -p 8080:80 -d wordpress\n</code></pre> <p>Questions</p> <ol> <li>Pour quelle raison cette commande ne fonctionne-t-elle pas non plus ?</li> <li>Constatez la pr\u00e9sence du conteneur dans <code>docker desktop</code>. Quel est son \u00e9tat ?</li> </ol> <p>Lancez le conteneur avec un autre nom:</p> <pre><code>docker run --name my-wordpress -p 8080:80 -d wordpress\n</code></pre> <p></p> <p>Questions</p> <ol> <li>Que signifie l'identifiant mis en \u00e9vidence ?</li> <li>L'<code>image docker</code> a t-elle \u00e9t\u00e9 t\u00e9l\u00e9charg\u00e9e \u00e0 nouveau ?</li> </ol> <p>V\u00e9rifiez la disponibilit\u00e9 du site \u00e0 l'adresse <code>http://127.0.0.1:8080</code>.</p>"},{"location":"fiches/docker/commands/#voir-les-logs","title":"Voir les logs","text":"<p>Sur <code>docker desktop</code>, voir les logs du conteneur <code>my-wordpress</code></p> <p>Les logs d'un conteneur peuvent aussi \u00eatre consult\u00e9s avec la commande:</p> <pre><code>docker container logs my-wordpress\n</code></pre>"},{"location":"fiches/docker/commands/#supprimer-un-conteneur","title":"Supprimer un conteneur","text":"<p>Supprimer le conteneur qui ne fonctionne pas dans <code>docker desktop</code>.</p> <p>Questions</p> <ol> <li>Quelle est la commande ex\u00e9cut\u00e9e en arri\u00e8re plan ?</li> <li>Les volumes associ\u00e9es aux conteneurs sont-elles persist\u00e9es ?</li> </ol> <p>Cela nous obligera \u00e0 faire quelques r\u00e9ajustements. En effet, un conteneur de base de donn\u00e9es, ne doit pas perdre ses donn\u00e9es \u00e0 chaque suppression.</p>"},{"location":"fiches/docker/commands/#renommer-un-conteneur","title":"Renommer un conteneur","text":"<p>Dans cette partie, nous allons renommer le conteneur <code>my-wordpress</code> en <code>my-site</code></p> <p>Warning</p> <p>Avant d'ex\u00e9cuter la commande suivante, gardez en m\u00e9moire l'identifiant du conteneur.</p> <pre><code>docker container rename my-wordpress my-site\n</code></pre> <p>Questions</p> <p>Est ce que l'identifiant du conteneur renomm\u00e9, a chang\u00e9 ?</p>"},{"location":"fiches/docker/commands/#se-connecter-a-un-conteneur","title":"Se connecter \u00e0 un conteneur","text":"<p>Utilisation de <code>docker desktop</code></p> <p></p> <p></p> <p>Info</p> <p>Tapez la commande <code>bash</code> apr\u00e8s connection afin d'utiliser le <code>Bourne-Again shell (bash)</code> au lieu de <code>Bourne Shell (sh)</code></p> <p>En ligne de commande</p> <pre><code>docker container exec -it my-site bash\n</code></pre> <p>Installer le package <code>ascii</code></p> <pre><code>apt-get update &amp;&amp; apt-get install ascii\n</code></pre>"},{"location":"fiches/docker/commands/#inspecter-un-conteneur","title":"Inspecter un conteneur","text":"<p>Utilisez <code>docker desktop</code> pour inspecter. Nous pouvons voir que le conteneur \u00e0 des param\u00e8tres r\u00e9seaux.</p> <p>Questions</p> <ol> <li>Quelle est l'<code>adresse ip</code> du conteneur et quel est le <code>network</code> par d\u00e9faut ? Astuce (ce r\u00e9seau est encore appel\u00e9 <code>docker0</code>)</li> <li>Quels sont les drivers qu'offre docker pour g\u00e9rer un r\u00e9seau de conteneurs ? Astuce (Documentation officielle)</li> <li>Sur votre machine, identifiez la carte r\u00e9seau virtuelle cr\u00e9\u00e9e par docker pour g\u00e9rer le trafic des conteneurs ? Astuce (<code>ipconfig</code> sous windows)</li> </ol> <p>La commande suivante permet d'afficher la liste des r\u00e9seaux disponibles :</p> <pre><code>docker network ls\n</code></pre>"},{"location":"fiches/docker/commands/#communication-entre-conteneurs","title":"Communication entre conteneurs","text":"<p>Legacy</p> <p>L'utilisation de l'option <code>--link</code> pour lier les conteneurs est obsol\u00e8te.</p> <p>2) Installer la base de donn\u00e9es et faire communiquer les conteneurs</p> <p>La base de donn\u00e9es n'\u00e9tant pas encore disponible, nous ne pourrions pas poursuivre notre installation.</p> <p></p> <p>Nous allons devoir lancer un conteneur de base de donn\u00e9es. Pour cela effectuer les t\u00e2ches suivantes:</p>"},{"location":"fiches/docker/commands/#premiere-approche-bridge-network","title":"Premi\u00e8re approche (bridge network)","text":"<p>La communication entre les conteneurs se fera depuis l'ext\u00e9rieur. Les deux conteneurs \u00e9tant expos\u00e9s sur des ports externes <code>8000</code> pour <code>wordpress</code> et <code>3306</code> pour <code>mysql</code></p> <p>A faire :</p> <ul> <li>Lancer un conteneur de base de donn\u00e9es avec l'image <code>mysql:8.3.0</code> en faisant attention \u00e0 la documentation et aux ports \u00e0 exposer. Dans notre cas, le port par d\u00e9faut de <code>mysql</code> est <code>3306</code> et il doit \u00eatre expos\u00e9 \u00e0 l'ext\u00e9rieur sur le m\u00eame port. Vous pouvez d\u00e9finir votre mot de passe. Pour faire simple, je garderai <code>admin</code>.</li> </ul> <p>Questions</p> <ol> <li>Dans quel cas le lancement du conteur \u00e9chouera, au regard des ports ?</li> </ol> <ul> <li>Cr\u00e9er la base de donn\u00e9es <code>mysite</code> en ligne de commande. C'est elle que nous utiliserons pour notre site.</li> </ul> <p></p> <ul> <li>Continuer et achever l'installation en ajoutant les param\u00e8tres de connexion au conteneur de base de donn\u00e9es.</li> </ul> <p></p> <p></p> <p></p>"},{"location":"fiches/docker/commands/#deuxieme-approche-host-network","title":"Deuxi\u00e8me approche (host network)","text":"<p>Caract\u00e9ristiques</p> <ul> <li>Pas d'isolation r\u00e9seau entre le conteneur et l'h\u00f4te</li> <li>Pas besoin d'ip pour le conteneur</li> <li>Les conteneurs communiquent entre eux et avec l'<code>h\u00f4te</code> mais ne sont pas accessible depuis l'ext\u00e9rieur.</li> <li>Les conteneurs se comportent comme des processus de l'<code>h\u00f4te</code>.</li> </ul> <p>Mettons tout cela en \u00e9vidence :</p> <p><pre><code>docker run --name db --publish 3306:3306 --network host -e MYSQL_ROOT_PASSWORD=admin -d mysql:8.3.0\n</code></pre> </p> <p>Questions</p> <ol> <li>Quelle compr\u00e9hension avez-vous du <code>warning</code> dans la capture ?</li> </ol> <p>Attention</p> <p>Vous auriez besoin de recr\u00e9er la base de donn\u00e9es car elle n'est pas persist\u00e9e. C'est \u00e0 dire elle a \u00e9t\u00e9 perdue \u00e0 la destruction du conteneur.</p> <p>Ensuite ...</p> <pre><code># Cr\u00e9er le conteneur de wordpress et le connecter au r\u00e9seau `host`\ndocker run --name my-site --network host -d wordpress\n</code></pre> <p>Connectez vous au conteneur et ex\u00e9cuter la commande suivante:</p> <p><pre><code>curl -v http://localhost\n\n# Voir la liste des ports ouverts\nnetstat -lutpn\n</code></pre> </p> <p>Les conteneurs communiquent bien entre eux. Quid de la visibilit\u00e9 depuis l'ext\u00e9rieur ?</p> <p>Sur votre machine, ex\u00e9cuter les commandes suivantes. </p> <pre><code># Sur windows\nnetstat -ano | grep \"3306\\|80\"\n# Sur linux ou macOS\nnetstat -lutpn | grep \"3306\\|80\"\n</code></pre> <p>Questions</p> <p>Que constatez-vous ?</p> <p>La premi\u00e8re approche avec <code>bridge</code> nous semble la plus appropri\u00e9e pour ce cas d'exemple. Mais nous pouvons encore faire mieux en proposant une architecture notre site web est bien accessible depuis l'ext\u00e9rieur et fonctionnelle mais pas notre base de donn\u00e9es.</p> <p>Questions</p> <p>Pouvez-vous dessiner une telle architecture ?</p>"},{"location":"fiches/docker/commands/#troisieme-approche-custom-network","title":"Troisi\u00e8me approche (custom network)","text":"<p>Nous allons ex\u00e9cuter les commandes suivantes apr\u00e8s avoir d\u00e9truit les conteneurs</p> <pre><code># Cr\u00e9er notre r\u00e9seau personnalis\u00e9\ndocker network create --driver=bridge ntw\n\n# Lancer ma base de donn\u00e9es sans la publier. \n# C'est \u00e0 dire enlever l'option `-p|--publish`\ndocker run --name db --network ntw -e MYSQL_ROOT_PASSWORD=admin -d mysql:8.3.0\n\n# Recr\u00e9er la base de donn\u00e9es mysite\n# bash-4.4# mysql -uroot -p\n# mysql&gt; create database mysite;\n\n# Lancer le conteneur `wordpress` en l'exposant \u00e0 l'ext\u00e9rieur\ndocker run --name my-site --network ntw -p 8080:80 -d wordpress\n</code></pre> <p>Apr\u00e8s ces commandes, lancer le lien <code>http://localhost:8080</code>. Vous devriez aboutir \u00e0 une telle interface. Mettez <code>db</code> dans le champ <code>Database Host</code></p> <p></p> <p>Questions</p> <ol> <li>D'o\u00f9 vient <code>db</code> ?</li> <li>Quelle fonctionnalit\u00e9 de docker a \u00e9t\u00e9 mis en \u00e9vidence ? Astuce (Plus de d\u00e9tails...)</li> </ol> <p>Tout fonctionne maintenant \u00e0 merveille. Mais nous pouvons automatiser le d\u00e9marrage et l'extinction de nos services avec <code>Docker Compose</code>. Rien de plus simple \ud83d\ude1c</p> <p>3) Automatiser le d\u00e9marrage et l'extinction des services avec <code>Docker Compose</code></p>"},{"location":"fiches/docker/commands/#iii-automatiser-les-services","title":"III- Automatiser les services","text":"<p>Cr\u00e9ons un r\u00e9pertoire pour notre projet et cr\u00e9ons un fichier particulier <code>docker-compose.yml</code>. </p> <p>Bien s\u00fbr vous pouvez utiliser un autre nom pour le fichier mais il faudra le sp\u00e9cifier \u00e0 docker. Nous ferons simple pour l'instant. </p> <p>Ce fichier doit se trouver \u00e0 la racine de votre projet.</p> <p>Voici un exemple de contenu.</p> <pre><code>version: '3.3'\n\nservices:\n\n  wordpress:\n    container_name: apache-wp\n    image: wordpress:latest\n    restart: always\n    ports:\n      - 8080:80\n    environment:\n      WORDPRESS_DB_HOST: db\n      WORDPRESS_DB_USER: root\n      WORDPRESS_DB_PASSWORD: admin\n      WORDPRESS_DB_NAME: mysite\n    volumes:\n      - wp_data:/var/www/html\n    depends_on:\n      - db\n    networks:\n      - ntw\n\n  db:\n    container_name: mysql-db\n    image: mysql:8.3.0\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: admin\n    volumes:\n      - db_data:/var/lib/mysql\n    networks:\n      - ntw\n\nnetworks:\n  ntw:\n\nvolumes:\n  wp_data:\n  db_data:\n</code></pre> <p>Questions</p> <ol> <li>Que veut dire <code>wordpress:latest</code> et quel inconv\u00e9nient il y a t-il \u00e0 utiliser le tag <code>latest</code> ?</li> <li>Quelles sont les autres utilisations des volumes ?</li> </ol> <p>Legacy</p> <p>Dans les versions r\u00e9centes de <code>Docker Compose</code>, la commande est en deux mots <code>docker compose ...</code> et non <code>docker-compose ...</code></p> <p>En ligne de commande, ex\u00e9cuter la commande suivante pour lancer les conteneurs:</p> <pre><code># Contruire et lancer vos services\n# Se base sur le fichier `docker-compose.yml` positionn\u00e9 dans\n# le r\u00e9pertoire \u00e0 partir duquel la commande est ex\u00e9cut\u00e9e.\n# -p|--project-name: pour mettre un prefixe aux ressources \n# g\u00e9n\u00e9r\u00e9es sinon `Docker Compose` gardera le nom du docker comme \u00e9tant le pr\u00e9fixe\ndocker compose -p mysite up -d\n</code></pre> <p></p> <p>Les volumes cr\u00e9\u00e9s sont visibles dans <code>Docker desktop</code></p> <p></p> <p>Docker Compose: commandes utiles</p> <ol> <li> <p><code>docker compose up -d</code>: d\u00e9marrer l'ensemble des services en arri\u00e8re-plan;</p> </li> <li> <p><code>docker compose ps</code>: voir le statut de l'ensemble de vos services;</p> </li> <li> <p><code>docker-compose stop</code>: arr\u00eater l'ensemble des services;</p> </li> <li> <p><code>docker-compose down</code>: d\u00e9truire l'ensemble des ressources;</p> </li> <li> <p><code>docker-compose config</code>: valider la syntaxe de votre fichier docker-compose.yml</p> </li> </ol> <p>Aller plus loin</p> <p>Finalisez l'installation de wordpress</p> <p>Je sais que nous avions installer plus de mille fois la m\u00eame application mais promis, ce sera la derni\u00e8re \ud83d\ude05. Vous pouvez vous en rassurer avec la section suivante.</p>"},{"location":"fiches/docker/commands/#iv-persister-les-donnees","title":"IV- Persister les donn\u00e9es","text":"<p>Afin de tester la persistence des donn\u00e9es, supprimer tout le stack avec la commande <code>docker compose -p mysite down</code> et relancer avec <code>docker compose -p mysite up -d</code>. Voyez si le site est toujours disponible et que vous n'\u00eates pas \u00e0 une installation de wordpress.</p> <p>A pr\u00e9sent que nous savons automatiser la gestion du cycle de vie de nos services, nous personnaliser notre image <code>wordpress</code> afin d'inclure un fichier particulier <code>phpinfo.php</code> qui nous permettra d'observer les configurations du serveur web.</p> <p>4) Cr\u00e9er son propre image et l'envoyer sur le hub</p>"},{"location":"fiches/docker/commands/#v-construire-une-image","title":"V- Construire une image","text":""},{"location":"fiches/docker/commands/#dockerignore","title":".dockerignore","text":"<p>Questions</p> <p><code>.dockerignore</code> est un fichier particulier de docker. Devinez \u00e0 quoi il sert et quelle est son utilit\u00e9 ? Astuce (Importance de .dockerignore)</p>"},{"location":"fiches/docker/commands/#dockerfile","title":"Dockerfile","text":"<p>Les instructions dans le fichier particulier <code>Dockerfile</code> permettre de construire son propre image en ajoutant quelques <code>couches</code> \u00e0 l'image de <code>wordpress:6.4.3-php8.1-apache</code>.</p> <p>Voici le contenu du <code>Dockerfile</code>. Il doit se trouver au m\u00eame niveau que le <code>docker-compose.yml</code></p> <pre><code># Utilisation d'une image PHP officielle\nFROM wordpress:6.4.3-php8.1-apache\n\n# Installer Vim\nRUN apt-get update &amp;&amp; apt-get install -y vim ascii\n</code></pre> <p>Cr\u00e9er un dossier <code>www</code> \u00e0 la racine du projet. Nous allons synchronis\u00e9 ce dossier avec le dossier <code>/var/www/html</code> pr\u00e9sent dans le conteneur.</p> <p>Am\u00e9nagement du <code>docker-compose</code> pour prendre en compte le <code>Dockerfile</code>.</p> <pre><code>version: '3.3'\n\nservices:\n\n  wordpress:\n    container_name: apache-wp\n    build:\n      context: .\n      dockerfile: Dockerfile\n    image: wp_phpinfo:1.0.0\n    restart: always\n    ports:\n      - 8080:80\n    environment:\n      WORDPRESS_DB_HOST: db\n      WORDPRESS_DB_USER: root\n      WORDPRESS_DB_PASSWORD: admin\n      WORDPRESS_DB_NAME: mysite\n    volumes:\n      - ./www:/var/www/html\n    depends_on:\n      - db\n    networks:\n      - ntw\n\n  db:\n    container_name: mysql-db\n    image: mysql:8.3.0\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: admin\n    volumes:\n      - db_data:/var/lib/mysql\n    networks:\n      - ntw\n\nnetworks:\n  ntw:\n\nvolumes:\n  wp_data:\n  db_data:\n</code></pre> <p>Questions</p> <ol> <li>La ligne <code>9</code> n'est pas n\u00e9cessaire. Pourquoi ?</li> </ol> <p>Vous pouvez construire votre image Docker en ex\u00e9cutant la commande suivante dans le r\u00e9pertoire :</p> <pre><code># Attention au `.` qui fait partie de la commande \u00e0 ex\u00e9cuter\ndocker build -p mysite -t wp_phpinfo:1.0.0 .\n</code></pre> <p></p> <p></p> <p>Ensuite supprimer et red\u00e9marer les services</p> <pre><code>docker compose -p mysite down\ndocker compose -p mysite up -d\n</code></pre> <p></p> <p>Acc\u00e9dez aux informations du serveur web avec <code>http://localhost:8080/phpinfo.php</code></p> <p>Aller plus loin avec Dockerfile</p>"},{"location":"fiches/docker/commands/#vi-publier-une-image-sur-le-hub","title":"VI- Publier une image sur le hub","text":""},{"location":"fiches/docker/commands/#vii-nettoyer-les-ressources-orphelines","title":"VII- Nettoyer les ressources orphelines","text":"<p>Docker par son activit\u00e9 peut rapidement t\u00e9l\u00e9charger beaucoup de volumes de donn\u00e9es et certains conteneurs, images, r\u00e9seaux, volumes peuvent rest\u00e9s orphelins. Il est utile dans certaines conditions de lib\u00e9rer les ressources non utilis\u00e9es.</p> <p>Il y a plusieurs commandes de maintenance, mais la plus compl\u00e8te est la suivante. Elle est \u00e0 utiliser avec parcimonie</p> <pre><code>docker system prune\n</code></pre> <p>Allez plus loin</p> <p>D\u00e9ployez une application springboot avec docker? Astuce (Examples - Spring Boot application with Maven)</p>"},{"location":"fiches/git/","title":"Pr\u00e9requis","text":"<p>Objectif: L'objectif de ce TP est de te permettre d'utiliser git comme outil de versioning dans un projet de d\u00e9veloppement informatique.</p> <p>Cependant ce TP n'aborde pas toutes les notions et nuances de l'utilisation de git.</p> <p>Dur\u00e9e: Il se d\u00e9roulera en une s\u00e9ance de 2h. Certains aspects cl\u00e9s seront abord\u00e9s. Les autres concepts seront couverts par des ressources en ligne s\u00e9lectionn\u00e9es que nous vous pr\u00e9sentons ici.</p> <p>Pr\u00e9requis:</p> <ul> <li>Etre capable de travailler en ligne de commande (bash, cmd, powershell ...)</li> <li>Disposer d'un ordinateur</li> <li>Installer git</li> <li>Disposer d'un compte github</li> <li>Faire les premi\u00e8res configurations de Git</li> <li>Associer votre compte github \u00e0 votre email unamur</li> <li>Installer <code>visual studio</code> code comme editeur</li> <li>Installer les extensions suivantes sous <code>visual code</code>:<ul> <li><code>Auto-Open Markdown Preview</code></li> <li><code>Git Extension Pack</code></li> <li><code>Git Graph</code> </li> </ul> </li> <li>Envie de d\u00e9couvrir la technologie</li> </ul> <p>NB: <code>visual studio</code> est recommand\u00e9 pour le TP car les captures ont \u00e9t\u00e9 produites dans cet IDE. Nous vous demandons de l'utiliser afin de mieux suivre le TP. Toutefois un autre IDE pourrait aussi convenir.</p> <p>Jeton d'authentification</p> <p>Pour la suite des travaux de TP, nous devriez vous rassurer que la connection avec github est bien \u00e9tablie. Vous auriez besoin de disposer d'un jeton d\u2019authentification. Ce sont les nouvelles r\u00e8gles en mati\u00e8re de politique de s\u00e9curit\u00e9 sur github.</p> <p><code>Create token from your GitHub account: When authentication is needed on your machine you enter your GitHub username as your ID and the obtained token as your password (not your current password created when you create your account)</code></p> <p><code>Select settings -&gt; Select developer settings -&gt; Personal access tokens -&gt; Create new token</code></p> <p>Sauvegarde le dans un fichier sur ton ordinateur</p> <p>Invitation au projet des TP</p> <p>Notez que vous serez probablement associ\u00e9(e) \u00e0 un d\u00e9p\u00f4t distant pour ce TP. Vous serez inform\u00e9(e) en temps opportun au besoin. Il vous faudra alors d\u00e8s que vous recevez une telle invitation, de le confirmer dans les d\u00e9lais. Cette invitation vous sera envoy\u00e9e sur la base de votre email d'\u00e9tudiant <code>...@student.unamur.be</code></p>"},{"location":"fiches/git/bugs/","title":"Chasse aux bugs","text":""},{"location":"fiches/git/bugs/#git-blame","title":"git blame","text":""},{"location":"fiches/git/bugs/#manipulation-dhistorique","title":"Manipulation d'historique","text":""},{"location":"fiches/git/bugs/#git-diff","title":"git diff","text":""},{"location":"fiches/git/bugs/#git-bisect","title":"git bisect","text":""},{"location":"fiches/git/commands/","title":"TP1 GIT","text":"<p>Objectif </p> <p>A la fin de cette section, tu seras capable de r\u00e9soudre la plupart des situations d'utilisation de git en entreprise.</p> <p>Contenu</p> <p>I- Initialisation d'un d\u00e9p\u00f4t local II- Zones et cycles de vie des fichiers III- Initialisation D\u00e9p\u00f4t distant IV- Synchronisation du d\u00e9p\u00f4t local avec le d\u00e9p\u00f4t distant V- Fichiers ignor\u00e9s par git VI- D\u00e9veloppements parall\u00e8les VII- Nettoyage des objets non utilis\u00e9s VIII- Collaboration</p>"},{"location":"fiches/git/commands/#i-init-dun-depot-local","title":"I- Init d'un d\u00e9p\u00f4t local","text":"<pre><code>cd projet_git # se positionner dans votre espace de travail\ngit init # initialiser un d\u00e9p\u00f4t\n</code></pre> <p>Question</p> <p>Que remarquez vous dans votre espace de travail apr\u00e8s avoir lanc\u00e9 la commande d'initialisation du d\u00e9p\u00f4t ?</p>"},{"location":"fiches/git/commands/#ajout-de-fichiers","title":"Ajout de fichiers","text":""},{"location":"fiches/git/commands/#un-peu-de-markdown","title":"Un peu de markdown","text":"<p>Documentation de markdown ici</p> <p><code>Markdown</code> est le type de fichier utilis\u00e9 par les plateformes de git pour la g\u00e9n\u00e9ration des pages statiques de documentation des projets. Vous pouvez ins\u00e9rer dans un fichier <code>.md</code> des balises <code>html</code>.</p> <pre><code>&lt;pre&gt;\n _  _  ____  ____    __    __    ____  _   _    __     \n( \\/ )(_  _)(  _ \\  /__\\  (  )  (  _ \\( )_( )  /__\\    \n \\  /  _)(_  )(_) )/(__)\\  )(__  )___/ ) _ (  /(__)\\   \n  \\/  (____)(____/(__)(__)(____)(__)  (_) (_)(__)(__)  \n\n&lt;/pre&gt;\n\n# Bienvenu sur mon super blog!\nLaboratoire de prise en main de Git\n\nCe laboratoire ouvre plusieurs perspective \u00e0 savoir:\n\n* L'envoi des modifications sur un site distant\n* La manipulation des historique des commits\n\n\n[Pour tout autre pr\u00e9occupation mon IA reste disponible](https://chat.openai.com)\n\nA bient\u00f4t \ud83e\udd73\n\n\n&gt; [!NOTE]\n&gt; C'est un projet d\u00e9mo pour la cr\u00e9ation d'un blog personnel que je voudrais partager avec la communaut\u00e9 github.\n\n## Contributeurs\n\n- Moi et moi seul \ud83e\udd13\n\n\n\u00a9 &lt; Mon entreprise &gt; Unamur, 2024\n</code></pre> <p>Pour faire cette jolie banni\u00e8re passez par ici</p> <p>Cr\u00e9er un fichier <code>README.md</code> et copiez le contenu pr\u00e9c\u00e9dent \u00e0 l'int\u00e9rieur. Le fichier <code>README.md</code> est l'entr\u00e9e de notre site statique sur github similaire \u00e0 <code>index.html</code> pour le <code>html</code></p>"},{"location":"fiches/git/commands/#etat-du-depot-local","title":"Etat du d\u00e9p\u00f4t local","text":"<pre><code>git status # inspecter l'\u00e9tat des fichiers\n</code></pre> <p>Note</p> <p>Remarquez que l'extension <code>Auto-Open Markdown Preview</code> nous permet d'avoir  nous permet d'avoir un aper\u00e7u de notre fichier markdown \u00e0 droite.</p> <p>Questions</p> <ol> <li>Commentez les fournies par la commande <code>git status</code> en console ?</li> <li>Que veulent dire <code>1</code> et <code>2</code>  ?</li> </ol>"},{"location":"fiches/git/commands/#premier-commit","title":"Premier commit","text":"<p>A chaque commande faite <code>git status</code> pour voir l'\u00e9tat des fichiers.</p> <p><pre><code># git add .\n# git add -A \n# (pour tracker tous les fichiers du r\u00e9pertoire de travail)\ngit add README.md\n</code></pre> </p> <pre><code>### Description courte\n###### Nous allons lancer la commande suivante\ngit commit -m \"Ajout de mon premier commit depuis le local repository\"\n\n# ======== OU ===================================\n\n### Description longue sur plusieurs lignes.\ngit commit -m \"Ajout d'une nouvelle fonctionnalit\u00e9\n\nCette fonctionnalit\u00e9 permet aux utilisateurs de...\"\n</code></pre> <p></p> <p>Questions</p> <ol> <li>Que veut dire <code>1</code> ?</li> <li>Ce num\u00e9ro est-il si court ? Astuce (faites <code>git log</code>)</li> </ol> <p>Un <code>git status</code> vous permet de constater que votre r\u00e9pertoire de travail est propre.</p>"},{"location":"fiches/git/commands/#ii-zones-et-cycles-de-vie-des-fichiers","title":"II- Zones et cycles de vie des fichiers","text":"<p>Questions</p> <ol> <li>Rappelez les zones de git que vous connaissez ?</li> <li>Rappelez les commandes pour passez d'une zone \u00e0 une autre et l'\u00e9tat des fichiers ?</li> </ol> <pre><code>graph RL\n    subgraph local[local repository]\n        subgraph main[branche main]\n            subgraph manipulation[zones de manipulation]\n                working[working space]\n                index[index/cache/stage]\n            end\n            repository\n            remise\n            E[ ]\n        end\n        working--&gt;|git add|index\n        index--&gt;|1-desindexer|working\n        index--&gt;|git commit|repository\n        repository--&gt;|2-Annuler un commit|index\n        repository--&gt;|3-Annuler un commit|working\n        manipulation--&gt;|4-Mettre de c\u00f4t\u00e9|E\n        E--&gt;remise\n        remise--&gt;|5-Restaurez la remise|manipulation\n\n    end\n    subgraph remote[remote repository]\n        remote_main[main]\n    end\n    local--&gt;|push|remote\n    remote--&gt;|pull|local</code></pre> <p>Questions</p> <ol> <li>Quelles sont les commandes \u00e0 utiliser en <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code> ?</li> <li>Quels sont les espaces que <code>git stash</code> sauvegarde ?</li> <li>Quelles sont les commandes possibles que vous connaissez pour annuler le dernier commit ? Et pour revenir \u00e0 n'importe quel commit ?</li> <li>Diff\u00e9rence entre <code>git reset</code> et <code>git revert</code> ?</li> <li>Diff\u00e9rence entre <code>git rm --cached</code> et <code>git restore --staged</code> ?</li> <li>Quelle commande utiliserez-vous pour restaurer un fichier dans le <code>worktree</code> et le <code>stage</code> \u00e0 son \u00e9tat tel qu'il \u00e9tait trois commits avant le <code>HEAD</code>?</li> </ol> <p>Utiles:  GIT : stash, revert, restore, rebase, reset, cherry-pick Zones et cycles de vie des fichiers</p>"},{"location":"fiches/git/commands/#iii-init-depot-distant","title":"III- Init D\u00e9p\u00f4t distant","text":""},{"location":"fiches/git/commands/#premier-commit_1","title":"Premier commit","text":"<p>La cr\u00e9ation du d\u00e9p\u00f4t avec un fichier <code>README.md</code> initial g\u00e9n\u00e8re un commit.</p> <p></p> <p></p> <p>Warning</p> <p>Remarquez que la description est mise dans le fichier <code>readme</code> et qu'un premier commit a \u00e9t\u00e9 fait sur le remote</p>"},{"location":"fiches/git/commands/#modification-sur-le-remote","title":"Modification sur le remote","text":"<p>Essayons \u00e0 pr\u00e9sent de modifier le <code>README.md</code> en changeant le titre <code>tpgit</code></p> <pre><code># Bienvenu sur mon super blog!\nLaboratoire de prise en main de Git\n</code></pre> <p> </p> <p>Warning</p> <p>Remarquez que cette modification n\u00e9cessite un nouveau commit. Le nombre de commit sur le d\u00e9p\u00f4t distant est pass\u00e9 \u00e0 <code>2</code>.</p> <p>Question</p> <p>Est-ce le d\u00e9p\u00f4t local et le d\u00e9p\u00f4t distant ont les m\u00eames historiques de commit ?</p>"},{"location":"fiches/git/commands/#iv-synchronisation-avec-le-depot-distant","title":"IV- Synchronisation avec le d\u00e9p\u00f4t distant","text":"<p>Pour ce faire nous allons suivre les \u00e9tapes suivantes: </p>"},{"location":"fiches/git/commands/#lier-les-depots-local-et-remote","title":"Lier les d\u00e9p\u00f4ts local et remote","text":"<p>Pour lier les d\u00e9p\u00f4ts local et remote, vous devriez faire la commande <code>git remote add origin &lt;remote_url&gt;</code></p> <p><pre><code># Voir la liste actuelle des remotes\ngit remote -v\n\n# La liste est vide actuellement. \n# Nous allons associ\u00e9 notre d\u00e9p\u00f4t distant\ngit remote add origin https://github.com/vidalpha/tpgit.git\n\n# Afficher \u00e0 nouveau les remotes\ngit remote -v\n</code></pre> </p> <p>Questions</p> <ol> <li>Que veulent dire les autorisations donn\u00e9es sur le d\u00e9p\u00f4t distant (<code>fetch</code> et <code>push</code>) ?</li> <li>Connaissez vous la commande <code>git pull</code> ? Quel r\u00e9sultat elle produit ?</li> <li>Quelles sont les deux op\u00e9rations effectu\u00e9es par la commande <code>git pull</code>?</li> </ol> <p>A la fin de la commande <code>git remote add origin &lt;remote_url&gt;</code>, nous arrivons \u00e0 cette situation:</p> <pre><code>graph RL\n    subgraph local\n    master\n    end\n    subgraph remote\n    main\n    end\n    local--&gt;|push|remote\n    remote--&gt;|fetch|local</code></pre> <p>Pour autant les deux branches ne sont pas encore li\u00e9es et sont bien comme ceci:</p> <pre><code>timeline\n    title local master branch timeline\n    56aa817 : Ajout de mon premier commit depuis le local repository</code></pre> <pre><code>timeline\n    title remote main branch timeline\n    ae35b32 : Initial commit\n    b8a7054 : Update README.md</code></pre> <p>Pour vous en rendre compte exc\u00e9cuter la commande suivante:</p> <pre><code># commande simplifi\u00e9e\n# git ls-remote origin\n\n# commande d\u00e9taill\u00e9e\ngit remote show origin\n</code></pre> <p></p> <p>Comme vous le voyez, il n'est dans indiquer la branche qui tracke la branche remote <code>main</code>.</p> <p>Dans la section suivante, nous allons lier la branche locale \u00e0 la branche distante.</p>"},{"location":"fiches/git/commands/#lier-les-branches-locale-et-distante","title":"Lier les branches: locale et distante","text":"<p>Cette liaison est possible gr\u00e2ce \u00e0 la commande:</p> <pre><code># git branch --set-upstream-to=origin branche_locale \n</code></pre> <p>Cependant, elle se met aussi en place automatiquement lors du premier <code>push</code> et pour cela, nous devrions utiliser l'option <code>-u|--set-upstream</code> pour cette premi\u00e8re fois. Les fois prochaines la commande <code>git push</code> seule, suffira.</p> <pre><code># git push -u|--set-upstream origin &lt;branche_locale&gt;\n</code></pre> <p>Questions</p> <ol> <li>Que se passera t-il apr\u00e8s un <code>push</code> si on maintient le nom <code>master</code>? Astuce (nouvelle branche remote)</li> <li>Si nous renommions notre branche locale en <code>main</code>, la commande <code>push</code> \u00e9chouera. Nous devrions utiliser plut\u00f4t dans ce cas-l\u00e0 la commande <code>pull</code>. Pourriez-vous expliquer pourquoi ? Astuce (principe entre <code>pull</code> et <code>push</code>)</li> <li>A la suite des questions pr\u00e9cdentes, le <code>pull</code> \u00e9galement \u00e9chouera. Pourquoi ? Astuce (anc\u00eatre commun absent)</li> </ol> <p>Testons tout ceci.</p>"},{"location":"fiches/git/commands/#push-command","title":"Push command","text":"<p>Nous allons essayer d'envoyer sur le d\u00e9p\u00f4t distant nos modifications.</p> <pre><code>git push --set-upstream origin master\n</code></pre> <p></p> <p>Note</p> <p>Remarquez sur github qu'une nouvelle branche distante du m\u00eame nom a \u00e9t\u00e9 cr\u00e9\u00e9e. Remarquez aussi que la branche locale <code>master</code> traque la nouvelle branche distante <code>master</code>.</p> <p>Pour la suite au lieu de cr\u00e9er une nouvelle branche <code>master</code> sur la remote, nous allons plut\u00f4t renommer notre branche en local en <code>main</code>.</p> <p>Warning</p> <p>Avant de continuer supprimer la nouvelle branche distante <code>master</code> qui a \u00e9t\u00e9 cr\u00e9\u00e9e.</p>"},{"location":"fiches/git/commands/#renommer-une-branche","title":"Renommer une branche","text":"<pre><code># Renomme la branche sur laquelle on se trouve\n# git branch -M &lt;nouveau_nom&gt;\ngit branch -M main\n</code></pre> <p>Note</p> <p>Remarquez que le nom de la branche a bien chang\u00e9 en console</p> <p>Essayons de faire un <code>push</code> avec la branche renomm\u00e9e. Vous remarquerez que le <code>push</code> \u00e9choue, ce qui est normal.</p> <p></p>"},{"location":"fiches/git/commands/#pull-command","title":"Pull command","text":"<p>Et le <code>pull</code> ?</p> <pre><code>git pull --set-upstream origin main\n</code></pre> <p></p> <p>\ud83d\ude05 Encore une autre erreur !!!</p>"},{"location":"fiches/git/commands/#merge-rebase-squash","title":"Merge - rebase - squash","text":"<p>Bon! Abordons alors les concepts de <code>merge</code>, <code>rebase</code> et <code>squash commit</code> afin de mieux nous en sortir puisque un certain <code>merge</code> a \u00e9chou\u00e9.</p> <p>Info</p> <p></p> <p>Source Livre: Git - Ma\u00eetrisez la gestion de vos versions (concepts, utilisation et cas pratiques) (4e \u00e9dition) de Samuel DAUZON, Editions ENI, 2016</p> <p></p> <p>Questions</p> <ol> <li>Pouvez-vous expliquez ce qui s'est produit pour que la fusion des branches distante et locale \u00e9choue ? Astuce (<code>git merge</code> Vs <code>git rebase</code> Vs <code>Squash commit</code>)</li> <li>Quel est le comportement par d\u00e9faut de <code>git merge</code> ? Astuce (commit)</li> <li>Dans quel cas le <code>git merge</code> fast-foward produit le m\u00eame r\u00e9sultat que <code>git rebase</code>? Astuce (<code>git rebase</code> Vs <code>git merge</code> en pratique)</li> </ol> <p>Comme vous venez de le comprendre, pour r\u00e9sumer la situation:</p> <ul> <li> <p><code>git merge</code>: ne peut \u00eatre utilis\u00e9 car les branches n'ont pas d'anc\u00eatre commun. C'est pour cela la commande pull a \u00e9chou\u00e9e.</p> </li> <li> <p><code>squash commit</code> (<code>git rebase -i ...</code>): r\u00e9sumera l'historique des commits de la branche distance.</p> </li> <li> <p><code>git rebase</code>: nous recr\u00e9era l'historique. C'est cette option nous allons choisir.</p> </li> </ul> <p>Afin de r\u00e9gler ce probl\u00e8me, nous allons utiliser <code>git rebase</code>, une vrai machine \u00e0 voyager dans le temps. \ud83d\ude80</p> <p>Info</p> <p>La commande <code>git rebase origin/main</code> r\u00e9organise les commits de la branche actuelle en les repla\u00e7ant au-dessus des commits de la branche <code>main</code>. Cela signifie que les commits de la branche actuelle seront remis \u00e0 jour pour faire r\u00e9f\u00e9rence aux commits de <code>main</code> comme point de d\u00e9part.</p> <p>Conseil</p> <p>Que ce soit <code>git merge &lt;branche_a_integrer&gt;</code> ou <code>git rebase &lt;branche_a_integrer&gt;</code>, il faut se positionner sur la branche source sur laquelle on veut rapatrier la branche \u00e0 int\u00e9grer.</p> <pre><code># main: le nom de la branche distante\n# option -i: pour utiliser rebase en mode interactif\ngit rebase -i origin/main\n</code></pre> <p></p> <p>Nous sommes en mode interractif avec l'\u00e9diteur <code>vi</code> (Ce lien peut vous \u00eatre utile). Pour ceux qui ne vous y connaissez pas suivez mes conseils pour vous en sortir.</p> <p>Questions</p> <p>Commentez les points <code>1</code>, <code>2</code>, <code>3</code> et <code>4</code> ?</p> <p>Mais avant d'aller loin, puisque je sais lire dans l'avenir, je pr\u00e9dis que la commande <code>rebase</code> aussi ne marchera pas \ud83d\ude02. Sacr\u00e9 oiseau de mauvaise augure que je suis!!!</p> <p>Fermons l'\u00e9diteur <code>i</code> en acceptant le rebase.</p> <pre><code># Appuyez sur la touch `echap` d'abord\n:q!\n</code></pre> <p></p> <p>Questions</p> <ol> <li>Pourquoi le <code>rebase</code> n'a pas march\u00e9 ?</li> <li>Commentez les <code>hints</code> en jaune ?</li> </ol> <p>Note</p> <p>Remarquez dans la zone en vert en bas dans la console que la strat\u00e9gie <code>rebase</code> est toujours en cours ?</p>"},{"location":"fiches/git/commands/#gestion-des-conflits","title":"Gestion des conflits","text":"<p>Un conflit Git survient lorsque deux branches ou commits modifient les m\u00eames parties d'un m\u00eame fichier de mani\u00e8re incompatible. Dans cette section, nous allons apprendre \u00e0 r\u00e9soudre les conflits.</p>"},{"location":"fiches/git/commands/#structure-dun-conflit","title":"Structure d'un conflit","text":"<p>Revenons \u00e0 VS Code</p> <p></p>"},{"location":"fiches/git/commands/#resolve-in-merge-editor","title":"Resolve in merge editor","text":"<p>Suivez les instructions dans <code>VS Code</code> pour terminer.</p> <p></p> <p>R\u00e9sum\u00e9</p> <ol> <li>Vous gardez la zone que vous voulez</li> <li>Vous enlevez la zone que vous ne voulez pas</li> <li>Ne jamais oublier d'enlever les d\u00e9limiteurs sinon ils seront commit\u00e9s</li> </ol> <p>Ne jamais oublier</p> <p>Apr\u00e8s la r\u00e9solution d'un conflit, un <code>`commit</code> n\u00e9cessaire pour prendre en compte les modification.</p> <p>Nous venons de r\u00e9soudre le <code>conflit</code> nous allons alors faire un <code>commit</code>.</p> <pre><code>git add README.md\ngit commit -m \"R\u00e9solution du conflit sur le fichier README.md\"\n</code></pre> <p>Exercice</p> <p>Pratiquer la r\u00e9solution des conflits ...</p>"},{"location":"fiches/git/commands/#finalisation-du-rebase","title":"Finalisation du rebase","text":"<p>A pr\u00e9sent nous allons continuer notre <code>rebase</code>.</p> <p><pre><code>git status # Avec `git status`, vous aurez le r\u00e9sum\u00e9 de notre situation actuelle.\ngit rebase --continue\n</code></pre> </p> <p>Cette derni\u00e8re commande met fin \u00e0 notre aventure de r\u00e9cup\u00e9rer les changements provenant du <code>remote</code>. Avant d'envoyer nos modifications en ligne, appr\u00e9cions l'historique des commits apr\u00e8s le <code>rebase</code>.</p> <p></p> <p>Questions</p> <ol> <li>Quels constats faites-vous par rapport \u00e0 l'ordre des commits dans l'historique?</li> <li>Est ce que les hashs des commits sont maintenus ?</li> <li>Le fichier <code>README.md</code> est-il bien pr\u00e9sent dans votre espace de travail? Que donne la commande <code>git status</code>?</li> </ol> <p>Bon voil\u00e0, vous \u00eates un(e) pro de fusions de branches et d'historiques \ud83e\udd13. Nous pouvons envoyez nos modifications en ligne.</p>"},{"location":"fiches/git/commands/#envoi-des-modifications-sur-le-depot-distant","title":"Envoi des modifications sur le d\u00e9p\u00f4t distant","text":"<p><pre><code>git push -u origin main\n</code></pre> </p> <p>Nous pouvons aussi utiliser la commande <code>git remote show origin</code> pour nous assurer que tout ok et que la branche locale <code>main</code> track\u00e9e bien la branche distante <code>main</code>.</p> <pre><code>git remote show origin\n</code></pre> <p></p>"},{"location":"fiches/git/commands/#resume-des-commandes-de-base","title":"R\u00e9sum\u00e9 des commandes de base","text":"<p>Nous avions pris un long chemin afin d'aborder des concepts plus ou moins avanc\u00e9s, mais la proc\u00e9dure de r\u00e9cup\u00e9ration et d'envoi en ligne de vos modifications n'est pas si compliqu\u00e9e.</p> <p>Et puis qui peut le plus, peut le moins dit-on? \ud83d\ude1c</p>"},{"location":"fiches/git/commands/#cloner-un-depot","title":"Cloner un d\u00e9p\u00f4t","text":"<p>Pour les commandes suivantes, cr\u00e9er un autre r\u00e9pertoire</p> <pre><code># Allez sur github, r\u00e9cup\u00e9rer l'URL du d\u00e9p\u00f4t et sur votre machine, faite\ngit clone https://github.com/vidalpha/tpgit.git\n# Ajoutez vos modifications\n# Indexez les fichiers\ngit add -A\n# Faites un commit\ngit commit -m \"Mon premier commit\"\n# Faites un push\ngit push -u origin master\n\n\n# Les prochaines fois si vous travaillez en collaboration.\n# Ajoutez vos modifications\n# Indexez les fichiers\ngit add -A\n# Faites un commit\ngit commit -m \"Mon premier commit\"\n# Mettez-vous \u00e0 jour par rapport au serveur\ngit pull\n# Envoyez vos modifications\ngit push\n</code></pre> <p>A ce stade, voici la structure de nos branches locale et remote</p> <pre><code>graph RL\n    subgraph local\n    local_main[main]\n    end\n    subgraph remote\n    remote_main[main]\n    end\n    local--&gt;|push|remote\n    remote--&gt;|fetch|local\n    local_main-.tracks.-&gt; remote_main</code></pre>"},{"location":"fiches/git/commands/#v-gitignore","title":"V- Gitignore","text":"<p>Dans cette section nous allons apprendre \u00e0 ignorer des fichiers ou r\u00e9pertoires sensibles. Afin que <code>git</code> tienne compte des fichiers ou r\u00e9pertoires \u00e0 ignorer, nous allons mettre le nom de ces fichiers/dossiers dans un fichier particulier <code>.gitignore</code></p> <p>1) Cr\u00e9er le fichier <code>secret.yml</code> avec ce contenu:</p> <p>Vous mettrez vos supers fake <code>username</code> et <code>password</code>.</p> <pre><code>git_credentials:\n    username: bonbolibo\n    password: tunetrouveraspas\n</code></pre> <p>Danger</p> <p>Ne mettez pas vos informations sensibles ou vos cr\u00e9dentials git. Ce n'est juste qu'un exemple pour la suite.</p> <p>Question</p> <p>Apr\u00e8s avoir ajout\u00e9 le fichier <code>secret.yml</code>, lancez la commande <code>git status</code>. Commentez ce que vous voyez ?</p> <p>2) Ajouter le fichier <code>.gitignore</code></p> <p>3) Dans le fichier <code>.gitignore</code>, mettez <code>secret.yml</code> et enregistrer</p> <p>4) Faites \u00e0 nouveau <code>git status</code>. Que remarquez vous ?</p> <p>5) Envoyez la modification en ligne avec le message de commit <code>Ajout du fichier .gitignore</code></p> <p>Question</p> <p>Le fichier <code>secret.yml</code> est-il pr\u00e9sent sur le d\u00e9p\u00f4t distant ?</p>"},{"location":"fiches/git/commands/#vi-developpements-paralleles","title":"VI- D\u00e9veloppements parall\u00e8les","text":"<p>Les branches sont tr\u00e8s utiles pour exploirer des pistes de fonctionnalit\u00e9s sans perturber la branche principale (dans notre cas il s'agit de <code>main</code>). Les modifications sur la branche auxilliaire pourront \u00eatre fusionn\u00e9es avec la branche principale.</p> <p>C'est ce que nous allons essayer dans cette section.</p> <p>T\u00e2ches</p> <p>1) Apportez quelques modifications au fichier <code>README.md</code></p> <pre><code>&lt;pre&gt;\n _  _  ____  ____    __    __    ____  _   _    __     \n( \\/ )(_  _)(  _ \\  /__\\  (  )  (  _ \\( )_( )  /__\\    \n \\  /  _)(_  )(_) )/(__)\\  )(__  )___/ ) _ (  /(__)\\   \n  \\/  (____)(____/(__)(__)(____)(__)  (_) (_)(__)(__)  \n\n&lt;/pre&gt;\n\n# Bienvenu sur mon super blog!\n\n## Mes tutoriels\n\n1. Int\u00e9grer des graphes avec mermaid\n2. Mettre en place la documentation d'un projet avec mkdocs\n\n&gt; [!NOTE]\n&gt; C'est un projet d\u00e9mo pour la cr\u00e9ation d'un blog personnel que je voudrais partager avec la communaut\u00e9 github.\n\n## Contributeurs\n\n- Moi et moi seul \ud83e\udd13\n\n[Pour tout autre pr\u00e9occupation mon IA reste disponible](https://chat.openai.com)\n\nA bient\u00f4t \ud83e\udd73\n\n\n## Copyright\n\n\n\u00a9 &lt; Mon entreprise &gt; Unamur, 2024\n</code></pre> <p></p> <p>Question</p> <p>Que veulent dire ces indications (<code>1</code>, <code>2</code> et <code>3</code>) de <code>VS code</code> ?</p>"},{"location":"fiches/git/commands/#basculer-vers-une-nouvelle-branche","title":"Basculer vers une nouvelle branche","text":"<pre><code># Voir la liste des branches\n# git branch\n\n# Cr\u00e9er une nouvelle branche\n# git branch ma_nouvelle_branche\n\n# Supprimer une branche\n# git  branch -d nom_de_la_branche\n\n# Basculer sur une autre branche\n# (switch \u00e0 partir de la version 2.23)\n# git checkout|switch  branche_apres_switch\n\n# Cr\u00e9er une branche et basculer dessus automatiquement\ngit checkout -b mermaid\n\n# Voir la branche sur laquelle on se trouve. Il y a une `*` devant la branche active\ngit branch --all\n</code></pre> <p>Questions</p> <ol> <li>Comparez l'\u00e9tat des area dans <code>main</code> et <code>mermaid</code> ?</li> <li>Qu'est-ce que vous remarquez sur github quant aux branches cr\u00e9\u00e9es localement? A quel moment ces branches sont visibles en ligne ?</li> </ol> <p>Pr\u00e9cautions avant basculement</p> <p>L'exemple pr\u00e9c\u00e9dent prouve que vous ne devriez pas avoir de modifications en cours lors du switch vers une autre branche. Gardez votre branche <code>clean</code> avant de basculer vers une autre.</p> <p>2) Vous \u00eates sur la branche <code>mermaid</code>. Cr\u00e9er un nouveau fichier <code>mermaid.md</code> avec ce contenu.</p> <pre><code># Un markdown de ouf!!! avec Mermaid \ud83e\udd13\n\nApprendre \u00e0 faire tout plein de chose comme:\n\n## Flowchart\n\n## Sequence diagram\n\n## Gantt chart\n\n## Class diagram\n\n## State diagram\n</code></pre> <p>3) Faites un commit</p> <pre><code>git add -A\ngit commit -m \"Ajout de mermaid.md\"\n\n# Faites `git status` pour v\u00e9rifier si le r\u00e9pertoire est clean apr\u00e8s le commit\n</code></pre>"},{"location":"fiches/git/commands/#message-du-dernier-commit","title":"Message du dernier commit","text":"<p>4) Modifier le message du commit dernier pour pr\u00e9ciser que la page d'acceuil a aussi \u00e9t\u00e9 mis \u00e0 jour. </p> <pre><code>git commit --amend -m \"Structuration de mon blog et ajout de la page mermaid.md\"\n</code></pre> <p>5) Ajouter un lien vers <code>mermaid.md</code> dans le fichier <code>README.md</code> et faites un commit</p> <pre><code>&lt;pre&gt;\n _  _  ____  ____    __    __    ____  _   _    __     \n( \\/ )(_  _)(  _ \\  /__\\  (  )  (  _ \\( )_( )  /__\\    \n \\  /  _)(_  )(_) )/(__)\\  )(__  )___/ ) _ (  /(__)\\   \n  \\/  (____)(____/(__)(__)(____)(__)  (_) (_)(__)(__)  \n\n&lt;/pre&gt;\n\n# Bienvenu sur mon super blog!\n\n## Mes tutoriels\n\n1. [Int\u00e9grer des graphes avec mermaid](./mermaid.md)\n2. Mettre en place la documentation d'un projet avec mkdocs\n\n....\n</code></pre> <pre><code>git commit -m \"Lien de README.md vers mermaid.md\"\n</code></pre> <p>6) Sur la branche <code>main</code>, ajouter une image (le logo de l'UNamur) dans le fichier <code>README.md</code> et faites un commit.</p> <pre><code>.....\n\n## Contributeurs\n\n- Moi et moi seul \ud83e\udd13\n\n![Logo](./UNamur.png)\n\n\n\u00a9 &lt; Mon entreprise &gt; Unamur, 2024\n</code></pre> <pre><code>git commit -m \"Ajout de l'image de l'universit\u00e9\"\n</code></pre> <p>L'historique des commits sur les deux branches se pr\u00e9sente comme suit:</p> <p></p>"},{"location":"fiches/git/commands/#merge-de-branches","title":"Merge de branches","text":"<p>La branche <code>mermaid</code> nous a permis de faire d\u00e9velopper la page <code>mermaid.md</code>. Elle est maintenant stable. Nous allons la fusionner avec la branche main.</p> <p>Pour ce faire positionnez-vous sur la branche <code>main</code> et faites. R\u00e9glez les \u00e9ventuels conflits qui se poseraient</p> <pre><code>git merge mermaid\n</code></pre> <p></p> <p>Questions</p> <ol> <li>Faites un push sur le d\u00e9p\u00f4t distant \u00e0 partir de la branche <code>main</code>. La branche <code>mermaid</code> est-elle pr\u00e9sente sur le d\u00e9p\u00f4t distant ? Sinon comment pouvez-vous envoyer votre branche locale <code>mermaid</code> en ligne afin de permettre aux autres utilisateurs du d\u00e9p\u00f4t de travailler dessus.</li> <li>Que fait la commande <code>git cherry-pick</code> ?</li> <li>Diff\u00e9rence entre <code>git cherry-pick</code> et <code>git merge</code> ?</li> </ol>"},{"location":"fiches/git/commands/#les-tags","title":"Les tags","text":"<p>Un tag est un alias (un nom) d\u00e9fini par un d\u00e9veloppeur dont le r\u00f4le est de point\u00e9 sur un commit. Les tags sont utilis\u00e9s pour marquer les num\u00e9ros de version sur les commits.</p> <p>Git supportes deux types de tag:</p> <ul> <li>Les tags annot\u00e9s: <code>git tag -a &lt;tagname&gt;</code>     stockent le nom du tag sur un commit donn\u00e9</li> <li>Les tags l\u00e9gers: <code>git tag &lt;tagname&gt;</code>     stockent davantage d'informations en conservant \u00e9galement la date de cr\u00e9ation et le cr\u00e9ateur du tag.</li> </ul> <p>Nous allons ajouter le <code>tag</code> <code>v1.0.0</code> au commit du merge.</p> <pre><code># Afficher la liste des tags\n# git tag --list\n\n# Ajouter un tag \u00e0 un commit\ngit tag v1.0.0 &lt;hash_commit&gt;\n</code></pre> <p></p> <p>Questions</p> <ol> <li>Affichez les d\u00e9tails du tag avec la commande <code>git show v1.0.0</code> ?</li> <li>Comment pouvons nous envoyer les tags sur le d\u00e9p\u00f4t distant ?</li> </ol> <p><pre><code># Publier tous les tags sur le d\u00e9p\u00f4t distant\n# git push origin --tags\n\n# Publier un tag en particulier\ngit push origin v1.0.0\n</code></pre> </p> <p>Questions</p> <ol> <li>Voir dans le d\u00e9p\u00f4t distant si le <code>tag</code> est bien pr\u00e9sent ?</li> </ol>"},{"location":"fiches/git/commands/#vii-faire-du-nettoyage","title":"VII- Faire du nettoyage","text":"<p>Dans cette section nous allons apprendre \u00e0 faire de la maintenance de git.</p>"},{"location":"fiches/git/commands/#git-prune","title":"git prune","text":"<p>Pour supprimer les r\u00e9f\u00e9rences locales des branches distantes qui n'existent plus sur le d\u00e9p\u00f4t distant.</p> <p>Info</p> <p>Voici comment fonctionne <code>git remote prune</code> :</p> <ol> <li>Il contacte le d\u00e9p\u00f4t distant sp\u00e9cifi\u00e9 par le nom (par exemple, <code>origin</code>) et r\u00e9cup\u00e8re la liste des branches disponibles.</li> <li>Il compare la liste des branches distantes avec la liste des branches locales sur votre ordinateur.</li> <li>Pour chaque branche distante qui n'existe plus sur le d\u00e9p\u00f4t distant, <code>git remote prune</code> la supprime de votre liste de branches locales.</li> </ol> <p></p>"},{"location":"fiches/git/commands/#git-garbage-collection","title":"Git garbage collection","text":"<p>Info</p> <p><code>git gc</code> est utilis\u00e9e pour r\u00e9cup\u00e9rer de l'espace disque et am\u00e9liorer les performances de votre d\u00e9p\u00f4t Git. Elle fonctionne en supprimant les objets inutiles de votre d\u00e9p\u00f4t local, tels que :</p> <ul> <li>Objets non compress\u00e9s: Ce sont des fichiers individuels qui stockent le contenu des objets Git (blobs, arbres, commits, etc.) avant qu'ils ne soient compress\u00e9s dans des fichiers compress\u00e9s.</li> <li>Cha\u00eenes de deltas packag\u00e9s: Ce sont des cha\u00eenes de deltas (diff\u00e9rences) entre les r\u00e9visions Git qui sont utilis\u00e9es pour stocker les objets plus efficacement dans les fichiers packag\u00e9s.</li> <li>Objets inaccessibles: Ce sont des objets qui ne sont plus r\u00e9f\u00e9renc\u00e9s par aucun autre objet de votre d\u00e9p\u00f4t et qui peuvent \u00eatre supprim\u00e9s en toute s\u00e9curit\u00e9.</li> </ul> <p></p>"},{"location":"fiches/git/commands/#viii-collaboration","title":"VIII- Collaboration","text":""},{"location":"fiches/git/commands/#issues","title":"Issues","text":"<p>Sur le d\u00e9p\u00f4t distant, cr\u00e9er un <code>issue</code> (probl\u00e8me).</p> <p></p> <p></p> <p></p> <p>Question</p> <p>Comment faire un commit pour satisfaire cet <code>issue</code> ? Astuce ( Closes #1)</p> <p></p>"},{"location":"fiches/git/commands/#fork","title":"Fork","text":"<p>Un <code>fork</code> est une copie d'un d\u00e9p\u00f4t. La cr\u00e9ation d'un <code>fork</code> vous permet d'exp\u00e9rimenter librement des modifications sans affecter le projet d'origine.</p> <p>Un fork vous permet de :</p> <ul> <li>Travailler sur une version ind\u00e9pendante du code source d'un projet.</li> <li>Proposer des modifications au projet original. Vous ne pouvez pas modifier directement le code du d\u00e9p\u00f4t original. Vous devez cr\u00e9er une <code>pull request</code></li> <li>Collaborer avec d'autres utilisateurs sur le code.</li> </ul> <p>Warning</p> <p>Il est important de noter que les forks ne sont pas des copies permanentes du d\u00e9p\u00f4t original.</p> <p>Exercice</p> <p>Faire le fork du projet mermaid</p>"},{"location":"fiches/git/commands/#avant-un-fork","title":"Avant un fork","text":""},{"location":"fiches/git/commands/#apres-un-fork","title":"Apr\u00e8s un fork","text":"<p>Questions</p> <ol> <li>Quelle est la visibilit\u00e9 d'un fork par d\u00e9faut ? (priv\u00e9 ou public) ?</li> <li>Si le propri\u00e9taire du d\u00e9p\u00f4t original supprime son d\u00e9p\u00f4t, qu'en sera t-il des forks ?</li> </ol>"},{"location":"fiches/git/commands/#pull-request-pr","title":"Pull Request (PR)","text":"<p>Une <code>pull request (PR)</code>, ou <code>demande de tirage</code> en fran\u00e7ais, est un moyen de proposer des modifications \u00e0 un d\u00e9p\u00f4t Git distant. Elle permet de soumettre vos changements \u00e0 un responsable de projet pour qu'il les examine et les int\u00e8gre dans le code principal.</p> <p>Info</p> <p>\ud83d\udcc4 Cr\u00e9er un pull request</p> <p>\ud83d\udcc4 Cr\u00e9er un pull request \u00e0 partir d'un <code>Fork</code></p> <p> Short video</p> <p>Exercice</p> <p>S'exercer avec les <code>pull requests</code> ...</p> <p>Zone d'approbation d'une pull request</p> <p></p> <p>Question</p> <ol> <li>Commentez les zones mis en \u00e9vidence ?</li> <li>Quelles sont les commandes internes effectu\u00e9es par un <code>merge commit</code> lors d'un <code>pull request</code> ?</li> </ol>"},{"location":"fiches/patterns/","title":"Index","text":"<p>Observer (\u00e0 travers OSGi Service Layer exemple)</p> <p>ANTLR4 (Pattern visiteur)</p>"},{"location":"fiches/patterns/abstract_factory/","title":"2.1 Exercice (Abstract Factory)","text":""},{"location":"fiches/spring/","title":"Overview","text":"<p>Objectif: L'objectif de ces TPs est de t'introduire dans l'utilisation du framework spring et spring boot.</p> <p>Dur\u00e9e: Il se d\u00e9roulera en une s\u00e9ance de 4h. Certains aspects cl\u00e9s seront abord\u00e9s. Les autres concepts seront couverts par des ressources en ligne s\u00e9lectionn\u00e9es que nous vous pr\u00e9sentons ici.</p> <p>Pr\u00e9requis:</p> <ul> <li>Disposer d'un ordinateur</li> <li>Installer Java version 21. Cette astuce vous permettra de swicher la version de java sur windows, au besoin.</li> <li>Installer Maven</li> <li>Postman</li> <li>Installer IntelliJ IDEA (La licence est disponible)</li> </ul>"},{"location":"fiches/spring/rest_bootstrap/","title":"TP 3: BOOTSTRAP REST APP","text":"<p>Objectif: Tu seras capable \u00e0 la fin de ce TP de fournir  des REST API avec SpringBoot</p> <p>Mots cl\u00e9s</p> <ul> <li>REST API</li> <li>Spring Data JPA</li> <li>Spring Web</li> <li>LomBok</li> <li>H2</li> <li>Swagger</li> </ul> <p>Ressources</p> <p>Code source du TP</p> <p>Questions</p> <p>Qu'est ce qu'une API RESTful ?</p>"},{"location":"fiches/spring/rest_bootstrap/#ajout-des-dependances","title":"Ajout des d\u00e9pendances","text":"<ol> <li>Apr\u00e8s avoir choisi les d\u00e9pendances, g\u00e9n\u00e9rez le projet.</li> <li>Ouvrez le projet avec votre IDE et sp\u00e9cifier la version de Java \u00e0 utiliser.</li> </ol>"},{"location":"fiches/spring/rest_bootstrap/#stucturation-du-projet","title":"Stucturation du projet","text":""},{"location":"fiches/spring/rest_bootstrap/#connexion-a-h2","title":"Connexion \u00e0  H2","text":"<p>Voir cette rubrique</p>"},{"location":"fiches/spring/rest_bootstrap/#persistence-de-donnees","title":"Persistence de donn\u00e9es","text":"<p>V\u00e9rifiez la persistence en base de donn\u00e9es</p> <p></p>"},{"location":"fiches/spring/rest_bootstrap/#creation-de-repository","title":"Cr\u00e9ation de repository","text":""},{"location":"fiches/spring/rest_bootstrap/#creation-de-service","title":"Cr\u00e9ation de service","text":"<p>Dans cette section, nous allons cr\u00e9er un service et son impl\u00e9mentation.</p> <p></p> <p>Une impl\u00e9mentation du service avec l'injection de d\u00e9pendance (<code>EtudiantRepository</code>)</p> <p></p> <p>Questions</p> <p><code>EtudiantRepository</code> est une interface. Quelle impl\u00e9mentation est fournie ?</p>"},{"location":"fiches/spring/rest_bootstrap/#mise-en-place-du-controller","title":"Mise en place du controller","text":"<p>Questions</p> <ol> <li>Quelle est la diff\u00e9rence entre <code>PUT</code> et <code>PATCH</code> ?</li> <li>Dans notre controlleur, les mod\u00e8les sont expos\u00e9s dans le controller. Une bonne pratique consiste \u00e0 utiliser les <code>DTO (Data Transfer Object)</code>. Quels sont leurs utilit\u00e9s ?</li> <li>Connaissez-vous <code>GraphQL</code> ? Quel est son fonctionnement ?</li> </ol>"},{"location":"fiches/spring/rest_bootstrap/#tests-fonctionnels","title":"Tests fonctionnels","text":""},{"location":"fiches/spring/rest_bootstrap/#documentation-de-lapi-swagger","title":"Documentation de l'API (Swagger)","text":""},{"location":"fiches/spring/rest_bootstrap/#ajout-de-la-dependance-de-swagger-3","title":"Ajout de la d\u00e9pendance de Swagger 3","text":"<p>Ajoutez la d\u00e9pendance de Swagger dans le fichier <code>pom.xml</code></p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;3.2.2&lt;/version&gt;\n        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;be.labil&lt;/groupId&gt;\n    &lt;artifactId&gt;rest&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;rest-app&lt;/name&gt;\n    &lt;description&gt;Bootstrap Rest API&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;21&lt;/java.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.h2database&lt;/groupId&gt;\n            &lt;artifactId&gt;h2&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n        &lt;!-- Swagger dependencies --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springdoc&lt;/groupId&gt;\n            &lt;artifactId&gt;springdoc-openapi-starter-webmvc-ui&lt;/artifactId&gt;\n            &lt;version&gt;2.0.2&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;!-- Swagger dependencies --&gt;\n\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;\n                        &lt;exclude&gt;\n                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                        &lt;/exclude&gt;\n                    &lt;/excludes&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre> <p>Pour <code>Spring Boot 3</code>, c'est la seule configuration \u00e0 faire afin de permettre <code>Swagger 3</code></p> <p>L'UI Swagger est alors disponible \u00e0 l'adresse <code>http://localhost:8080/swagger-ui/index.html</code></p> <p>Le format JSON est disponible \u00e0 l'adresse <code>http://localhost:8080/v3/api-docs</code></p> <p>Nous pouvons ensuite faire quelques ajustements dans les controlleurs afin de fournir plus de description.</p> <pre><code>//...\n\n@Tag(name = \"Etudiant\", description = \"L'api des \u00e9tudiants\")\n@RestController\n@RequestMapping(\"/etudiant\")\n@AllArgsConstructor\npublic class EtudiantController {\n    public final EtudiantService etudiantService;\n\n\n    @PostMapping(\"/create\")\n    Etudiant create(@RequestBody Etudiant etudiant){\n        return etudiantService.insert(etudiant);\n    }\n\n    @Operation(\n            summary = \"R\u00e9cup\u00e9ration de la liste des \u00e9tudiants\",\n            description = \"Retourne la liste de tous les \u00e9tudiants avec leurs matricules\")\n    @ApiResponses(value = {\n            @ApiResponse(responseCode = \"200\", description = \"Op\u00e9ration r\u00e9ussie\")\n    })\n    @GetMapping(\"/list\")\n    List&lt;Etudiant&gt; read(){\n        return etudiantService.list();\n    }\n\n//...\n</code></pre> <p></p>"},{"location":"fiches/spring/rest_bootstrap/#liens-utiles-pour-swagger","title":"Liens utiles pour Swagger","text":"<ul> <li> <p>\ud83d\udcc4 Swagger 3 et SpringBoot 3</p> </li> <li> <p>\ud83d\udcc4 Spring Boot + Swagger 3 example (with OpenAPI 3)</p> </li> </ul>"},{"location":"fiches/thread/","title":"Overview","text":""},{"location":"fiches/thread/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Algorithmique</li> <li>Bases en Java </li> <li>Bases en Programmation Orient\u00e9e Objet (POO)</li> </ul>"},{"location":"fiches/thread/#planning-des-seances","title":"Planning des s\u00e9ances","text":"<p>Ces TPs se d\u00e9rouleront en trois s\u00e9ances comme suit:</p> Objectif: Tu seras capable d'\u00e9valuer une application en environnement multithread\u00e9 S\u00e9ances Avant TP Contenu Ressources 1 QCM sur les threads \u274c          Identifier les probl\u00e8mes classiques li\u00e9s \u00e0 l'utilisation des threads          - Questions ouvertes                       3.12 Philosophes \u274c              Lecteurs/R\u00e9dacteurs \u274c              Producteurs/Consommateurs \u274c  2              Rendre en ligne les exercices:                  - Salle d'attente \u274c                 3.14 Le verrou Mutex \u274c                        1. Comprendre les m\u00e9canismes de synchronisation (mutex et les s\u00e9maphores)              2. R\u00e9soudre un probl\u00e8me complexe de synchronisation.              - Correction des exercices rendus \u274c              - R\u00e9solution d'un \u00e9tude de cas complexe portant sur l'une des fiches              - Apprendre \u00e0 debugger une application multithread\u00e9e avec Eclipse/IntelliJ \u274c              - Questions ouvertes                       3.15 Tower Bridge ou \u274c              3.11 Petri Net ou \u274c              3.10 Workflow \u274c  3          Objectifs sp\u00e9cifiques:          1. Proposer une solution \u00e0 une mise en situation          2. Evaluer la production d'un pair              - Mini-Exam (1H)              - Correction              - Evaluation par les pairs              - Questions ouvertes                    3.13 Le probl\u00e8me m\u00e9taphysique des \u201cphilosophes et des boulets \u00e0 la li\u00e9geoise congel\u00e9s\u201d \u274c ou         3.16 Power Bridge \u274c ou         3.18 Pipe-Line \u274c"},{"location":"fiches/thread/#quelques-rappels","title":"Quelques rappels","text":""},{"location":"fiches/thread/#implementation-en-java","title":"Impl\u00e9mentation en Java","text":""},{"location":"fiches/thread/#avec-linterface","title":"Avec l'interface","text":"<pre><code>class ToDo implements Runnable {\n    private String image;\n    public ToDo(String im){ \n        image=im; \n    }\n    public void DisplayImage(String im){ \u2026 }\n\n    public void run(){\n        DisplayImage(image);\n    }\n}\n\n\nclass Main(){\n    public static void main(String...){\n        ToDo job1 = new ToDo(\"http://www.ici.com/lion.jpg\");\n        ToDo job2 = new ToDo(\"http://www.la-bas.com/tigre.jpg\");\n        Thread t1 = new Thread(job1);\n        Thread t2 = new Thread(job2);\n        t1.start();\n        t2.start();\n        // Autre chose;\n    }\n\n}\n</code></pre>"},{"location":"fiches/thread/#avec-lheritage","title":"Avec l'h\u00e9ritage","text":"<pre><code>public class ToDoFast extends Thread {\n    private String image;\n    public ToDoFast(String im){\n        image= im;\n    }\n\n    public void run(){\n        displayImage(image);\n    }\n}\n\nToDoFast t1 = new ToDoFast(\u00ab http://www.ici.com/lion.jpg \u00bb);\nToDoFast t2 = new ToDoFast(\u00ab http://www.labas.com/tigre.jpg \u00bb);\nt1.start();\nt2.start();\n</code></pre>"},{"location":"fiches/thread/#bon-a-savoir","title":"Bon \u00e0 savoir","text":"<ul> <li>La m\u00e9thode run() d\u2019un thread ne doit pas \u00eatre invoqu\u00e9e ;</li> <li>Le bloc synchronis\u00e9 ne doit pas prendre en param\u00e8tre un thread ;</li> <li>Wait(), notity, notifyAll() doivent \u00eatre utilis\u00e9 dans le bloc synchronized ;</li> <li>Si une variable est partag\u00e9e en dehors d\u2019un bloc synchronis\u00e9, le modificateur volatile est peut \u00eatre pertinent \u00e0 utiliser pour s\u2019assurer de la coh\u00e9rence de la m\u00eame visibilit\u00e9 de la variable par les diff\u00e9rents threads.</li> </ul>"},{"location":"fiches/thread/philosophes/","title":"Diner des philosophes","text":""},{"location":"fiches/thread/qcm_exercices/","title":"QCM et exercices","text":"<p>Les QCM et les exercices sont \u00e0 rendre suivant la programmation sur Webcampus et sont indispensables pour la suite des TP.</p>"},{"location":"fiches/thread/qcm_exercices/#qcm","title":"QCM","text":"<p>Cliquez sur #QCM pour acc\u00e9der au questionnaire. Vous aurez besoin de vous connectez \u00e0 Webcampus.</p>"},{"location":"fiches/thread/qcm_exercices/#exercices","title":"Exercices","text":""},{"location":"fiches/thread/qcm_exercices/#1-verou-mutex","title":"1- V\u00e9rou Mutex","text":"<p>Impl\u00e9mentez une classe qui joue le r\u00f4le d\u2019un verrou mutex en Java. Vous aurez certainement besoin d\u2019utiliser des m\u00e9thodes synchronized, ainsi que les m\u00e9thodes wait(), notify() et notifyAll().</p>"},{"location":"fiches/thread/qcm_exercices/#2-salle-dattente-virtuelle","title":"2- Salle d'attente virtuelle","text":"<p>\u00c9crire un programme multithread qui g\u00e8re l'acc\u00e8s \u00e0 un site web en limitant le nombre de connexions simultan\u00e9es. Le programme doit permettre aux utilisateurs d'acc\u00e9der \u00e0 la plateforme tout en respectant les r\u00e8gles suivantes :</p> <ul> <li> <p>Limiter le nombre maximal de connexions simultan\u00e9es, ce nombre \u00e9tant param\u00e9trable. Si ce nombre est atteint, les nouveaux utilisateurs qui tentent d'acc\u00e9der \u00e0 la plateforme sont mis en attente dans une file d'attente FIFO (First-In-First-Out).</p> </li> <li> <p>Si la file d'attente atteint sa capacit\u00e9 maximale, les requ\u00eates des utilisateurs suppl\u00e9mentaires seront d\u00e9bout\u00e9es avec un retour timeout.</p> </li> <li> <p>Chaque utilisateur qui a acc\u00e8s \u00e0 la plateforme dispose d'un temps maximal de navigation, d\u00e9fini de mani\u00e8re al\u00e9atoire. Si un utilisateur se d\u00e9connecte avant la fin de ce temps, la ressource est lib\u00e9r\u00e9e, permettant au prochain utilisateur dans la file d'acc\u00e9der \u00e0 la plateforme.</p> </li> <li> <p>Les utilisateurs en attente sont inform\u00e9s du nombre de personnes dans la file d'attente et re\u00e7oivent une estimation du nombre de minutes avant leur acc\u00e8s. Cette information doit \u00eatre mise \u00e0 jour en temps r\u00e9el.</p> </li> </ul> <p>Pour impl\u00e9menter cela, vous devrez utiliser des m\u00e9canismes de synchronisation tels que des threads, des mutex (ou s\u00e9maphores) pour g\u00e9rer l'acc\u00e8s concurrentiel aux ressources partag\u00e9es, et un m\u00e9canisme de file d'attente pour organiser l'ordre d'arriv\u00e9e des utilisateurs en attente. De plus, vous devrez g\u00e9n\u00e9rer des temps al\u00e9atoires pour le temps maximal de navigation de chaque utilisateur.</p>"},{"location":"frameworks/aop/","title":"Overview","text":""},{"location":"frameworks/aop/#aop-aspect-oriented-programming","title":"AOP (Aspect Oriented Programming)","text":"<p> Pr\u00e9sentation</p>"},{"location":"frameworks/aop/#aspectj","title":"AspectJ","text":"<p> 1- Cr\u00e9er un simple aspect en utilisant les deux syntaxes : classique et avec annotations.</p> <p> 2- Cr\u00e9er un aspect de journalisation d'une application</p> <p> 3- Cr\u00e9er un aspect qui permet de s\u00e9curiser une application</p> <p> 4- Cr\u00e9er un aspect qui permet de corriger un bug dans l'application</p> <p> 5- Cr\u00e9er un aspect qui utilise le m\u00e9canisme d'introduction pour changer la structure d'une application</p> <p> 6- Cr\u00e9er un aspect qui permet de parall\u00e9liser les traitements d'une application.</p>"},{"location":"frameworks/docker/","title":"Overview","text":""},{"location":"frameworks/docker/#docker","title":"Docker","text":"<p> Docker - Dockerfile - Docker compose</p> <p> Comprendre Docker</p> <p> Historique Docker</p> <p> Playlist formation compl\u00e8te docker</p>"},{"location":"frameworks/docker/#containers-vs-vm","title":"Containers Vs VM","text":"<p> Difference entre conteneur et VM</p>"},{"location":"frameworks/docker/#kubernetes","title":"Kubernetes","text":"<p> Playlist pour comprendre Kubernetes et son architecture</p>"},{"location":"frameworks/git/","title":"Collaborer sur un projet \ud83e\udd2f","text":""},{"location":"frameworks/git/#le-versioning","title":"Le versioning","text":"<p>Le versioning en informatique fait r\u00e9f\u00e9rence \u00e0 la gestion des diff\u00e9rentes versions d'un logiciel, d'un fichier, d'une base de donn\u00e9es ou d'autres \u00e9l\u00e9ments de donn\u00e9es. Cela permet de:</p> <p></p> <ul> <li>Faire le suivi des modifications apport\u00e9es \u00e0 ces \u00e9l\u00e9ments<ul> <li>Contr\u00f4le</li> <li>Coh\u00e9rence</li> <li>Tra\u00e7abilit\u00e9 ou historique;</li> </ul> </li> <li>Restaurer les \u00e9l\u00e9ments;</li> <li>D\u00e9veloppements parall\u00e8les;</li> <li>Organiser les \u00e9l\u00e9ments;</li> </ul> <p>L'image \u00e0 droite est celle du syst\u00e8me SemVer (pour Semantic Versioning)</p>"},{"location":"frameworks/git/#les-outils-existants","title":"Les outils existants","text":"<p>Outils de versioning qui existent: Subversion (SVN), Mercurial, Git, \u2026</p> <p>NB: Apache Subversion (SVN) sorti en 2004 est appr\u00e9ci\u00e9 par les informaticiens travaillant sur des projets n\u00e9cessitant plus de confidentialit\u00e9. En effet, il permet de travailler sur une partie pr\u00e9cise d\u2019un projet en limitant les acc\u00e8s \u00e0 l\u2019int\u00e9gralit\u00e9 du code source.</p>"},{"location":"frameworks/git/#pourquoi-git","title":"Pourquoi Git ?","text":"<p>Pourquoi Git malgr\u00e9 l'existence d'autres outils de versioning...</p> <p></p> <p> Comprendre GIT en 5 minutes</p> <p>Git a \u00e9t\u00e9 d\u00e9velopp\u00e9 par Linus Torvalds et publi\u00e9 en tant que projet open source sous une licence libre, en 2005. Les atouts de Git:</p> <ul> <li> <p>Distribution d\u00e9centralis\u00e9e: Git est un syst\u00e8me de gestion de versions d\u00e9centralis\u00e9, ce qui signifie que chaque utilisateur dispose de sa propre copie compl\u00e8te du r\u00e9f\u00e9rentiel.</p> </li> <li> <p>Collaboration</p> </li> <li> <p>Vitesse: con\u00e7u pour \u00eatre efficace et effectue de nombreuses op\u00e9rations en local, sans n\u00e9cessiter de communication avec un serveur distant.</p> </li> <li> <p>Gestion efficace des branches</p> </li> <li> <p>\u00c9cosyst\u00e8me riche: Git dispose d'un \u00e9cosyst\u00e8me riche en outils et services tiers. Des plates-formes telles que GitHub, GitLab et Bitbucket offrent des services d'h\u00e9bergement de r\u00e9f\u00e9rentiels Git, de suivi des probl\u00e8mes, de gestion de projets, de collaboration et d'int\u00e9gration continue. Ces outils facilitent la collaboration et l'automatisation des workflows de d\u00e9veloppement.</p> </li> <li> <p>S\u00e9curit\u00e9 et int\u00e9grit\u00e9: Chaque r\u00e9vision est identifi\u00e9e par une empreinte cryptographique, ce qui garantit que les donn\u00e9es ne sont pas alt\u00e9r\u00e9es\u2026.</p> </li> </ul>"},{"location":"frameworks/git/#concepts-de-base-git","title":"Concepts de base git","text":"<p>1) Repository: Les fichiers versionn\u00e9s (suivis, traqu\u00e9s\u2026) sont conserv\u00e9s dans un d\u00e9p\u00f4t. Ce d\u00e9p\u00f4t contient les fichiers, les historiques et la configuration de git</p> <p>2) Les trois \u00e9tats des fichiers dans git: </p> <ul> <li> <p>Working directory (espace de travail)</p> </li> <li> <p>Stage area \u2013 pre commit holding area (Zone de stockage interm\u00e9diaire)</p> </li> <li> <p>Commit \u2013 Git repository (History) Le r\u00e9f\u00e9renciel git ou historique de validation</p> </li> </ul> <p></p> <p>Que se passe t-il lorsque le d\u00e9veloppeur modifie le fichier, l\u2019ajoute \u00e0 l\u2019index mais ne fais pas un commit?</p> <p></p> <p>Le fichier se retrouve donc dans un \u00e9tat distinct entre l\u2019index et le d\u00e9p\u00f4t, ce qui est \u00e0 l\u2019origine des deux identifiants diff\u00e9rents.</p> <p> Zones et cycles de vie des fichiers</p> <p> Mettre de c\u00f4t\u00e9 un travail en cours (et le reprendre plus tard) git stash</p> <p>3) Remote repository</p> <p>4) Branch</p>"},{"location":"frameworks/git/#workflows","title":"Workflows","text":""},{"location":"frameworks/git/#installation-et-configuration","title":"Installation et configuration","text":"<p> Installation sur Windows</p> <p> Installation sur Linux</p> <p> Installation sur Mac</p> <p>\ud83d\udcc4 Premi\u00e8res configurations sur windows</p> <p>En r\u00e9sum\u00e9:</p> <p>Pour qu\u2019\u00e0 la fin de cette section l\u2019installation de Git soit fonctionnelle, il est n\u00e9cessaire d\u2019effectuer cette configuration.</p> <pre><code>git config --list # Voir la liste des configurations\ngit config --global user.name \"Prenom Nom\" # Configurer le nom d\u2019utilisateur\ngit config --global user.email \"email@domaine.extension\" # Configurer l'email\n</code></pre>"},{"location":"frameworks/git/#contenu-de-git","title":"Contenu de .git","text":"<pre><code>cd .git # Acc\u00e9der au r\u00e9pertoire .git \u00e0 la racine du projet\nls -la # Afficher le contenu du dossier .git\n</code></pre>"},{"location":"frameworks/git/#gitignore","title":".gitignore","text":"<p>Fichier sp\u00e9cial \u00e0 la racine du r\u00e9pertoire (projet) qui tient la liste des fichiers que git ne doit pas tracker.</p> <p>Pour plus d'informations ...</p>"},{"location":"frameworks/git/#readmemd","title":"README.md","text":"<p>Fichier de documentation de votre projet en <code>markdown</code></p>"},{"location":"frameworks/git/#help","title":"Help ???","text":"<p>Apr\u00e8s avoir install\u00e9 git. Voici quelques commandes de base:</p> <p>Voir la version de git install\u00e9 <pre><code>git --version\n</code></pre> Voir la liste des commandes de porcelaine (commande de haut niveau) <pre><code>git --help\n</code></pre> Voir la liste des commandes de porcelaine et de plomberie <pre><code>git help -a\n</code></pre> Avoir des informations sur une commande <pre><code>git &lt;command_git&gt; --help\n</code></pre></p>"},{"location":"frameworks/git/#commandes-de-base","title":"Commandes de base","text":"<pre><code>git clone https://xxUSERxx@bitbucket.org/xxUSERxx/xxPROJETxx.git\ngit add .\ngit status\ngit commit -m \"Mon premier commit\"\ngit pull\n    - git fetch\n    - git merge FETCH_HEAD\ngit push origin master\n</code></pre>"},{"location":"frameworks/git/#integration-de-git-dans-les-ide","title":"Int\u00e9gration de git dans les IDE","text":"<p>\ud83d\udcc4 Visual Studio Code</p> <p>\ud83d\udcc4 Eclipse</p> <p>\ud83d\udcc4 IntelliJ</p>"},{"location":"frameworks/git/#les-plateformes-git-populaires","title":"Les plateformes Git populaires","text":"<p>Ce point des fonctionnalit\u00e9s offertes par les plateformes date de janvier 2024. Cela pourrait \u00e9voluer dans le futur</p>"},{"location":"frameworks/git/#cicd","title":"CI/CD \u274c","text":"<ul> <li>\ud83d\udcc4 CI/CD avec Gitlab</li> </ul>"},{"location":"frameworks/git/#github-pages-et-markdown","title":"GitHub Pages et Markdown","text":"<p>GitHub Pages et Markdown sont deux technologies qui sont souvent utilis\u00e9es ensemble pour cr\u00e9er des sites Web statique.</p> <p>GitHub Pages est un service de publication de sites Web statique qui vous permet de publier votre contenu \u00e0 partir de votre r\u00e9f\u00e9rentiel GitHub. Markdown est un langage de balisage l\u00e9ger qui est utilis\u00e9 pour formater le texte.</p> <p>Pour cr\u00e9er un site Web avec GitHub Pages, vous devez utiliser Markdown pour formater votre contenu. Cela vous permet de cr\u00e9er des pages Web avec des titres, des paragraphes, des listes, des liens, des images et d'autres \u00e9l\u00e9ments de formatage.</p> <p>Voici un exemple de code Markdown qui peut \u00eatre utilis\u00e9 pour cr\u00e9er une page Web simple :</p> <pre><code># Titre de la page\n\nCe texte est un paragraphe.\n\n* Liste \u00e0 puces\n* Une autre liste \u00e0 puces\n\n[Lien vers une autre page](https://example.com)\n\n![Image](https://example.com/image.png)\n</code></pre> <p>Si vous voulez savoir comment cette documentation a \u00e9t\u00e9 faite \ud83d\ude1c, suivez ce tutoriel.</p> <p> How To Create STUNNING Code Documentation With MkDocs Material Theme</p>"},{"location":"frameworks/git/#autres-ressources","title":"Autres ressources","text":""},{"location":"frameworks/git/#markdown-and-co","title":"Markdown and Co.","text":"<p>\ud83d\udcc4 Sheet Cheat markdown</p> <p>\ud83d\udcc4 Mkdocs site officiel</p> <p>\ud83d\udcc4 Material Mkdocs site officiel</p> <p>\ud83d\udcc4 Emoji in markdown</p> <p>\ud83d\udcc4 GitHub markdown</p> <p>\ud83d\udcc4 Sheet Cheat markdown</p> <p>\ud83d\udcc4 Mermaid documentation</p> <p>\ud83d\udcc4 Mermaid cheat sheet</p> <p>\ud83d\udcc4 Draw Diagrams With Markdown</p>"},{"location":"frameworks/git/#git","title":"Git","text":"<p>\ud83d\udcc4 Documentation officiel de Git</p> <p> Git and GitHub Tutorial for Beginners</p> <p> Formation Git</p> <p>\ud83d\udcc4 Git cheatsheet</p> <p> GIT : stash, revert, restore, rebase, reset, cherry-pick</p> <p> Git Rebase Interactive :: A Practical Example</p> <p>Devenez un expert de Git et GitHub en 1H - de A a Z</p>"},{"location":"frameworks/git/#projets-bases-sur-git","title":"Projets bas\u00e9s sur git","text":"<p>\ud83d\udcc4 Git like a pro</p> <p>\ud83d\udcc4 Use case 1: Git et wordpress</p> <p>\ud83d\udcc4 Use case 2: Intrusion detection with git (basics)</p>"},{"location":"frameworks/groovy/","title":"Overview","text":""},{"location":"frameworks/groovy/#concepts-de-base","title":"Concepts de base","text":"<p> Groovy Beginner</p>"},{"location":"frameworks/groovy/#groovy-pour-dsl","title":"Groovy pour DSL","text":""},{"location":"frameworks/ide/eclipse/","title":"Eclipse","text":""},{"location":"frameworks/ide/eclipse/#dev-tools","title":"Dev tools","text":""},{"location":"frameworks/ide/eclipse/#git-integration","title":"Git integration","text":"<p> Configurer un environnement de travail avec Git</p>"},{"location":"frameworks/ide/eclipse/#debug","title":"Debug","text":"<p>https://www.youtube.com/watch?v=Q43VrMiu8K4</p>"},{"location":"frameworks/ide/intellij/","title":"Intellij IDEA","text":""},{"location":"frameworks/ide/intellij/#dev-tools","title":"Dev tools","text":""},{"location":"frameworks/ide/intellij/#git","title":"Git","text":"<p>\ud83d\udcc4 Git integration</p> <p> How to setup and use Git and GitHub with IntelliJ IDEA</p> <p> Git Production Release|Merge, Rebase, Stash, Release using IntelliJ (longue vid\u00e9o)</p>"},{"location":"frameworks/ide/intellij/#debug","title":"Debug","text":""},{"location":"frameworks/ide/vscode/","title":"Vscode","text":""},{"location":"frameworks/ide/vscode/#dev-tools","title":"Dev tools","text":""},{"location":"frameworks/ide/vscode/#git","title":"Git","text":"<p> Configurer un environnement de travail avec Git</p>"},{"location":"frameworks/ide/vscode/#debug","title":"Debug","text":""},{"location":"frameworks/osgi/","title":"OSGi (Open Services Gateway initiative)","text":"<p>Archietecture orient\u00e9e composant.</p> <p>OSGi suppose que les applications peuvent \u00eatre consid\u00e9r\u00e9es comme un ensemble de bundles</p> <p>Composant = Services = Bundles</p>"},{"location":"frameworks/osgi/#pourquoi-osgi","title":"Pourquoi OSGi ?","text":""},{"location":"frameworks/osgi/#modularite","title":"Modularit\u00e9","text":"<ul> <li>Reutilisabili\u00e9</li> <li>Abstraction</li> <li>S\u00e9paration des pr\u00e9occupations</li> <li>Maintenance facile</li> </ul>"},{"location":"frameworks/osgi/#sans-osgi-limites-de-la-modularite-avec-java","title":"Sans OSGi ? Limites de la modularit\u00e9 avec Java","text":"<ol> <li> <p>Lorsque le package A a besoin du code de paquet C, les paquets B, D, E et F peuvent voir ce code.</p> </li> <li> <p>Ne fournit pas une mani\u00e8re dynamique de g\u00e9rer les versions et d\u00e9pendances.</p> </li> <li> <p>Au moment de l'ex\u00e9cution, le contenu de tous les fichiers JAR est trait\u00e9 comme une liste unique, ordonn\u00e9e et globale appel\u00e9e classpath. Si A requires B et C et A d\u00e9pends d'une version de B et C d'une autre version de B: il pourrait avoir de conflits.</p> </li> <li> <p>...</p> </li> </ol>"},{"location":"frameworks/osgi/#avec-osgi","title":"Avec OSGi","text":"<ol> <li> <p>Encapsulation au niveau du package.</p> </li> <li> <p>D\u00e9ploiement dynamique d\u2019applications sans interruption de la plateforme: chargement \u00e0 chaud</p> </li> <li> <p>Gestion des versions et de l'isolation des bundles : si A importe B et B importe C, A n'a pas acc\u00e8s au code dans C</p> </li> <li> <p>...</p> </li> </ol>"},{"location":"frameworks/osgi/#difference-entre-un-jar-et-un-bundle","title":"Diff\u00e9rence entre un Jar et un bundle","text":"<p>Un JAR et un Bundle diff\u00e8rent en ce sens qu'un Bundle n'est pas un application compl\u00e8te emball\u00e9e, mais plut\u00f4t un ensemble de classes tr\u00e8s coh\u00e9rents.</p>"},{"location":"frameworks/osgi/#architecture-en-couches","title":"Architecture en couches","text":"<p>Les fonctionnalit\u00e9s du framework sont divis\u00e9es en couches:</p> <p></p> <p>Source : osgi.core-5.0.0 official specifications documentation</p> <p>La couche Module peut \u00eatre utilis\u00e9e sans la couche life cycle et Service Layer.</p>"},{"location":"frameworks/osgi/#security-layer","title":"Security Layer","text":"<p>Gestion des aspects de s\u00e9curit\u00e9</p>"},{"location":"frameworks/osgi/#module-layer","title":"Module Layer","text":"<p>Dans le contexte d'OSGi, un bundle est une unit\u00e9 logicielle autonome qui peut \u00eatre charg\u00e9e et d\u00e9charg\u00e9e dynamiquement. Les bundles peuvent utiliser des classes les uns des autres, mais cette utilisation est contr\u00f4l\u00e9e par des contraintes.</p> <p>Cette couche d\u00e9finit comment un bundle doit \u00eatre exporter et comment il peut importer des d\u00e9pendances.</p>"},{"location":"frameworks/osgi/#contenu-dun-bundle","title":"Contenu d'un bundle","text":"<p>Il s'agit d'un jar structur\u00e9 comme suit:</p> <ul> <li>Un fichier MANIFEST.MF pr\u00e9sent dans le r\u00e9pertoire META-INF</li> <li>Une classe Activator ex\u00e9cut\u00e9e au moment de l'activation ou de la d\u00e9sactivation du composant</li> </ul>"},{"location":"frameworks/osgi/#manifestmf","title":"MANIFEST.MF","text":"<p>Export-Package</p> <p>Declare which packages are visible to other bundles in essence adding an additional access modifier to Java</p> <p>Import-Package</p> <p>Declare which \u201cexported-package(s)\u201d the bundle depends on for functionality.</p> <p>Require-Bundle</p> <p>Include an entire Bundle as a dependency (legacy).</p>"},{"location":"frameworks/osgi/#activator-interface","title":"Activator Interface","text":""},{"location":"frameworks/osgi/#life-cycle-layer","title":"Life Cycle Layer","text":"<p>G\u00e8re le cycle de vie des bundles \u00e0 partir d'un repository de mani\u00e8re dynamique (sans n\u00e9cessiter que la JVM soit red\u00e9marr\u00e9e)</p>"},{"location":"frameworks/osgi/#service-registry-layer","title":"Service Registry Layer","text":"<p>Fournit un mod\u00e8le de service publier/trouver/lier pour d\u00e9coupler les bundles. Permet de g\u00e9rer la communication entre les bundles</p>"},{"location":"frameworks/osgi/#implementations-populaires","title":"Impl\u00e9mentations populaires","text":"<ul> <li>Eclipse Equinox</li> <li>Apache Felix</li> <li>...</li> </ul>"},{"location":"frameworks/osgi/#liens-utiles","title":"Liens utiles","text":"<ul> <li> <p>\ud83d\udcc4 Sp\u00e9cifications API OSGi</p> </li> <li> <p>\ud83d\udcc4 Introduction au OSGi</p> </li> <li> <p> OSGI Explained</p> </li> <li> <p>\ud83d\udcc4 Introduction au d\u00e9veloppement par composants</p> </li> <li> <p>\ud83d\udcc4 Embedding the Felix Framework in my host application</p> </li> <li> <p>\ud83d\udcc4 Install OSGi with IntelliJ</p> </li> <li>\ud83d\udcc4 Maven Bundle Plugin commands</li> </ul>"},{"location":"frameworks/python/","title":"Frameworks python","text":""},{"location":"frameworks/python/#django","title":"Django","text":"<p> Tutoriel Django 5</p> <p>\ud83d\udcc4 Documentation officielle</p>"},{"location":"frameworks/python/#flask","title":"Flask","text":""},{"location":"frameworks/spring/","title":"Introduction","text":"<p>Cette ressource est bas\u00e9e sur la version 5 de Spring</p> <p>Spring est un framework Java open source qui permet de cr\u00e9er des applications Web et d'entreprise.</p> <p>Spring est un framework complet qui fournit une grande vari\u00e9t\u00e9 de fonctionnalit\u00e9s, notamment :</p> <ul> <li>Inversion de contr\u00f4le (IoC)</li> <li>Injec\u00adtion de d\u00e9pendance (DI)</li> <li>AOP (Aspect-Oriented Programming)</li> <li>ORM (Object-Relational Mapping)</li> <li>Mod\u00e8le-Vue-Contr\u00f4leur (MVC)</li> <li>Services Web</li> <li>...</li> </ul> <p>Ressources utiles:</p> <ul> <li>\ud83d\udcc4 Site officiel</li> <li>\ud83d\udcc4 Introduction \u00e0 Spring</li> <li>\ud83d\udcc4 Sources github de baeldung.com</li> </ul>"},{"location":"frameworks/spring/audit_logs/","title":"Audit","text":"<p>Automatic created_at, updated_at, created_by, updated_by fields</p>"},{"location":"frameworks/spring/audit_logs/#spring-boot-actuator","title":"Spring boot actuator","text":"<p>https://www.baeldung.com/spring-boot-actuators</p>"},{"location":"frameworks/spring/audit_logs/#logging","title":"Logging","text":""},{"location":"frameworks/spring/concepts/","title":"Concepts","text":""},{"location":"frameworks/spring/concepts/#introduction","title":"Introduction","text":"<p>IoC (Inversion de d\u00e9pendance) - Injection de d\u00e9pendance - MVC - AOP</p> <p> Mooc JAVA EE SPRING</p>"},{"location":"frameworks/spring/concepts/#inversion-de-dependance","title":"Inversion de d\u00e9pendance","text":"<p>L'inversion de d\u00e9pendance fait partie des principes SOLID. Voir tous les principes SOLID en cliquant ici.</p>"},{"location":"frameworks/spring/concepts/#injection-de-dependance","title":"Injection de d\u00e9pendance","text":""},{"location":"frameworks/spring/concepts/#strategie-dinjection","title":"Strat\u00e9gie d'injection","text":"<p>Il y a trois mani\u00e8res d'injecter une d\u00e9pendance:</p> <ul> <li>Par les attributs du classe (moins pr\u00e9f\u00e9r\u00e9e) : Spring peut utiliser la r\u00e9flexion pour moifier les propri\u00e9t\u00e9s priv\u00e9es non finales.</li> <li>Par les setters (sujet \u00e0 quelques d\u00e9bats)</li> <li>Par le constructeur de la classe (\u00e0 pr\u00e9ferer)</li> </ul>"},{"location":"frameworks/spring/concepts/#classe-concrete-ou-interface","title":"Classe concr\u00e8te ou interface","text":"<p>L'injection de d\u00e9pendance peut \u00eatre fait en utilisant une classe concr\u00e8te ou une interface (\u00e0 pr\u00e9f\u00e9rer).</p>"},{"location":"frameworks/spring/concepts/#bonnes-pratiques-avec-linjection-de-dependance","title":"Bonnes pratiques avec l'injection de d\u00e9pendance","text":"<ul> <li>Privil\u00e9giez l'utilisation de l'injection par constructeur plut\u00f4t que de l'injection par setter;</li> <li>Marquez les propri\u00e9t\u00e9s (public ou private) comme final pour les composants inject\u00e9s et initialisez les dans le constructeur;</li> <li>Chaque fois que cela est possible, utilisez une interface</li> </ul>"},{"location":"frameworks/spring/concepts/#mvc","title":"MVC","text":"<p>En savoir plus</p>"},{"location":"frameworks/spring/concepts/#aop","title":"AOP","text":"<p>En savoir plus</p>"},{"location":"frameworks/spring/concepts/#spring-ioc-et-spring-context","title":"Spring IoC et Spring Context","text":"<p> (Source youtube chanel: AzerCode, Learn to code)</p> <ul> <li> Architecture du Conteneur IoC</li> <li>\ud83d\udcc4 Spring Context</li> </ul>"},{"location":"frameworks/spring/concepts/#beans","title":"Beans","text":""},{"location":"frameworks/spring/concepts/#java-bean-vs-pojo-plain-old-java-object-vs-spring-bean","title":"Java Bean vs POJO (Plain Old Java Object) vs Spring Bean","text":"<ul> <li> Voir la diff\u00e9rence entre ces notions...</li> </ul>"},{"location":"frameworks/spring/concepts/#les-types-de-portee","title":"Les types de port\u00e9e","text":"<ul> <li> <p>Singleton (default): Une seule instance du bean est cr\u00e9\u00e9e dans le conteneur IoC. Cela signifie qu'il n'y a qu'une seule instance de ce bean dans toute l'application.</p> </li> <li> <p>Prototype: Une nouvelle instance du bean est cr\u00e9\u00e9e chaque fois qu'il est demand\u00e9. Cela signifie que chaque fois que vous r\u00e9cup\u00e9rez le bean, vous obtenez une nouvelle instance distincte.</p> </li> <li> <p>Request: Une seule instance du bean est cr\u00e9\u00e9e par requ\u00eate HTTP. Cela signifie qu'une nouvelle instance du bean est cr\u00e9\u00e9e pour chaque requ\u00eate HTTP qui est re\u00e7ue par l'application.</p> </li> <li> <p>Session: Une seule instance du bean est cr\u00e9\u00e9e par session HTTP. Cela signifie qu'une nouvelle instance du bean est cr\u00e9\u00e9e pour chaque session HTTP active dans l'application.</p> </li> <li> <p>Global-Session: Une seule instance du bean est cr\u00e9\u00e9e par session globale. Les sessions globales ne sont g\u00e9n\u00e9ralement utilis\u00e9es que dans un contexte de portlet.</p> </li> <li> <p>Application: Le bean est li\u00e9 au cycle de vie d'un contexte Servlet. Cela signifie que le bean est cr\u00e9\u00e9 lorsque le contexte Servlet est initialis\u00e9 et d\u00e9truit lorsque le contexte Servlet est d\u00e9truit.</p> </li> <li> <p>Websocket: lie une seule d\u00e9finition de bean au cycle de vie d'un WebSocket. Cela signifie que le bean est cr\u00e9\u00e9 lorsque le WebSocket est cr\u00e9\u00e9 et d\u00e9truit lorsque le WebSocket est ferm\u00e9.</p> </li> <li> <p>Custom Scope:  Les port\u00e9es Spring sont extensibles et vous pouvez d\u00e9finir votre propre port\u00e9e en impl\u00e9mentant l'interface \"Scope\" de Spring.</p> </li> </ul> <p>Pour plus de d\u00e9tails, consultez la documentation Java de Spring. Vous ne pouvez pas remplacer les port\u00e9es Singleton et Prototype int\u00e9gr\u00e9es.</p>"},{"location":"frameworks/spring/concepts/#cycle-de-vie-des-beans","title":"Cycle de vie des beans","text":"<p> (Source youtube chanel: AzerCode, Learn to code)</p> <p>Toutes les vid\u00e9os de la playlist vous permettront de comprendre en d\u00e9tails le cycle de vie d'un bean.</p> <p> Beans Lifecycle </p>"},{"location":"frameworks/spring/concepts/#autres-ressources","title":"Autres ressources","text":"<ul> <li>\ud83d\udcc4 IoC Principe et impl\u00e9mentation</li> <li>\ud83d\udcc4 IoC and dependency injection principle</li> </ul>"},{"location":"frameworks/spring/db_confs/","title":"Configuration des DB","text":""},{"location":"frameworks/spring/db_confs/#h2","title":"H2","text":"<p>H2 est une base de donn\u00e9es relationnelle open source \u00e9crite en Java. Elle est l\u00e9g\u00e8re, rapide et portable, ce qui la rend id\u00e9ale pour le d\u00e9veloppement et les tests d'applications.</p> <p>H2 est une base de donn\u00e9es embarqu\u00e9e, ce qui signifie qu'elle peut \u00eatre int\u00e9gr\u00e9e \u00e0 une application Java sans avoir besoin d'un serveur de base de donn\u00e9es distinct. Elle est \u00e9galement auto-h\u00e9berg\u00e9e, ce qui signifie qu'elle ne n\u00e9cessite pas de logiciel tiers pour fonctionner.</p> <p>Les \u00e9tapes de configurations:</p> <p>1) Ajouter la d\u00e9pendance au fichier pom.xml <pre><code>&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;com.h2database&lt;/groupId&gt;\n        &lt;artifactId&gt;h2&lt;/artifactId&gt;\n        &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> 2) Ajouter cette configuration dans application.properties</p> <pre><code>spring.h2.console.enabled=true\nspring.datasource.url=jdbc:h2:mem:testdb\n</code></pre> <p>3) Acc\u00e9dez \u00e0 la base au niveau de l'interface <code>http://localhost:8080/h2-console</code></p> <p></p>"},{"location":"frameworks/spring/db_confs/#mariadbmysql","title":"MariaDB/MySQL","text":"<p>https://www.youtube.com/watch?v=Zzjn_Jz-A2E</p> <p>https://www.youtube.com/watch?v=k6Nmt-l1Bzc</p>"},{"location":"frameworks/spring/db_confs/#mongodb","title":"MongoDB","text":""},{"location":"frameworks/spring/db_confs/#postgresql","title":"PostgreSQL","text":""},{"location":"frameworks/spring/dev_tools/","title":"Dev Tools","text":""},{"location":"frameworks/spring/dev_tools/#installation","title":"Installation","text":"<ul> <li>Cette extension est ajout\u00e9e via maven dans le fichier pom.xml</li> </ul> <pre><code>&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n        &lt;optional&gt;true&lt;/optional&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> <ul> <li>Par d\u00e9faut elle est d\u00e9sactiv\u00e9e lors du build.</li> </ul>"},{"location":"frameworks/spring/dev_tools/#quelques-fonctionnalites","title":"Quelques fonctionnalit\u00e9s:","text":"<ul> <li>LiveReload</li> <li>Template Caching</li> </ul>"},{"location":"frameworks/spring/jms_activemq/","title":"JMS (Java Message Service) ActiveMQ","text":"<p> Part 1 - Syst\u00e8mes Distribu\u00e9s Asynchrones avec JMS ActiveMQ Concepts</p> <p> Part 2</p> <p> Part 3</p> <p> Part 4</p> <p> Part 5</p> <p> Part 6</p>"},{"location":"frameworks/spring/persistence/","title":"Persistence layer","text":""},{"location":"frameworks/spring/persistence/#jpa-or-hibernate","title":"JPA or Hibernate","text":"<p>J'importe les annotations d'Hibernate ou de JPA \ud83d\ude35\u200d\ud83d\udcab? </p>"},{"location":"frameworks/spring/persistence/#pour-faire-court","title":"Pour faire court... \ud83d\ude80","text":"<p>Faites un tour ici \ud83d\ude43 pour vite discerner.</p>"},{"location":"frameworks/spring/persistence/#pour-faire-long","title":"Pour faire long \ud83d\udeb2","text":"<p>Hibernate est l'une des impl\u00e9mentation populaire de JPA. Lorsque vous importez les annotations JPA dans votre projet, Spring Boot les convertit automatiquement en annotations Hibernate. Cela permet \u00e0 Spring Boot de profiter des fonctionnalit\u00e9s avanc\u00e9es d'Hibernate, tout en conservant la simplicit\u00e9 des annotations JPA.</p> <p>Par exemple, l'annotation @Entity est convertie en annotation @Entity d'Hibernate. L'annotation @Table est convertie en annotation @Table d'Hibernate. Et ainsi de suite.</p> <p>Voici un exemple de code qui montre comment Spring Boot convertit les annotations JPA en annotations Hibernate :</p> <pre><code>import javax.persistence.*;\n\n@Entity\n@Table(name = \"users\")\npublic class User {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = \"username\")\n    private String username;\n\n    @Column(name = \"password\")\n    private String password;\n\n    // ...\n}\n</code></pre> <p>Lorsque vous ex\u00e9cutez ce code dans un projet Spring Boot, Spring Boot convertit les annotations JPA en annotations Hibernate comme suit :</p> <p><pre><code>import org.hibernate.annotations.*;\n\n@Entity\n@Table(name = \"users\")\npublic class User {\n\n    @Id\n    @Generated(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = \"username\")\n    private String username;\n\n    @Column(name = \"password\")\n    private String password;\n\n    // ...\n}\n</code></pre> Les annotations Hibernate sont ensuite utilis\u00e9es par Hibernate pour g\u00e9rer les donn\u00e9es en base de donn\u00e9es.</p>"},{"location":"frameworks/spring/persistence/#pourquoi-utiliser-les-annotations-jpa-dans-le-code","title":"Pourquoi utiliser les annotations JPA dans le code ?","text":"<p>Dans un projet Spring Boot avec Hibernate et JPA, il est recommand\u00e9 d'importer les annotations depuis JPA et non Hibernate. Cela est d\u00fb aux raisons suivantes :</p> <ul> <li>JPA est le standard, tandis qu'Hibernate est une impl\u00e9mentation de JPA. Cela signifie que les annotations JPA sont disponibles dans toutes les impl\u00e9mentations de JPA, y compris Hibernate.</li> <li>Les annotations JPA sont plus simples et plus portables que les annotations Hibernate. Les annotations JPA utilisent une syntaxe plus simple et sont plus faciles \u00e0 comprendre pour les d\u00e9veloppeurs qui ne sont pas familiers avec Hibernate.</li> <li>Les annotations JPA sont plus \u00e9volutives que les annotations Hibernate. Les annotations JPA sont con\u00e7ues pour \u00e9voluer avec le standard JPA, tandis que les annotations Hibernate peuvent devenir obsol\u00e8tes ou indisponibles dans les futures versions d'Hibernate.</li> </ul> <p>En cons\u00e9quence, il est recommand\u00e9 d'utiliser les annotations JPA dans tous les projets Spring Boot, quel que soit l'impl\u00e9mentation de JPA utilis\u00e9e. Et si un jour vous pensez \u00e0 changer d'impl\u00e9mentation... \ud83d\ude1c quoi de plus facile.</p>"},{"location":"frameworks/spring/persistence/#autres-implementations-jpa","title":"Autres impl\u00e9mentations JPA","text":"Impl\u00e9mentation Caract\u00e9ristiques <code>EclipseLink</code> Impl\u00e9mentation de r\u00e9f\u00e9rence, compl\u00e8te et robuste <code>OpenJPA</code> Impl\u00e9mentation mature et stable, compatible avec une large gamme de SGBDR <code>DataNucleus</code> Impl\u00e9mentation flexible et extensible, offre une large gamme de fonctionnalit\u00e9s <code>Hibernate</code> Impl\u00e9mentation populaire, offre une large gamme de fonctionnalit\u00e9s <p>En fin de compte, le choix de l'impl\u00e9mentation de JPA d\u00e9pend des besoins sp\u00e9cifiques de l'application. Si vous recherchez une solution flexible et performante, Hibernate est un bon choix. Cependant, si vous recherchez une solution simple et abordable, une autre impl\u00e9mentation de JPA peut \u00eatre une meilleure option.</p>"},{"location":"frameworks/spring/persistence/#annotations-et-attributs-focus","title":"Annotations et attributs (focus)","text":"<p>Nous ne parcourrons pas dans cette section, tous les annotations et attributs mais juste certains \u00e0 garder sous le coude \ud83e\uddf7.</p>"},{"location":"frameworks/spring/persistence/#generationtype","title":"GenerationType","text":""},{"location":"frameworks/spring/persistence/#cascadetype","title":"CascadeType","text":""},{"location":"frameworks/spring/persistence/#fetchtype-strategies","title":"FetchType strategies","text":"<p>FetchType est une annotation utilis\u00e9e en JPA et Hibernate pour sp\u00e9cifier comment une association entre deux entit\u00e9s doit \u00eatre charg\u00e9e. Dans une relation one-to-one, il existe trois valeurs possibles pour:</p> <ul> <li>LAZY = l'association est charg\u00e9e avec l'entit\u00e9 principale. Cela signifie que lorsque nous chargeons l'entit\u00e9 principale, l'entit\u00e9 associ\u00e9e est \u00e9galement charg\u00e9e.</li> <li>EAGER = l'association est charg\u00e9e uniquement lorsque nous y acc\u00e9dons. Cela signifie que lorsque nous chargeons l'entit\u00e9 principale, l'entit\u00e9 associ\u00e9e n'est pas charg\u00e9e.</li> </ul> <p>Exemple: <pre><code>@Entity\npublic class User {\n\n    @Id\n    private Long id;\n\n    @OneToOne(fetch = FetchType.LAZY)\n    private Address address;\n\n}\n\n@Entity\npublic class Address {\n\n    @Id\n    private Long id;\n\n    private String street;\n    private String city;\n    private String state;\n    private String zipCode;\n\n}\n</code></pre></p> <p>Dans cet exemple, lorsque nous chargeons un utilisateur, l'adresse associ\u00e9e n'est pas charg\u00e9e. Pour acc\u00e9der \u00e0 l'adresse, nous devons appeler la m\u00e9thode getAddress() sur l'utilisateur.</p>"},{"location":"frameworks/spring/persistence/#impact-sur-la-performance","title":"Impact sur la performance","text":"<p>Le choix de FetchType peut avoir un impact sur les performances de l'application. FetchType.EAGER peut am\u00e9liorer les performances si nous acc\u00e9dons souvent \u00e0 l'association. Cependant, il peut \u00e9galement entra\u00eener une augmentation de la taille de la requ\u00eate et de la consommation de m\u00e9moire. FetchType.LAZY peut am\u00e9liorer les performances si nous n'acc\u00e9dons pas souvent \u00e0 l'association. Cependant, il peut entra\u00eener une augmentation du temps de r\u00e9ponse de la requ\u00eate.</p> <p>Aller plus loin ...</p>"},{"location":"frameworks/spring/persistence/#onetoone-relationship","title":"OneToOne relationship","text":"<p> Ressource vid\u00e9o</p> <p>Les annotations @JoinColumn et @MapsId sont utilis\u00e9es pour d\u00e9finir la relation entre deux entit\u00e9s en Java Spring Boot. Elles sont toutes deux utilis\u00e9es dans les relations un-\u00e0-un, mais elles ont des diff\u00e9rences importantes.</p>"},{"location":"frameworks/spring/persistence/#joincolumn","title":"@JoinColumn","text":"<p>L'annotation @JoinColumn est utilis\u00e9e pour d\u00e9finir une colonne de jointure entre les deux entit\u00e9s. La colonne de jointure est une colonne qui est pr\u00e9sente dans les deux entit\u00e9s et qui est utilis\u00e9e pour stocker la cl\u00e9 \u00e9trang\u00e8re de l'autre entit\u00e9.</p> <p>Par exemple, si nous avons deux entit\u00e9s, User et Address, et que nous voulons que chaque utilisateur ait une adresse, nous pouvons utiliser l'annotation @JoinColumn comme suit : <pre><code>@Entity\npublic class User {\n\n    @Id\n    private Long id;\n\n    @OneToOne\n    @JoinColumn(name = \"address_id\")\n    private Address address;\n\n}\n\n@Entity\npublic class Address {\n\n    @Id\n    private Long id;\n\n    private String street;\n    private String city;\n    private String state;\n    private String zipCode;\n\n}\n</code></pre> Dans cet exemple, la colonne de jointure est address_id. Cette colonne est pr\u00e9sente dans les deux entit\u00e9s, User et Address. La valeur de la colonne address_id dans l'entit\u00e9 User est la cl\u00e9 \u00e9trang\u00e8re de l'entit\u00e9 Address.</p>"},{"location":"frameworks/spring/persistence/#mapsid","title":"@MapsId","text":"<p>L'annotation @MapsId est utilis\u00e9e pour mapper la cl\u00e9 primaire de l'une des entit\u00e9s sur la cl\u00e9 primaire de l'autre entit\u00e9. Cela permet d'\u00e9viter d'avoir \u00e0 d\u00e9finir une colonne de jointure distincte.</p> <p>Par exemple, nous pouvons utiliser l'annotation @MapsId pour red\u00e9finir la relation entre les entit\u00e9s User et Address comme suit : <pre><code>@Entity\npublic class User {\n\n    @Id\n    private Long id;\n\n    @OneToOne\n    @MapsId\n    private Address address;\n\n}\n\n@Entity\npublic class Address {\n\n    @Id\n    private Long id;\n\n    private String street;\n    private String city;\n    private String state;\n    private String zipCode;\n\n}\n</code></pre> Dans cet exemple, la cl\u00e9 primaire de l'entit\u00e9 User est mapp\u00e9e sur la cl\u00e9 primaire de l'entit\u00e9 Address. Cela signifie que la valeur de la cl\u00e9 primaire de l'entit\u00e9 User est \u00e9galement la cl\u00e9 \u00e9trang\u00e8re de l'entit\u00e9 Address.</p> <p>Diff\u00e9rences</p> <p>Les principales diff\u00e9rences entre @JoinColumn et @MapsId sont les suivantes :</p> <ul> <li>@JoinColumn n\u00e9cessite une colonne de jointure distincte, tandis que @MapsId n'en n\u00e9cessite pas.</li> <li>@JoinColumn est plus flexible, car il permet de sp\u00e9cifier le nom et le type de la colonne de jointure.</li> <li>@MapsId est plus simple \u00e0 utiliser, car il n'est pas n\u00e9cessaire de d\u00e9finir une colonne de jointure distincte. Avec cette strat\u00e9gie, vous n'avez plus besoin de vous souciez de la relation inverse (bidirectionnelle) \ud83d\ude0e car les deux entit\u00e9s parent Address (parent) et User (enfant) partagent la m\u00eame cl\u00e9 primaire. Du parent, on peut r\u00e9cup\u00e9rer l'enfant en sp\u00e9cifiant la cl\u00e9 primaire du parent.</li> </ul>"},{"location":"frameworks/spring/persistence/#performance","title":"Performance","text":""},{"location":"frameworks/spring/persistence/#default-fetchtype","title":"Default FetchType","text":"<p>FetchType.EAGER est la valeur par d\u00e9faut pour les relations one-to-one.</p>"},{"location":"frameworks/spring/persistence/#lazytooneoptionno_proxyproxyfalse","title":"LazyToOneOption.NO_PROXY|PROXY|FALSE","text":"<p>06:14  (Source)==&gt; L'annotation @LazyToOne(LazyToOneOption.NO_PROXY) est obsol\u00e8te depuis la version 5.5 de Hibernate. La r\u00e9f\u00e9rence pour la fonctionnalit\u00e9 de chargement paresseux sans proxy est la suivante : @OneToOne(fetch = FetchType.LAZY)</p> <ol> <li> <p>FALSE: The @LazyToOne(LazyToOneOption.FALSE) Hibernate annotation operates as if you set the fetch strategy to FetchType.EAGER. </p> </li> <li> <p>PROXY: The @LazyToOne(LazyToOneOption.PROXY) Hibernate annotation is redundant if the association uses the FetchType.LAZY strategy. </p> </li> <li> <p>NO_PROXY (Before): In @OneToOne bidirectional association side with following configuration activated:</p> </li> </ol> <pre><code>&lt;plugin&gt;\n    &lt;groupId&gt;org.hibernate.orm.tooling&lt;/groupId&gt;\n    &lt;artifactId&gt;hibernate-enhance-maven-plugin&lt;/artifactId&gt;\n    &lt;version&gt;${hibernate.version}&lt;/version&gt;\n    &lt;executions&gt;\n        &lt;execution&gt;\n            &lt;configuration&gt;\n                &lt;enableLazyInitialization&gt;true&lt;/enableLazyInitialization&gt;\n            &lt;/configuration&gt;\n            &lt;goals&gt;\n                &lt;goal&gt;enhance&lt;/goal&gt;\n            &lt;/goals&gt;\n        &lt;/execution&gt;\n    &lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre> <p>L'utiliation de @LazyToOne(LazyToOneOption.PROXY) est obsel\u00e8te \u00e0 partir de la version 5.5 de Hibernate. Plus besoin dans faire mention explicite. @OneToOne(fetch = FetchType.LAZY) suffit.</p> <p>Aller plus loin...</p>"},{"location":"frameworks/spring/persistence/#manytoone-relationship","title":"ManyToOne relationship","text":"<p>La nom par d\u00e9faut de la colonne de jointure est sous ce format: entityParentNameLowercase_id</p> <p>Exemple:</p> <pre><code>@Entity\n@Table(name = \"orders\")\npublic class Order {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @ManyToOne\n    @JoinColumn(name = \"customer_id\")\n    private Customer customer;\n\n    // ...\n}\n</code></pre> <p>Relation inverse:</p> <pre><code>@Entity\n@Table(name = \"customers\")\npublic class Customer {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = \"name\")\n    private String name;\n\n    @OneToMany(mappedBy = \"customer\")\n    private List&lt;Order&gt; orders;\n\n    // ...\n}\n</code></pre> <p>Pour utiliser la relation inverse en JPA, nous pouvons utiliser les m\u00e9thodes get() et set() de la propri\u00e9t\u00e9 de la classe Customer qui r\u00e9f\u00e9rence la collection d'instances de la classe Order.</p> <p>Voici un exemple de code qui montre comment utiliser la relation inverse en JPA :</p> <pre><code>Customer customer = new Customer();\ncustomer.setName(\"John Doe\");\n\n// Cr\u00e9er un nouvel ordre\nOrder order = new Order();\norder.setCustomer(customer);\n\n// Ajouter l'ordre \u00e0 la liste des commandes du client\ncustomer.getOrders().add(order);\n\n// Obtenir la liste des commandes du client\nList&lt;Order&gt; orders = customer.getOrders();\nSystem.out.println(orders.size()); // 1\n</code></pre> <p>Aller plus loin:</p> <ul> <li> @vladmihalcea</li> <li> koor.fr</li> <li>\ud83d\udcc4 baeldung.com</li> </ul>"},{"location":"frameworks/spring/persistence/#manytomany-relationship","title":"ManyToMany relationship","text":"<pre><code>@Entity\n@Table(name = \"products\")\npublic class Product {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = \"name\")\n    private String name;\n\n    @ManyToMany(cascade={CascadeType.PERSIST, CascadeType.MERGE})\n    @JoinTable(\n        name = \"products_categories\",\n        joinColumns = @JoinColumn(name = \"product_id\"),\n        inverseJoinColumns = @JoinColumn(name = \"category_id\")\n    )\n    private Set&lt;Category&gt; categories;\n\n    // ...\n}\n</code></pre> <p>Dans cet exemple, les propri\u00e9t\u00e9s categories de la classe Product et products de la classe Category sont d\u00e9finies comme des relations ManyToMany. L'annotation @JoinTable sp\u00e9cifie la table de jointure qui est utilis\u00e9e pour stocker les donn\u00e9es de la relation.</p> <p>Pour utiliser une relation ManyToMany en JPA, nous pouvons utiliser les m\u00e9thodes add() et remove() de la propri\u00e9t\u00e9 qui r\u00e9f\u00e9rence la collection d'instances de l'autre entit\u00e9.</p> <p>Voici un exemple de code qui montre comment utiliser une relation ManyToMany en JPA :</p> <pre><code>Product product = new Product();\nproduct.setName(\"T-shirt\");\n\n// Ajouter la cat\u00e9gorie \"V\u00eatements\" au produit\nCategory category = new Category();\ncategory.setName(\"V\u00eatements\");\nproduct.getCategories().add(category);\n\n// Ajouter la cat\u00e9gorie \"Homme\" au produit\nCategory category = new Category();\ncategory.setName(\"Homme\");\nproduct.getCategories().add(category);\n\n// Obtenir la liste des cat\u00e9gories du produit\nSet&lt;Category&gt; categories = product.getCategories();\nSystem.out.println(categories.size()); // 2\n</code></pre> <p>Dans cet exemple, nous cr\u00e9ons un nouveau produit nomm\u00e9 \"T-shirt\". Nous ajoutons ensuite les cat\u00e9gories \"V\u00eatements\" et \"Homme\" au produit. Enfin, nous obtenons la liste des cat\u00e9gories du produit et imprimons sa taille.</p> <p>Dans ce cas, un produit peut appartenir \u00e0 plusieurs cat\u00e9gories, et une cat\u00e9gorie peut contenir plusieurs produits.</p> <p>Relation inverse</p> <pre><code>@Entity\n@Table(name = \"categories\")\npublic class Category {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = \"name\")\n    private String name;\n\n    @ManyToMany(mappedBy = \"categories\")\n    private Set&lt;Product&gt; products;\n\n    // ...\n}\n</code></pre> <p>List or Set mapping</p> <p>Dans le cas d'une relation ManyToMany, il est recommand\u00e9 d'utiliser la structure de donn\u00e9es Set au lieu de List pour le mapping. Cela est d\u00fb \u00e0 deux raisons principales :</p> <ul> <li>Les cl\u00e9s \u00e9trang\u00e8res doivent \u00eatre uniques. Dans une relation ManyToMany, chaque instance de l'entit\u00e9 principale peut \u00eatre associ\u00e9e \u00e0 plusieurs instances de l'entit\u00e9 secondaire. Pour s'assurer que les cl\u00e9s \u00e9trang\u00e8res sont uniques, il est n\u00e9cessaire d'utiliser une structure de donn\u00e9es qui ne permet pas les doublons. La structure de donn\u00e9es Set est une bonne solution car elle ne permet pas les doublons.</li> <li>Les performances sont meilleures. Les structures de donn\u00e9es Set sont g\u00e9n\u00e9ralement plus efficaces que les structures de donn\u00e9es List. Cela est d\u00fb au fait que les structures de donn\u00e9es Set ne n\u00e9cessitent pas de maintenir l'ordre des \u00e9l\u00e9ments.</li> </ul> <p>Dans l'exemple que j'ai donn\u00e9, la relation ManyToMany entre les classes Product et Category est bidirectionnelle. Cela signifie que chaque produit peut \u00eatre associ\u00e9 \u00e0 plusieurs cat\u00e9gories, et que chaque cat\u00e9gorie peut contenir plusieurs produits. Dans ce cas, il est important de s'assurer que les cl\u00e9s \u00e9trang\u00e8res sont uniques. L'utilisation d'une structure de donn\u00e9es Set permet de garantir l'unicit\u00e9 des cl\u00e9s \u00e9trang\u00e8res, et am\u00e9liore les performances de la relation.</p> <p>Bien s\u00fbr, il existe des cas o\u00f9 l'utilisation d'une structure de donn\u00e9es List peut \u00eatre pr\u00e9f\u00e9rable. Par exemple, si la relation ManyToMany est unidirectionnelle, ou si l'ordre des \u00e9l\u00e9ments est important.</p>"},{"location":"frameworks/spring/persistence/#custom-mapping-table","title":"Custom mapping table","text":"<ul> <li> <p> @vladmihalcea</p> </li> <li> <p>\ud83d\udcc4 baeldung.com</p> </li> </ul> <p>Aller plus loin:</p> <ul> <li> @vladmihalcea</li> <li> koor.fr</li> </ul>"},{"location":"frameworks/spring/persistence/#heritage","title":"H\u00e9ritage","text":"<p>JPA offre trois types d'h\u00e9ritage :</p>"},{"location":"frameworks/spring/persistence/#joined","title":"JOINED","text":"<p>la strat\u00e9gie JOINED est la plus courante et la plus flexible. Elle consiste \u00e0 cr\u00e9er une table par classe h\u00e9rit\u00e9e. Chaque classe h\u00e9rit\u00e9e aura donc sa propre table, et les tables seront jointes entre elles par une cl\u00e9 \u00e9trang\u00e8re.</p> <p>Avantages :</p> <p>La strat\u00e9gie JOINED est la plus flexible, car elle permet de repr\u00e9senter tout type d'h\u00e9ritage. Elle est \u00e9galement la plus efficace, car elle permet de r\u00e9duire le nombre de tables et de colonnes n\u00e9cessaires.</p> <p>Inconv\u00e9nients :</p> <p>La strat\u00e9gie JOINED peut \u00eatre moins performante que les autres strat\u00e9gies, car elle n\u00e9cessite de faire des jointures lors de l'acc\u00e8s aux donn\u00e9es.</p>"},{"location":"frameworks/spring/persistence/#table_per_class","title":"TABLE_PER_CLASS","text":"<p>La strat\u00e9gie TABLE_PER_CLASS consiste \u00e0 cr\u00e9er une table par classe, y compris la classe de base. Cela signifie que chaque attribut de la classe de base sera r\u00e9p\u00e9t\u00e9 dans chaque table des classes h\u00e9rit\u00e9es.</p> <p>Avantages :</p> <p>La strat\u00e9gie TABLE_PER_CLASS est la plus simple \u00e0 mettre en \u0153uvre, car elle ne n\u00e9cessite pas de jointures. Elle est \u00e9galement la plus performante, car elle \u00e9vite les jointures lors de l'acc\u00e8s aux donn\u00e9es.</p> <p>Inconv\u00e9nients :</p> <p>La strat\u00e9gie TABLE_PER_CLASS peut \u00eatre moins flexible que les autres strat\u00e9gies, car elle ne permet pas de repr\u00e9senter facilement des relations entre classes h\u00e9rit\u00e9es.</p> <p>Elle peut \u00e9galement \u00eatre moins efficace en termes de stockage, car elle n\u00e9cessite de r\u00e9p\u00e9ter les attributs de la classe de base dans chaque table des classes h\u00e9rit\u00e9es.</p>"},{"location":"frameworks/spring/persistence/#single_table","title":"SINGLE_TABLE","text":"<p>La strat\u00e9gie SINGLE_TABLE consiste \u00e0 cr\u00e9er une seule table pour toutes les classes h\u00e9rit\u00e9es. Cela signifie que tous les attributs de toutes les classes h\u00e9rit\u00e9es seront stock\u00e9s dans la m\u00eame table.</p> <p>Avantages :</p> <p>La strat\u00e9gie SINGLE_TABLE est la plus simple \u00e0 mettre en \u0153uvre, car elle ne n\u00e9cessite pas de jointures. Inconv\u00e9nients :</p> <p>La strat\u00e9gie SINGLE_TABLE est la moins flexible, car elle ne permet pas de repr\u00e9senter facilement des relations entre classes h\u00e9rit\u00e9es. Elle peut \u00e9galement \u00eatre moins efficace en termes de stockage, car elle n\u00e9cessite de stocker des donn\u00e9es redondantes dans la m\u00eame table.</p> <p>Le choix de la strat\u00e9gie d'h\u00e9ritage \u00e0 utiliser d\u00e9pend des besoins sp\u00e9cifiques de l'application. La strat\u00e9gie JOINED est la plus courante et la plus flexible, mais elle peut \u00eatre moins performante que les autres strat\u00e9gies. La strat\u00e9gie TABLE_PER_CLASS est la plus simple \u00e0 mettre en \u0153uvre et la plus performante, mais elle peut \u00eatre moins flexible. La strat\u00e9gie SINGLE_TABLE est la plus simple \u00e0 mettre en \u0153uvre, mais elle est la moins flexible et la moins efficace en termes de stockage.</p> <p>Aller plus loin...</p> <ul> <li>\ud83d\udcc4 H\u00e9ritage avec JPA</li> </ul>"},{"location":"frameworks/spring/persistence/#autres-ressources","title":"Autres ressources","text":"<ul> <li> <p>\ud83d\udcc4 Moocs Java EE Spring</p> </li> <li> <p>\ud83d\udcc4 gayerie.dev</p> </li> <li>\ud83d\udcc4 thorben-janssen.com (Best pratices)</li> <li> <p>\ud83d\udcc4 cours CNAM</p> </li> <li> <p> High-Performance Java Persistence</p> </li> <li> <p> High-Performance Java Persistence</p> </li> <li> <p> Tutorials about Hibernate and JPA</p> </li> </ul>"},{"location":"frameworks/spring/serveurs_tools/","title":"Servers and build tools","text":""},{"location":"frameworks/spring/serveurs_tools/#serveurs-web","title":"Serveurs web","text":""},{"location":"frameworks/spring/serveurs_tools/#maven","title":"Maven","text":"<p>\ud83d\udcc4 Introduction \u00e0 Maven</p> <p> Create Multi-Module Maven Projects</p>"},{"location":"frameworks/spring/serveurs_tools/#gradle","title":"Gradle","text":""},{"location":"frameworks/spring/spring_aop/","title":"Spring AOP","text":"<p> Diff\u00e9rence entre AspectJ et Spring AOP</p> <p>AspectJ</p> <ul> <li>Tissage statique \u00e0 la compilation</li> </ul> <p>Spring AOP</p> <ul> <li>Tissage dynamique au runtime</li> <li>Bas\u00e9 sur le pattern Proxy</li> <li>Respect de l'encapsulation (l'aspect tiss\u00e9 ne casse pas l'encapsulation. Tout ce qui est interne \u00e0 un objet est cach\u00e9: On n'a pas le droit d'ajouter un traitement si un champ est modifi\u00e9.)</li> </ul> <p>\ud83d\udcc4  En savoir plus sur l'AOP et AspectJ</p> <p> Aspect Oriented Programming With Spring AOP</p>"},{"location":"frameworks/spring/spring_boot/","title":"Spring boot","text":"<p>Spring Boot est une extension de Spring qui simplifie le d\u00e9veloppement d'applications Spring. Spring Boot fournit une configuration par d\u00e9faut pour de nombreuses fonctionnalit\u00e9s Spring, ce qui permet aux d\u00e9veloppeurs de se concentrer sur le d\u00e9veloppement de leur application plut\u00f4t que sur la configuration de Spring.</p> <p>\ud83d\udcc4 Site officiel</p> <p>Page d'acceuil de Spring Boot</p> <p></p> <p>Ajout des d\u00e9pendances</p> <p></p> <p>Configurations finales</p> <p></p>"},{"location":"frameworks/spring/structure/","title":"Structure d'un projet Spring boot","text":"<p>Intellij IDEA - Spring boot 5</p> <pre><code>.\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 main\n\u2502   \u2502   \u251c\u2500\u2500 java\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 com\n\u2502   \u2502   \u2502       \u2514\u2500\u2500 monprojet\n\u2502   \u2502   \u2502           \u251c\u2500\u2500 config/\n\u2502   \u2502   \u2502           \u251c\u2500\u2500 controllers/\n\u2502   \u2502   \u2502           \u251c\u2500\u2500 models/\n\u2502   \u2502   \u2502           \u251c\u2500\u2500 repositories/\n\u2502   \u2502   \u2502           \u251c\u2500\u2500 services/\n\u2502   \u2502   \u2502           \u2514\u2500\u2500 Application.java\n\u2502   \u2502   \u2514\u2500\u2500 resources\n\u2502   \u2502       \u251c\u2500\u2500 application.properties\n\u2502   \u2502       \u2514\u2500\u2500 static/\n\u2502   \u2514\u2500\u2500 test\n\u2502       \u251c\u2500\u2500 java\n\u2502       \u2502   \u2514\u2500\u2500 com\n\u2502       \u2502       \u2514\u2500\u2500 monprojet\n\u2502       \u2502           \u2514\u2500\u2500 ApplicationTests.java\n\u2502       \u2514\u2500\u2500 resources/\n\u2502\n\u2514\u2500\u2500 pom.xml\n</code></pre> <p>Le dossier resources contient les ressources de l'application. Il contient g\u00e9n\u00e9ralement les fichiers suivants :</p> <ul> <li>Application.java : contient le point d'entr\u00e9e de l'application. Il est utilis\u00e9 pour d\u00e9marrer l'application et configurer son environnement.</li> <li>application.properties : fichier de configuration de l'application. Le fichier des propri\u00e9tes peut \u00eatre aussi un fichier .yml</li> <li>static : dossier contenant les ressources statiques de l'application, telles que les images, les CSS et le JavaScript.</li> <li>pom.xml : Fichier de d\u00e9pendances Maven</li> </ul> <p>Les dossiers suivants peuvent \u00eatre ajout\u00e9s pour structurer le projet:</p> <ul> <li> <p>controllers: Les classes repr\u00e9sentant les contr\u00f4leurs traitent les requ\u00eates HTTP de l'utilisateur. Elles sont utilis\u00e9es pour afficher les donn\u00e9es \u00e0 l'utilisateur et pour traiter les actions de l'utilisateur. Elles contiennent peu de r\u00e8gles m\u00e9tiers et sollicitent les services pour les r\u00e8gles m\u00e9tiers</p> </li> <li> <p>services: Les classes repr\u00e9sentant les services fournissent des fonctionnalit\u00e9s m\u00e9tier \u00e0 l'application. Elles sont utilis\u00e9es pour abstraire la logique m\u00e9tier de l'application.</p> </li> <li> <p>models: Les classes repr\u00e9entants les entit\u00e9s: POJO simple avec une collection de propri\u00e9t\u00e9s qui peuvent ou non \u00eatre utilis\u00e9es par la vue</p> </li> <li> <p>repositories:</p> </li> <li> <p>config:</p> </li> </ul>"},{"location":"ialtem/","title":"Index","text":"<ul> <li>Section:<ul> <li>section/index.md </li> <li>Page 1: section/software_architecture.md</li> <li>Page n: section/non_fonctional_properties.md</li> <li>Page n: section/api_messaging.md</li> </ul> </li> </ul>"},{"location":"ialtem/patterns/","title":"Introduction","text":""},{"location":"ialtem/patterns/#visual-studio","title":"Visual Studio","text":""},{"location":"ialtem/patterns/#les-patterns-de-creation","title":"Les patterns de cr\u00e9ation","text":""},{"location":"ialtem/patterns/#singleton","title":"Singleton","text":"<p>Ce pattern r\u00e9soud le probl\u00e8me de ...</p> <p>Diagramme de classe</p> <p>Diagramme de s\u00e9quence</p> <p>Ressources</p> <ul> <li>lien vers le code source github</li> <li>lien vers la capsule du prof</li> <li>fichier du diagramme de classe \u00e0 importer et exploiter dans visual</li> </ul>"},{"location":"ialtem/patterns/#les-patterns-de-structuration","title":"Les patterns de structuration","text":""},{"location":"ialtem/patterns/#les-pattens-de-comportement","title":"Les pattens de comportement","text":""},{"location":"ialtem/patterns/#synthese-et-relation-entre-les-patterns","title":"Synth\u00e8se et relation entre les patterns","text":""},{"location":"ialtem/poo/","title":"POO avanc\u00e9e","text":""},{"location":"ialtem/poo/#classes-abstraites-vs-interfaces","title":"Classes abstraites vs Interfaces","text":"<p> Classes abstraites et interfaces</p>"},{"location":"ialtem/poo/#encapsulation-heritage-et-polymorphisme","title":"Encapsulation, H\u00e9ritage et polymorphisme","text":"<p> Encapsulation, H\u00e9ritage et Polymorphisme en programmation objet</p>"},{"location":"ialtem/poo/#genericite","title":"G\u00e9n\u00e9ricit\u00e9","text":"<p> Multi Data Type</p>"},{"location":"ialtem/poo/#reflexivite","title":"R\u00e9flexivit\u00e9","text":"<ul> <li> <p> Java reflection</p> </li> <li> <p>\ud83d\udcc4 https://www.baeldung.com/java-reflection</p> </li> <li> <p>\ud83d\udcc4 https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Class.html</p> </li> </ul>"},{"location":"ialtem/poo/#metaclasse-dune-classe","title":"M\u00e9taclasse d'une classe","text":"<p>Les m\u00e9taclasses nous permettent de d\u00e9crire le processus de cr\u00e9ation d\u2019une classe de mani\u00e8re dynamique. Nous pouvons aussi alt\u00e9rer l\u2019environnement d\u2019une classe (ses champs, ses m\u00e9thodes, ses superclasses\u2026) lors de sa cr\u00e9ation de la classe et m\u00eame apr\u00e8s son initialisation.</p> <ul> <li> <p> M\u00e9taclasse concepts</p> </li> <li> <p> M\u00e9taclasse par l'exemple en python</p> </li> </ul>"},{"location":"ialtem/solid/","title":"SOLID principles","text":"<p>Les principes SOLID sont:</p>"},{"location":"ialtem/solid/#single-responsibility-principle-formule-par-robert-c-martin","title":"Single Responsibility Principle (Formul\u00e9 par Robert C. Martin)","text":"<p>Une classe ne doit avoir qu'une seule raison de changer, c'est-\u00e0-dire qu'elle ne doit avoir qu'une seule responsabilit\u00e9</p> <p>Voici quelques points cl\u00e9s du SRP :</p> <ol> <li> <p>Une seule responsabilit\u00e9 : Une classe ne doit avoir qu'une seule raison de changer. Cela signifie que la classe doit \u00eatre con\u00e7ue pour accomplir une t\u00e2che bien d\u00e9finie, et cette t\u00e2che doit \u00eatre sa seule responsabilit\u00e9.</p> </li> <li> <p>S\u00e9paration des pr\u00e9occupations : Le SRP encourage la s\u00e9paration des pr\u00e9occupations (separation of concerns) en veillant \u00e0 ce que chaque classe g\u00e8re uniquement un aspect sp\u00e9cifique de la logique de l'application.</p> </li> <li> <p>Facilit\u00e9 de maintenance : En suivant le SRP, lorsque vous apportez des modifications \u00e0 une partie de la logique, vous ne devriez pas avoir \u00e0 toucher d'autres parties du code qui ne sont pas directement li\u00e9es. Cela facilite la maintenance du code.</p> </li> <li> <p>Testabilit\u00e9 : Les classes avec une seule responsabilit\u00e9 sont plus faciles \u00e0 tester, car vous pouvez vous concentrer sur les tests de cette responsabilit\u00e9 sp\u00e9cifique sans \u00eatre perturb\u00e9 par d'autres parties du code.</p> </li> </ol>"},{"location":"ialtem/solid/#openclose-principle-formule-par-bertrand-meyer","title":"Open/Close Principle (formul\u00e9 par Bertrand Meyer)","text":"<p>Une classe doit \u00eatre ouverte \u00e0 l'extension mais ferm\u00e9e \u00e0 la modification. Entre d'autres termes: le comportement d'une classe doit pouvoir \u00eatre \u00e9tendu sans que son code source soit modifi\u00e9.</p> <p>Explications:</p> <ol> <li> <p>\ud83d\udc4dOuvert \u00e0 l'extension : Cela signifie que vous devez pouvoir ajouter de nouvelles fonctionnalit\u00e9s ou comportements \u00e0 une classe sans avoir \u00e0 modifier son code source existant. Vous \u00e9tendez la classe en cr\u00e9ant de nouvelles sous-classes ou en impl\u00e9mentant de nouvelles interfaces.</p> </li> <li> <p>\ud83d\udc4eFerm\u00e9 \u00e0 la modification : Une fois qu'une classe est bien con\u00e7ue et fonctionne correctement, son code source ne doit pas \u00eatre modifi\u00e9. Vous ne devez pas apporter de modifications \u00e0 la classe existante pour ajouter de nouvelles fonctionnalit\u00e9s.</p> </li> </ol> <p>Comment le faire ? \ud83d\ude44</p> <p>En pratique, cela signifie que lorsque vous pr\u00e9voyez de modifier le comportement d'une classe, vous ne devriez pas modifier directement cette classe. Au lieu de cela, cr\u00e9ez de nouvelles classes qui \u00e9tendent ou impl\u00e9mentent des interfaces pour introduire de nouvelles fonctionnalit\u00e9s. Ce concept est au c\u0153ur du d\u00e9veloppement logiciel orient\u00e9 objet, o\u00f9 l'h\u00e9ritage et la r\u00e9utilisation du code sont des pratiques fondamentales.</p> <ul> <li> <p>Utilisation de l'h\u00e9ritage ou de l'interface : Pour respecter le OCP, vous pouvez g\u00e9n\u00e9ralement utiliser l'h\u00e9ritage (cr\u00e9ation de sous-classes) ou l'impl\u00e9mentation d'interfaces pour ajouter de nouvelles fonctionnalit\u00e9s \u00e0 une classe existante. Cela permet d'\u00e9tendre le comportement de la classe sans toucher \u00e0 son code source.</p> </li> <li> <p>Abstraction : Le OCP est souvent atteint en utilisant des abstractions (classes abstraites, interfaces) pour d\u00e9finir des contrats clairs qui peuvent \u00eatre \u00e9tendus par de nouvelles classes sans toucher aux classes existantes.</p> </li> </ul>"},{"location":"ialtem/solid/#liskov-substitution-propose-par-barbara-liskov","title":"Liskov Substitution (propos\u00e9 par Barbara Liskov)","text":"<p>Les objets d'une sous-classe doivent pouvoir \u00eatre substitu\u00e9s aux objets de la classe de base sans affecter la coh\u00e9rence du programme.</p> <p>Cons\u00e9quences:</p> <ul> <li> <p>Si une classe B est une sous-classe (ou classe d\u00e9riv\u00e9e) d'une classe A, alors toute instance de B doit pouvoir \u00eatre utilis\u00e9e l\u00e0 o\u00f9 une instance de A est attendue, sans causer de probl\u00e8mes. Cela signifie que les sous-classes ne doivent pas modifier ou violer le contrat \u00e9tabli par la classe de base.</p> </li> <li> <p>Le respect du LSP garantit que le polymorphisme fonctionne correctement et que les classes d\u00e9riv\u00e9es ne modifient pas le comportement attendu h\u00e9rit\u00e9 de la classe de base</p> </li> </ul>"},{"location":"ialtem/solid/#interface-segregation-principle-formule-par-robert-c-martin","title":"Interface segregation principle (Formul\u00e9 par Robert C. Martin)","text":"<p>Les clients ne doivent pas \u00eatre forc\u00e9s de d\u00e9pendre d'interfaces qu'ils n'utilisent pas</p> <p>Cons\u00e9quences:</p> <ul> <li> <p>Une classe qui impl\u00e9mente une interface ne devrait pas \u00eatre oblig\u00e9e de fournir des impl\u00e9mentations pour toutes les m\u00e9thodes de cette interface, surtout si ces impl\u00e9mentations ne sont pas pertinentes pour cette classe.</p> </li> <li> <p>Le principe de s\u00e9gr\u00e9gation des interfaces se concentre sur la conception des interfaces et vise \u00e0 \u00e9viter des interfaces trop volumineuses et complexes. L'ISP encourage la cr\u00e9ation d'interfaces sp\u00e9cifiques \u00e0 un contexte ou \u00e0 un client particulier, au lieu de cr\u00e9er une seule interface volumineuse qui couvre de nombreuses m\u00e9thodes</p> </li> </ul>"},{"location":"ialtem/solid/#dependency-inversion-principle-enonce-par-robert-c-martin","title":"Dependency inversion principle (\u00e9nonc\u00e9 par Robert C. Martin)","text":"<p>1. Les modules de haut niveau ne doivent pas d\u00e9pendre des modules de bas niveau. Les deux doivent d\u00e9pendre de l'abstraction.</p> <p>2. Les abstractions ne doivent pas d\u00e9pendre des d\u00e9tails. Les d\u00e9tails doivent d\u00e9pendre des abstractions.</p> <p></p> <ul> <li> <p> Pr\u00e9cautions pour appliquer l'inversion de d\u00e9pendance</p> </li> <li> <p> Impl\u00e9mentation du principe d'inversion de d\u00e9pendance</p> </li> </ul> <p>Le DIP favorise l'utilisation de l'injection de d\u00e9pendances, de l'inversion de contr\u00f4le (IoC) et du conteneur d'injection de d\u00e9pendances pour g\u00e9rer les d\u00e9pendances entre les composants. Cela rend le code plus flexible, modulaire et facilite le remplacement des composants.</p>"},{"location":"ialtem/styles/","title":"Architectural patterns and styles","text":"<p>Articles utiles: </p> <p>\ud83d\udcc4  https://emmanuelgeorjon.com/architecture/architecture-patterns/</p> <p>\ud83d\udcc4  https://www.geeksforgeeks.org/difference-between-architectural-style-architectural-patterns-and-design-patterns/</p>"},{"location":"ialtem/styles/#api-application-programming-interface","title":"API (Application Programming Interface)","text":"<p> API quest ce c'est ?</p> <p>API est l'acronyme d'Application Programming Interface (interface de programmation d'application), une solution logicielle qui permet \u00e0 deux applications de communiquer entre elles.</p>"},{"location":"ialtem/styles/#rest-api","title":"REST API","text":"<p> REST</p>"},{"location":"ialtem/styles/#graphql","title":"GraphQL","text":"<p> API de Facebook</p>"},{"location":"ialtem/styles/#service-web-soap","title":"Service web SOAP","text":"<p> Impl\u00e9mentation d'un SOAP</p>"},{"location":"ialtem/styles/#trpc","title":"tRPC","text":"<p> typescript RPC</p> <p>tRPC est destin\u00e9 aux d\u00e9veloppeurs TypeScript full-stack donc utile dans le cas o\u00f9 le frontend et le backend sont en typescript</p>"},{"location":"ialtem/styles/#mom-message-oriented-middleware","title":"MOM (Message oriented Middleware)","text":"<p>\ud83d\udcc4  Impl\u00e9mentations populaires (RabbitMQ &amp; Apache KafKa)</p> <p>\ud83d\udcc4  RabbitMQ Vs Apache KafKa Vs ActiveMQ)</p>"},{"location":"ialtem/styles/#mvc-model-view-controller","title":"MVC (Model View Controller)","text":""},{"location":"ialtem/styles/#soa","title":"SOA","text":"<ul> <li>Echanges bas\u00e9es sur XML</li> <li>Appel de proc\u00e9dures \u00e0 distances</li> <li>Invocation de services \u00e0 distance entre applications h\u00e9t\u00e9rog\u00e8nes</li> </ul> <p> SOA architecture</p> <p> SOA VS Microservices</p>"},{"location":"ialtem/threads/","title":"Programmation concurrente: Mieux utiliser le processeur \ud83d\ude09","text":""},{"location":"ialtem/threads/#contexte","title":"Contexte","text":""},{"location":"ialtem/threads/#environnement-monoprocesseur","title":"Environnement monoprocesseur","text":"<p>Monoprocesseur = 1 coeur physique</p> <p>Un processus = un programme en cours d'ex\u00e9cution</p> <ul> <li> <p>Chaque processus s'ex\u00e9cute de mani\u00e8re isol\u00e9e (pas de partage de contexte ou de m\u00e9moire entre les processus). Autres m\u00e9canismes de communications comme les signaux, les tuyaux, les zones partag\u00e9es ...</p> </li> <li> <p>Le processeur ex\u00e9cute un processus \u00e0 la fois.</p> </li> </ul> <p>Les environnements monoprocesseur datent des premiers ordinateurs.</p> <ul> <li> <p>En attribuant des priorit\u00e9s diff\u00e9rentes (haute et basse) aux processus qui partagent un m\u00eame processeur, le syst\u00e8me d'exploitation donne l'impression que ces processus s'ex\u00e9cutent en parall\u00e8le, m\u00eame si ce n'est pas le cas.</p> </li> <li> <p>1 processeur physique peut avoir des processeurs logiques ou coeurs logiques. Ils lui permettant de faire du traitement parall\u00e8le qui dans une certaine mesure est limit\u00e9.</p> </li> </ul> <p>Le besoin de calcul intense et la limite mat\u00e9riel du  silicium (Si) ont men\u00e9 \u00e0 l'option des multiprocesseurs pour accro\u00eetre la puissance d'une machine.</p>"},{"location":"ialtem/threads/#et-si-on-faisait-un-peu-dhistoire","title":"Et si on faisait un peu d'histoire \ud83d\ude0e","text":"<p>Info</p> <p>.... Un autre facteur important qui influe directement sur la puissance de calcul des microprocesseurs est la vitesse de calcul. Les premiers microprocesseurs fonctionnaient avec une fr\u00e9quence de travail de l\u2019ordre de quelques centaines de milliers de cycles par seconde. La vitesse de calcul des instructions est un multiple du nombre de cycles par seconde. Aujourd\u2019hui, la fr\u00e9quence de travail des microprocesseurs est de l\u2019ordre des 4 GHz (4 milliards de cycles par seconde). D\u00e9passer cette fr\u00e9quence semble difficile, l\u2019augmentation de la fr\u00e9quence des microprocesseurs stagne depuis plus ann\u00e9es. La raison est simple, elle est \u00e0 chercher du c\u00f4t\u00e9 de la mati\u00e8re premi\u00e8re utilis\u00e9e pour fabriquer les composants : le silicium. Le silicium est un semi-conducteur facile \u00e0 se procurer, il est le troisi\u00e8me \u00e9l\u00e9ment le plus abondant sur terre. Les caract\u00e9ristiques du silicium font qu\u2019il est difficile de franchir les fr\u00e9quences, contrairement \u00e0 d\u2019autres semi-conducteurs tels que l\u2019ars\u00e9niure de Gallium. Cependant, ils sont plus difficiles \u00e0 concevoir et l\u2019approvisionnement en mati\u00e8re premi\u00e8re est plus compliqu\u00e9 que le silicium. C\u2019est pour cette raison que l\u2019industrie continue \u00e0 utiliser le silicium comme semi-conducteur de base avec les inconv\u00e9nients inh\u00e9rents \u00e0 cet \u00e9l\u00e9ment chimique. De plus, dans le cas du silicium, les pertes \u00e9nerg\u00e9tiques commencent \u00e0 ne plus \u00eatre lin\u00e9aires lorsque la fr\u00e9quence de travail d\u00e9passe 1 GHz. Par cons\u00e9quent, l\u2019accroissement de la fr\u00e9quence engendre des pertes \u00e9nerg\u00e9tiques li\u00e9es plus au silicium qu\u2019au traitement de l\u2019information.</p> <p> Pour rappel, un microprocesseur ne consomme de l\u2019\u00e9nergie que lorsqu\u2019il traite de l\u2019information, cette consommation \u00e9tant provoqu\u00e9e par les changements d\u2019\u00e9tat des transistors dans le microprocesseur. Un microprocesseur qui ne traite pas d\u2019information ne consomme pas (ou tr\u00e8s peu). Un autre facteur qui a permis l\u2019augmentation de la puissance de calcul est la diminution de la tension \u00e9lectrique de travail. Pour limiter les temps de commutation des transistors d\u2019un \u00e9tat vers son oppos\u00e9, les microprocesseurs ne reconnaissent que deux \u00e9tats (d\u2019o\u00f9 la logique binaire). La tension est pass\u00e9e de 5 V \u00e0 environ 1 V. Descendre en dessous du volt est difficile, les caract\u00e9ristiques des transistors rendent difficile d\u2019avoir des \u00e9tats bien d\u00e9finis n\u00e9cessaires \u00e0 la logique binaire.  Au final, la conclusion est simple. Les limites en termes de densit\u00e9, de fr\u00e9quence de travail et de tension d\u2019alimentation sont proches d\u2019\u00eatre atteintes.  L'industrie a trouv\u00e9 une parade simple \u00e0 ces probl\u00e8mes, tout du moins \u00e0 court terme. L\u2019id\u00e9e est de multiplier les unit\u00e9s de traitement. L\u2019int\u00e9r\u00eat imm\u00e9diat est de r\u00e9soudre le probl\u00e8me de la limite en fr\u00e9quence. Sch\u00e9matiquement, du point de vue de la consommation en \u00e9nergie, il est pr\u00e9f\u00e9rable d\u2019avoir 2 processeurs fonctionnant \u00e0 2 GHz plut\u00f4t qu\u2019un seul fonctionnant \u00e0 4 GHz. La puissance de calcul effective est la m\u00eame, mais la consommation en \u00e9nergie inf\u00e9rieure pour la premi\u00e8re configuration. C\u2019est pour cette raison qu\u2019\u00e0 partir des ann\u00e9es 2000, les microprocesseurs ont vu leur nombre de c\u0153urs (ou unit\u00e9 de traitement) augmenter. Aujourd\u2019hui, le nombre de c\u0153urs avoisine 20 c\u0153urs par processeur, il y en aura plus dans quelques ann\u00e9es. Augmenter le nombre de c\u0153urs dans un processeur a aussi une limite, qui est la bande passante entre la m\u00e9moire et le processeur. Tous les c\u0153urs d\u2019un microprocesseur partagent un m\u00eame bus pour transf\u00e9rer les informations entre la m\u00e9moire et le microprocesseur.</p> <p></p> <p>(Source: Programmation concurrente (Ma\u00eetrisez le traitement de vos donn\u00e9es en Java) - Laurent Joyeux - Collection Epsilon, 2017)</p> <p> Si tous les c\u0153urs fonctionnent avec la m\u00eame charge de travail, la bande passante par c\u0153ur est la bande passante totale divis\u00e9e par le nombre de c\u0153urs. Plus le nombre de c\u0153urs est important, et plus les c\u0153urs auront tendance \u00e0 attendre les donn\u00e9es. Pour contourner le probl\u00e8me, les microprocesseurs se voient dot\u00e9s d\u2019une m\u00e9moire cache unifi\u00e9e aux diff\u00e9rents c\u0153urs. La m\u00e9moire cache s\u2019intercale entre le microprocesseur et la m\u00e9moire principale. La m\u00e9moire cache r\u00e9duit les \u00e9changes avec la m\u00e9moire principale en maintenant une petite partie des donn\u00e9es de la m\u00e9moire principale dans le cache. Une synchronisation des donn\u00e9es est faite entre le cache et la m\u00e9moire principale pour garder la coh\u00e9rence des donn\u00e9es. La m\u00e9moire cache a aussi le bon go\u00fbt d\u2019\u00eatre beaucoup plus rapide que la m\u00e9moire principale. La m\u00e9moire cache limite les \u00e9changes entre le microprocesseur et la m\u00e9moire principale, dans le cas id\u00e9al, les \u00e9changes se feront principalement entre le cache et le microprocesseur.  Pour augmenter la bande passante entre le microprocesseur et la m\u00e9moire principale, une parade consiste \u00e0 multiplier le nombre de bus entre le microprocesseur et la m\u00e9moire, c\u2019est le cas pour les microprocesseurs r\u00e9cents.  L\u2019av\u00e8nement des microprocesseurs multic\u0153urs ne fait que r\u00e9soudre partiellement le probl\u00e8me li\u00e9 aux limites actuelles. Reste que l\u2019exploitation d\u2019une puissance de calcul r\u00e9partie entre diff\u00e9rents c\u0153urs suppose d\u2019\u00e9crire des logiciels pouvant tirer parti de ces microprocesseurs. C\u2019est un des objets de la programmation concurrente. \u00catre capable d\u2019\u00e9crire un logiciel dans un environnement multiprocesseur. Les multiprocesseurs permettent d\u2019avoir des environnements o\u00f9 diff\u00e9rents programmes sont ex\u00e9cut\u00e9s simultan\u00e9ment. Dans un environnement monoc\u0153ur, les programmes seront, au mieux, ex\u00e9cut\u00e9s l\u2019un apr\u00e8s l\u2019autre de mani\u00e8re exclusive. Ce qui impose plus de rigueur d\u2019\u00e9criture dans un environnement multic\u0153ur...</p>"},{"location":"ialtem/threads/#synthese","title":"Synth\u00e8se","text":"<p>Le besoin d'accro\u00eetre la performance du processeur et la limite mat\u00e9rielle d\u00fbe au silicium, ont conduit \u00e0 l'augmentation des unit\u00e9s de traitement d'un microprocesseur.</p> <p>Cons\u00e9quences:</p> <ul> <li>Cache interne aux unit\u00e9s de traitements</li> <li>Mise \u00e0 jour p\u00e9riodique du cache des coeurs avec la m\u00e9moire centrale. Cette mise \u00e0 jour est effectu\u00e9e par l'OS et \u00e9chappe au programmeur.</li> <li>Partage du m\u00eame bus pour transf\u00e9rer les informations entre la m\u00e9moire et le microprocesseur, induisant des temps de latence.</li> </ul> <p>La plus grande implication est le besoin au niveau applicatif de forcer la synchronisation avec la m\u00e9moire centrale pour garder tous les threads inform\u00e9s de l'\u00e9tat des variables partag\u00e9es.</p> <p></p> <p>En java, cela passe par l'utilisation du mot cl\u00e9 volatile</p>"},{"location":"ialtem/threads/#environnement-multiprocesseur-multi-coeur","title":"Environnement multiprocesseur (multi-coeur)","text":"<p>Le premier syst\u00e8me multiprocesseur commercial, le CDC 6600, a \u00e9t\u00e9 introduit en 1964</p> <ul> <li>Plusieurs processeurs physiques. </li> <li>Plusieurs processus peuvent s'ex\u00e9cuter simultan\u00e9ment, chacun sur un processeur diff\u00e9rent (Vrai parall\u00e9lisme)</li> </ul> <p>==&gt; les serveurs, les supercalculateurs et les applications qui n\u00e9cessitent des performances \u00e9lev\u00e9es</p>"},{"location":"ialtem/threads/#environnement-monothreade","title":"Environnement monothread\u00e9","text":"<p>Un processus principal = 1 thread</p> <p>Si une application monothread\u00e9e tourne dans un environnement multiprocesseur, le syst\u00e8me ne sera pas exploit\u00e9 \u00e0 son plein potentiel. Comment r\u00e9gler ce probl\u00e8me...  c'est possible avec les applications multithread\u00e9s.</p>"},{"location":"ialtem/threads/#environnement-multithreade","title":"Environnement multithread\u00e9","text":"<p>Un processus principal et plusieurs fourches</p> <p>Thread = fil d'ex\u00e9cution de code, \u00e0 l'int\u00e9rieur d'un processus, et qui a la possibilit\u00e9 d'\u00eatre ordonnanc\u00e9.</p> <ul> <li> <p>Un programme multithread\u00e9 profite des capacit\u00e9s multicoeurs du microprocesseur et du parall\u00e9lisme des t\u00e2ches.</p> </li> <li> <p>chacun thread dispose d'une pile et d'un pointeur de programme</p> </li> </ul> <p>Attention: Remarquez qu'une application multithread\u00e9e peut bien tourner dans un environnement monoprocesseur (avec la pr\u00e9sence de coeur logique).</p>"},{"location":"ialtem/threads/#processus-et-threads","title":"Processus et Threads","text":"<p>Ce qu'il faut retenir: </p> <ul> <li> <p>Tout processus a un thread principal, depuis lequel d\u2019autres threads peuvent \u00eatre lanc\u00e9s, dans le cas d'une application multi-thread.</p> </li> <li> <p>les threads partagent le m\u00eame espace d'adressage que le processus qui les a lanc\u00e9s. Cela permet aux threads d'acc\u00e9der aux m\u00eames donn\u00e9es et aux m\u00eames ressources.</p> </li> </ul> <p>Maintenant que nous savions ce que c'est qu'un thread et un processus sans entrer dans les d\u00e9tails de leurs cycles de vie, laissez moi vous pr\u00e9senter le Big Boss \ud83d\ude0e au niveau du syst\u00e8me d'exploitation qui g\u00e8re tous processus et leurs fils (threads). Le syst\u00e8me d'exploitation peut utiliser diff\u00e9rentes strat\u00e9gies d'allocation des threads aux c\u0153urs pour optimiser l'utilisation des ressources mat\u00e9rielles gr\u00e2ce au scheduler et nous verrons que cela peut poser quelques probl\u00e8mes lors de l'ex\u00e9cution des programmes multithread\u00e9s.</p>"},{"location":"ialtem/threads/#le-scheduler","title":"Le Scheduler","text":"<p>C'est le chef d'orchestre, un composant logiciel du syst\u00e8me d'exploitation. C'est lui qui d\u00e9cide quel processus (ou thread) a acc\u00e8s \u00e0 quelle ressources, quand, comment, pendant combien de temps. Il fait aussi pas mal d'autres choses...</p> <p>Ce qui nous int\u00e9resse :</p> <ul> <li>le scheduler maintient une liste de processus et de threads \u00e0 faire tourner;</li> <li>il d\u00e9cide - \u00e0 une fr\u00e9quence assez \u00e9lev\u00e9e - de leur donner la main \u00e0 tour de r\u00f4le;</li> <li>simplement il faut bien r\u00e9aliser qu'\u00e0 ce stade, ce que manipule le scheduler, c'est essentiellement du code binaire, tr\u00e8s proche du processeur, apr\u00e8s toutes les phases de compilation et optimisation.</li> </ul> <p>Pour y arriver il doit adopter une strat\u00e9gie. C'est ce que nous appellons l'ordonnancement. Les deux grandes familles d'ordonnancement sont pr\u00e9sent\u00e9es ci-dessous.</p>"},{"location":"ialtem/threads/#les-types-dordonnancement","title":"Les types d'ordonnancement","text":""},{"location":"ialtem/threads/#ordonnancement-collaboratif","title":"Ordonnancement collaboratif","text":"<ul> <li> <p>les t\u00e2ches ne sont pas interruptibles: elles rendent la main lorsqu'elles ont fini ou lors de certains appels syst\u00e8mes particuliers.</p> </li> <li> <p>Les t\u00e2ches critiques sont prot\u00e9g\u00e9es.</p> </li> </ul> <p>==&gt; MsDos et Windows 3.1 utilisaient un ordonnancement collaboratif</p> <p>==&gt; Windows 95, 98 utilisaient un mode collaboratif pour certaines t\u00e2ches.</p> <p>\ud83e\udd13 Que se passe t'il lorsqu'une t\u00e2che entre dans une boucle infinie ou dure trop longtemps dans ce type d'ordonnancement ?</p> <p>\ud83d\ude32 je vous laisse deviner.</p>"},{"location":"ialtem/threads/#ordonnancement-preemptif","title":"Ordonnancement pr\u00e9emptif","text":"<ul> <li> <p>Le syst\u00e8me peut interrompre une t\u00e2che \u00e0 tout moment pour switcher \u00e0 un autre thread</p> </li> <li> <p>Le syst\u00e8me n'est pas bloqu\u00e9 par certaines t\u00e2ches trop longues</p> </li> <li> <p>Mais cela pose probl\u00e8me pour les t\u00e2ches critiques qui ne doivent pas \u00eatre interrompues.</p> </li> </ul> <p>==&gt; Windows NT, XP et suivants, Unix, Linux, MacOs utilisent un ordonnancement pr\u00e9emptif</p> <p>Vous auriez deviner, nos syst\u00e8mes d'exploitations modernes utisent l'ordonnonancement pr\u00e9emptif. Cependant l'ordonnancement collaboratif est d'actualit\u00e9 dans certains contexte.</p> <p>\ud83e\udd14 Et comment le scheduler op\u00e8re le basculement entre t\u00e2ches.</p>"},{"location":"ialtem/threads/#le-context-switches","title":"Le context switches","text":"<p>(Cette section est extrait du FUN Mooc: Les fondamentaux aux concepts avanc\u00e9s du language - Semaine 8)</p> <p>Tr\u00e8s bonne question.</p> <p>L'instant o\u00f9 le scheduler d\u00e9cide de suspendre l'ex\u00e9cution d'un processus - ou thread - pour donner la main \u00e0 un autre, s'appelle un context switch; on parle de process switch lorsqu'on passe d'un processus \u00e0 un autre, et de task switch ou thread switch lorsqu'on passe d'un thread \u00e0 un autre \u00e0 l'int\u00e9rieur d'un processus.</p> <p>Le point important pour nous, c'est que le scheduler est un morceau de code g\u00e9n\u00e9rique, il fait donc son travail de mani\u00e8re neutre pour tous les processus ou threads, ind\u00e9pendamment du langage par exemple, ou du domaine d'application; et que le d\u00e9coupage du temps en slots allou\u00e9s aux diff\u00e9rents joueurs se fait bien \u00e9videmment sur la base des instuctions \u00e9l\u00e9mentaires du processeur - ce qu'on appelle les cycles.</p> <p>\ud83e\udd71 Tu veux en venir o\u00f9 avec toutes ces informations ?</p> <p>Ph\u00e9nom\u00e8ne g\u00e9n\u00e9ral</p> <p>Le probl\u00e8me principal ici est li\u00e9 \u00e0 l'absence de contr\u00f4le, par le programmeur, sur les context switchings; et du coup ceux-ci peuvent intervenir \u00e0 n'importe quel moment. Cela cr\u00e9e parfois de mauvaises surprises.</p> <p>De mani\u00e8re g\u00e9n\u00e9rale :</p> <ul> <li> <p>dans un langage de programmation un tout petit peu \u00e9volu\u00e9, un fragment de code (m\u00eame r\u00e9duit \u00e0 une instruction i++; --i; ...) se traduit presque toujours en plusieurs instructions binaires pour le processeur</p> </li> <li> <p>pour que le programme fonctionne correctement dans un mode multi-thread, certains fragments de code (permutation, virement bancaire ...), et notamment ceux qui acc\u00e8dent \u00e0 de la m\u00e9moire partag\u00e9e, doivent \u00eatre ex\u00e9cut\u00e9s de fa\u00e7on atomique (c-\u00e0-d ne pas \u00eatre interrompus en plein milieu par le scheduler)</p> </li> <li> <p>et sans aide du programmeur, le scheduler n'a aucun moyen de savoir o\u00f9, dans le flot d'instruction binaires, il est l\u00e9gitime ou pas de faire un context switching.</p> </li> </ul> <p>Solutions</p> <p>Pour rendre la programmation par thread utilisable en pratique, il faut lui adjoindre des m\u00e9canismes, accessibles au programmeur, pour rendre explicite ce type de probl\u00e8me.</p> <p>La notion la plus simple de ces m\u00e9canismes est celle de verrou pour impl\u00e9menter une exclusion mutuelle.</p> <p>En Java, cela passe par l'utilisation du mot cl\u00e9 synchronized.. D'autres m\u00e9chanismes existent comme les s\u00e9maphores que nous aborderons un peu plus loin.</p>"},{"location":"ialtem/threads/#resume","title":"R\u00e9sum\u00e9","text":"<p>Le besoin de faire de la programmation parall\u00e8le et d'exploiter les potentialit\u00e9s des nouvelles machines ont conduit \u00e0 l'utilisation des threads. Cependant cela implique la gestion de la synchronisation des ressources et variables partag\u00e9es (avec des m\u00e9canismes de programmation: mots cl\u00e9s volatile et synchronized en java) afin d'\u00e9viter les probl\u00e8mes de: deadlock, race condition, starvation, dormancy ... Des pistes de r\u00e9solutions de ces probl\u00e8mes seront discut\u00e9es un peu plus loin.</p>"},{"location":"ialtem/threads/#ressource-et-zone-critique","title":"Ressource et zone critique","text":""},{"location":"ialtem/threads/#ressource","title":"Ressource","text":"<p>Entit\u00e9 dont un thread ou un processus a besoin pour fonctionner</p> <ul> <li>ressource mat\u00e9rielle (p\u00e9riph\u00e9riques, processeur)</li> <li>ressource logicielle (variables)</li> </ul>"},{"location":"ialtem/threads/#section-critique","title":"Section critique","text":"<p>Partie d\u2019un programme dont l\u2019exe\u0301cution de doit pas s\u2019entrelacer avec d\u2019autres programmes.</p> <p>Une fois qu\u2019une ta\u0302che y entre, il faut lui permettre de terminer cette section sans permettre a\u0300d\u2019autres ta\u0302ches de travailler sur les me\u0302mes donne\u0301es.</p>"},{"location":"ialtem/threads/#attentes-passive-et-active","title":"Attentes passive et active","text":"<ul> <li> <p>Attente active: impl\u00e9ment\u00e9e avec une boucle, le thread requ\u00eate en boucle l'acc\u00e8s \u00e0 la ressource jusqu'au son obtention. Cette attente est gourmande en CPU.</p> </li> <li> <p>Attente passive: le thread lib\u00e8re le CPU en attendant que la ressource ne soit disponible donnant ainsi la chance \u00e0 d'autre thread de tenter leur chance. Impl\u00e9menter gr\u00e2ce au m\u00e9canisme de wait();</p> </li> </ul>"},{"location":"ialtem/threads/#mecanisme-classique-de-synchronization","title":"M\u00e9canisme classique de synchronization","text":""},{"location":"ialtem/threads/#volatile","title":"Volatile","text":"<p>1. Utilit\u00e9 de volatile: L'utilisation du mot cl\u00e9 volatile force l'\u00e9criture de la valeur d'une variable en m\u00e9moire ainsi que sa relecture. Si une variable n'est pas partag\u00e9e entre plusieurs threads, il n'est pas n\u00e9cessaire d'utiliser le mot-cl\u00e9 volatile.</p> <p>2. Garantie de lisibilit\u00e9: Le mot cl\u00e9 volatile ne r\u00e9alise aucune op\u00e9ration pour garantir la gestion des acc\u00e8s concurrents : elle offre juste une garantie sur la visibilit\u00e9.</p> <p>3. Utilisation: Le mot cl\u00e9 volatile s'utilise sur la d\u00e9claration d'une variable. Il n'est pas possible de l'utiliser sur une m\u00e9thode ou une classe. L\u2019utilisation de volatile n\u2019a de sens que sur les types basiques primaires (boolean, byte, char, short, int, long, float et double). L'utilisation de volatile directement sur l'objet n'a pas toujours un effet aussi pr\u00e9visible ou souhaitable. Cela est d\u00fb au fait que volatile garantit la visibilit\u00e9 des changements de la r\u00e9f\u00e9rence \u00e0 l'objet, mais pas n\u00e9cessairement des changements internes \u00e0 l'objet lui-m\u00eame. </p> <p>5. Atomicit\u00e9 des instructions complexes: Volatile ne garantit pas l'atomicit\u00e9 des op\u00e9rations complexes.</p> <p>6. Acc\u00e8s concurrent lecture/\u00e9criture: En acc\u00e8s concurrent \u00e0 une variable volatile, une demande de lecture ne sera accord\u00e9e qu'une fois l'op\u00e9ration d'\u00e9criture en cours termin\u00e9e.</p> <p>Pour des op\u00e9rations atomiques sur des objets complexes, Java propose d'autres m\u00e9canismes tels que les verrous (synchronized) ou l'utilisation de classes du package java.util.concurrent. Ces m\u00e9canismes garantissent \u00e0 la fois la visibilit\u00e9 des changements et l'atomicit\u00e9 des op\u00e9rations complexes. </p> <p>Exemple d'utilisation de volatile:</p> <pre><code>public class Foo extends Thread{\n\n    private volatile boolean close = false;\n\n    public void run(){\n        while(!close){\n            // do work\n        }\n    }\n\n    public void close(){\n        close = true;\n    }\n\n}\n</code></pre>"},{"location":"ialtem/threads/#synchronized","title":"Synchronized","text":"<p>Le mot cl\u00e9 synchronized :</p> <ul> <li> <p>contr\u00f4le les modifications de variables partag\u00e9es au sein d'une zone critique. Cela assure qu' \u00e0 chaque instant, un seul thread peut ex\u00e9cuter et modifier des variables dans zone critique les autres threads attendront leur tour.</p> </li> <li> <p>permet de demander l'acquisition d'un moniteur</p> </li> </ul> <p>Les trois mani\u00e8res d'utiliser synchronized sont mis en \u00e9vidence</p> <pre><code>public class Bridge {\n\n    private Object key =  new Object() ;\n\n    // m\u00e9thode statique synchronis\u00e9e, le param\u00e8tre de synchronisation est \n    // l'objet Bridge.class\n    public static synchronized boolean getCapacity() {\n\n       // corps de la m\u00e9thode\n    }\n\n    // m\u00e9thode non statique synchronis\u00e9e, le param\u00e8tre de synchronisation est\n    // l'objet this\n    public synchronized boolean enter() {\n\n       // corps de la m\u00e9thode\n    } \n\n    public boolean getout() {\n\n       // synchronization sur l'objet key\n       // on peut aussi synchroniser sur l'objet this\n       synchronized(key) {\n\n          // bloc synchronis\u00e9\n       }\n    }\n}\n</code></pre>"},{"location":"ialtem/threads/#exemple-de-la-classe-singleton","title":"Exemple de la classe singleton","text":"<pre><code>public class Singleton {\n\n    // volatile variable\n    public static volatile Singleton _instance ;\n\n    public  getInstance() {\n        if(_instance == null){\n            synchronized(Singleton.class){\n                if(_instance == null){\n                    _instance = new Singleton();\n                }\n            }\n        }\n\n       return _instance;\n    }\n}\n</code></pre> <ul> <li> <p>Le mot-cl\u00e9 volatile est appliqu\u00e9 \u00e0 la r\u00e9f\u00e9rence de l'instance unique du Singleton, et non directement \u00e0 l'objet complexe lui-m\u00eame. C'est cette r\u00e9f\u00e9rence qui doit \u00eatre garantie comme visible entre les threads. </p> </li> <li> <p>Cette approche, appel\u00e9e Double-Checked Locking with Volatile, vise \u00e0 optimiser les performances en \u00e9vitant le co\u00fbt du verrouillage \u00e0 chaque appel de la m\u00e9thode getInstance, tout en garantissant une initialisation s\u00fbre dans un environnement multithread\u00e9 gr\u00e2ce \u00e0 l'utilisation de volatile. </p> </li> </ul>"},{"location":"ialtem/threads/#strategies-avancees-de-synchronisation","title":"Strat\u00e9gies avanc\u00e9es de synchronisation","text":"<p>Les mutex et les s\u00e9maphores sont des m\u00e9canismes de synchronisation utilis\u00e9s dans la programmation concurrente pour assurer un acc\u00e8s s\u00e9curis\u00e9 aux ressources partag\u00e9es entre plusieurs threads.</p>"},{"location":"ialtem/threads/#mutex","title":"Mutex","text":"<p>Un mutex (mutual exclusion) signifie que l'acc\u00e8s \u00e0 la ressource est mutuellement exclusif pour les threads.</p>"},{"location":"ialtem/threads/#exemple-en-java","title":"Exemple en Java","text":"<pre><code>public class ExempleMutex {\n\n    // Le verrou ou mutex\n    private final Lock mutex = new ReentrantLock();\n\n    public void methodeCritique(){\n        mutex.lock(); // P(mutex) : entr\u00e9e en section critique\n        try{\n            // Section critique : acc\u00e8s s\u00e9curis\u00e9 \u00e0 la ressource partag\u00e9e\n        } finally{\n            mutex.unlock(); // V(mutex): sortie de la section critique\n        }\n    }\n}\n</code></pre> <p>Pour le mutex, le compteur est 1.</p> <ul> <li>l'op\u00e9ration P (proberen, signifiant \"essayer\" en n\u00e9erlandais) d\u00e9cr\u00e9mente le compteur;</li> <li>l'oparation V (verhogen, signifiant \"augmenter\" en n\u00e9erlandais) l'incr\u00e9mente</li> </ul>"},{"location":"ialtem/threads/#pseudo-implementation-ideale-dun-mutex","title":"Pseudo impl\u00e9mentation id\u00e9ale d'un mutex","text":"<pre><code>int libre = 1;\nfifo liste_attente;\n\nlock(){  // synchronized\n    while(1){\n        if(libre){\n            libre = 0;\n            return;\n        }\n        liste_attente.ajouter(thread_courant());\n        wait(); // Met en attente le thread courant\n    }\n}\n\nunlock(){ // synchronized\n    if(liste_attente.non_vide()){\n        signal(liste_attente.retirer())\n    }else{\n        libre = 1;\n    }\n}\n</code></pre>"},{"location":"ialtem/threads/#semaphore","title":"S\u00e9maphore","text":"<p>Un s\u00e9maphore est un m\u00e9canisme plus g\u00e9n\u00e9ral que le mutex et peut \u00eatre utilis\u00e9 pour contr\u00f4ler l'acc\u00e8s \u00e0 un nombre fixe de ressources simultan\u00e9ment.</p> <p>Pour contr\u00f4ler l'acc\u00e8s \u00e0 un fichier, un s\u00e9maphore peut \u00eatre utilis\u00e9 pour compter le nombre de threads qui acc\u00e8dent au fichier. Lorsque le nombre de threads atteint un certain seuil, le s\u00e9maphore peut \u00eatre utilis\u00e9 pour bloquer les nouveaux threads qui tentent d'acc\u00e9der au fichier.</p> <pre><code>public class File {\n\n    // S\u00e9maphore initialis\u00e9 avec un compteur de 3\n    private final Semaphore sem = new Semaphore(3); // limite \u00e0 3 jetons\n\n    public void open(){\n        sem.acquire(); // P op\u00e9ration\n        try{\n            // Section critique : acc\u00e8s s\u00e9curis\u00e9 \u00e0 la ressource partag\u00e9e\n        } finally{\n            sem.release(); // V op\u00e9ration\n        }\n    }\n}\n</code></pre> <p>Dans cet exemple, le s\u00e9maphore est initialis\u00e9 avec une limite de 3. Trois threads peuvent acqu\u00e9rir le s\u00e9maphore simultan\u00e9ment, mais les suivants doivent attendre qu'au moins un thread lib\u00e8re le s\u00e9maphore en ex\u00e9cutant l'op\u00e9ration release.</p>"},{"location":"ialtem/threads/#mutex-moniteur-semaphore","title":"Mutex - Moniteur - Semaphore","text":"<p>\ud83d\udcc4 Diff\u00e9rence entre Mutex - Moniteur - Semaphore</p>"},{"location":"ialtem/threads/#problemes-liveness","title":"Probl\u00e8mes (Liveness)","text":""},{"location":"ialtem/threads/#deadlock","title":"Deadlock \u274c","text":"<p>Un deadlock est une situation dans laquelle deux ou plusieurs threads sont bloqu\u00e9s l'un l'autre, emp\u00eachant chacun de terminer son ex\u00e9cution. Cela se produit lorsque chaque thread d\u00e9tient une ressource dont l'autre thread a besoin pour continuer \u00e0 s'ex\u00e9cuter.</p> <p>Pr\u00e9ventions</p> <p>Voici quelques conseils pour pr\u00e9venir les deadlocks :</p> <ul> <li>Utilisez des m\u00e9canismes de synchronisation appropri\u00e9s. Les m\u00e9canismes de synchronisation comme les mutex et les s\u00e9maphores peuvent \u00eatre utilis\u00e9s pour contr\u00f4ler l'acc\u00e8s aux ressources partag\u00e9es. Il est important d'utiliser le m\u00e9canisme de synchronisation appropri\u00e9 pour la situation.</li> <li>\u00c9vitez les verrous circulaires. Un verrou circulaire se produit lorsqu'un thread d\u00e9tient un verrou sur une ressource qui est d\u00e9tenue par un autre thread qui d\u00e9tient un verrou sur la premi\u00e8re ressource. Les verrous circulaires peuvent entra\u00eener des deadlocks.</li> <li>Planifiez les threads de mani\u00e8re efficace. Le syst\u00e8me d'exploitation peut d\u00e9cider de mettre un thread en veille si d'autres threads sont plus prioritaires. Pour \u00e9viter cela, planifiez les threads de mani\u00e8re \u00e0 ce que les threads les plus importants soient ex\u00e9cut\u00e9s en premier.</li> </ul>"},{"location":"ialtem/threads/#race-condition","title":"Race condition \u274c","text":"<p>Une race condition est une condition dans un programme multithread o\u00f9 le r\u00e9sultat de l'ex\u00e9cution du programme d\u00e9pend de l'ordre dans lequel les threads s'ex\u00e9cutent. Les race conditions peuvent entra\u00eener des erreurs, des donn\u00e9es corrompues ou un comportement inattendu.</p> <p>Une race condition peut se produire lorsqu'un ou plusieurs threads acc\u00e8dent \u00e0 la m\u00eame variable ou ressource partag\u00e9e. Si les threads acc\u00e8dent \u00e0 la variable ou \u00e0 la ressource en m\u00eame temps, le r\u00e9sultat de l'ex\u00e9cution du programme peut \u00eatre diff\u00e9rent de celui qui serait obtenu si les threads s'ex\u00e9cutaient s\u00e9quentiellement.</p> <p>Voici quelques exemples de race conditions :</p> <ul> <li>Deux threads qui tentent d'\u00e9crire la m\u00eame valeur dans une variable partag\u00e9e.</li> <li>Deux threads qui tentent de lire la m\u00eame variable partag\u00e9e sans utiliser de m\u00e9canisme de synchronisation.</li> <li>Deux threads qui tentent de supprimer un \u00e9l\u00e9ment d'une liste partag\u00e9e.</li> </ul> <p>Les race conditions peuvent \u00eatre difficiles \u00e0 diagnostiquer et \u00e0 d\u00e9boguer. Il est important de comprendre les causes des race conditions et les mesures \u00e0 prendre pour les pr\u00e9venir.</p> <p>Pr\u00e9ventions</p> <ul> <li>Utilisez des variables ou des ressources partag\u00e9es de mani\u00e8re exclusive.</li> </ul>"},{"location":"ialtem/threads/#starvation","title":"Starvation \u274c","text":"<p>Un thread est incapable d'acc\u00e9der \u00e0 des ressources partag\u00e9es pendant une p\u00e9riode prolong\u00e9e, ce qui emp\u00eache le thread de s'ex\u00e9cuter et de terminer ses t\u00e2ches. Cela peut se produire lorsqu'un thread a une priorit\u00e9 plus faible que les autres threads ou lorsque d'autres threads utilisent constamment les ressources partag\u00e9es.</p> <p>Voici quelques exemples de conditions qui peuvent entra\u00eener de la starvation :</p> <ul> <li>Un thread avec une priorit\u00e9 faible a constamment acc\u00e8s \u00e0 des ressources partag\u00e9es.</li> <li>Plusieurs threads acc\u00e8dent constamment \u00e0 la m\u00eame ressource partag\u00e9e, emp\u00eachant d'autres threads d'y acc\u00e9der.</li> <li>Un thread utilise une boucle infinie pour acc\u00e9der \u00e0 une ressource partag\u00e9e, emp\u00eachant d'autres threads d'y acc\u00e9der. (Attente active)</li> </ul> <p>Pr\u00e9ventions</p> <ul> <li>Utilisez des politiques de planification qui accordent des ressources aux threads en fonction de leur priorit\u00e9.</li> <li>Utilisez des m\u00e9canismes de synchronisation (mutex, semaphores) pour emp\u00eacher les threads d'acc\u00e9der aux ressources partag\u00e9es lorsqu'elles ne sont pas disponibles.</li> <li>\u00c9vitez d'utiliser des boucles infinies pour acc\u00e9der aux ressources partag\u00e9es.</li> </ul>"},{"location":"ialtem/threads/#dormancy","title":"Dormancy \u274c","text":"<p>Un thread dormant est un thread qui a \u00e9t\u00e9 plac\u00e9 dans un \u00e9tat d'attente par le syst\u00e8me d'exploitation. Cela signifie que le thread n'ex\u00e9cute pas de code actuellement, mais attend toujours qu'un \u00e9v\u00e9nement sp\u00e9cifique se produise avant de pouvoir reprendre l'ex\u00e9cution. Trop de dormance est un probl\u00e8me</p> <p>Les raisons de la dormance</p> <p>Il existe plusieurs raisons pour lesquelles un thread peut \u00eatre plac\u00e9 dans un \u00e9tat dormant :</p> <ul> <li> <p>En attente de la fin d'une op\u00e9ration d'E/S : Lorsqu'un thread \u00e9met une demande d'E/S, telle que la lecture d'un fichier ou d'une prise de socket r\u00e9seau, le thread est g\u00e9n\u00e9ralement plac\u00e9 dans un \u00e9tat dormant jusqu'\u00e0 ce que l'op\u00e9ration d'E/S soit termin\u00e9e. C'est parce que le thread ne peut pas continuer \u00e0 s'ex\u00e9cuter tant que les donn\u00e9es demand\u00e9es ne sont pas disponibles.</p> </li> <li> <p>En attente d'un \u00e9v\u00e9nement de synchronisation : Les threads peuvent \u00e9galement \u00eatre plac\u00e9s dans un \u00e9tat dormant pour attendre un \u00e9v\u00e9nement de synchronisation, tel qu'un s\u00e9maphore ou un mutex pour devenir disponible. Cela est utilis\u00e9 pour contr\u00f4ler l'acc\u00e8s aux ressources partag\u00e9es et garantir qu'un nombre multiple de threads n'acc\u00e8de pas \u00e0 la m\u00eame ressource en m\u00eame temps.</p> </li> <li> <p>En attente de la survenue d'une condition sp\u00e9cifique : Les threads peuvent \u00e9galement \u00eatre plac\u00e9s dans un \u00e9tat dormant pour attendre la survenue d'une condition sp\u00e9cifique. Cela est souvent utilis\u00e9 pour impl\u00e9menter des d\u00e9lais d'expiration ou d'autres formes d'ex\u00e9cution conditionnelle.</p> </li> </ul> <p>Pr\u00e9ventions</p> <ul> <li>D\u00e9finir un d\u00e9lai de l'attente passive en pr\u00e9cisant en java le temps d'attente du thread au bout lequel il se r\u00e9veillera sans aucun \u00e9v\u00e9nement externe</li> </ul> <pre><code>wait(3000); // Environ 3s\n</code></pre> <ul> <li>S'assurez que le thread ne restera pas endormi un wait() doit \u00eatre suivi d'un notify() ou d'un notifyAll()</li> </ul>"},{"location":"ialtem/threads/#aller-plus-loin","title":"Aller plus loin \u274c","text":""},{"location":"ialtem/threads/#api-java-de-gestion-de-la-concurrence","title":"API java de gestion de la concurrence","text":""},{"location":"ialtem/threads/#programmation-asynchrone","title":"Programmation asynchrone","text":""},{"location":"ialtem/threads/#liens-utiles","title":"Liens utiles","text":"<ul> <li> <p>\ud83d\udcc4 Sp\u00e9cification JAVA SE threads et locks</p> </li> <li> <p>\ud83d\udcc4 What is the volatile keyword useful for</p> </li> <li> <p>\ud83d\udcc4 Programmation concurrente (Ma\u00eetrisez le traitement de vos donn\u00e9es en Java Java) - Laurent Joyeux - Collection Epsilon, 2017</p> </li> <li> <p> Programmation concurrente - Multithreading et traitement d'informations en Java (ENI) de Thomas Broussard</p> </li> <li> <p> Probl\u00e8mes de synchronisation</p> </li> <li> <p> Probl\u00e8me des lecteurs et r\u00e9dacteurs </p> </li> <li> <p> Probl\u00e8me des philosophes </p> </li> <li> <p> Probl\u00e8me des producteurs et consommateurs</p> </li> <li> <p>\ud83d\udcc4 Probl\u00e8me de famine</p> </li> <li> <p>\ud83d\udcc4 Blog Paumard</p> </li> <li> <p>\ud83d\udcc4 Handout programmation concurrente</p> </li> </ul>"},{"location":"infob318/","title":"Overview","text":"<ul> <li>Git</li> </ul>"},{"location":"labil/","title":"Overview","text":"<ul> <li> <p>Git</p> </li> <li> <p>Docker</p> </li> <li> <p>Spring &amp; Spring boot</p> </li> </ul>"}]}